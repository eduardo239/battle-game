{"version":3,"sources":["pages/Start.js","utils/constants.js","components/game/card/Hero.js","context/Game.js","context/Hero.js","utils/index.js","pages/SelectHero.js","components/game/card/Item.js","pages/SelectItem.js","utils/game.js","components/game/card/Map.js","pages/SelectMap.js","components/game/card/HeroInline.js","components/game/Dice.js","components/ui/ConfirmModal.js","components/game/GameButtons.js","components/game/GameMenu.js","components/game/position/Position.js","components/game/position/Timeline.js","components/game/card/Weapon.js","components/ui/Toast.js","components/game/modal/Shop.js","components/game/card/Trap.js","components/game/modal/Trap.js","components/game/modal/fight/Log.js","components/game/modal/fight/Turn.js","components/game/modal/fight/Play.js","components/game/modal/fight/Fight.js","components/game/modal/fight/LevelUp.js","components/game/modal/UserItems.js","components/game/card/Magic.js","components/game/modal/fight/Magic.js","components/game/modal/Fight.js","components/game/modal/Gift.js","components/game/card/Code.js","components/game/modal/Code.js","components/game/card/Chest.js","components/game/modal/Chest.js","pages/Game.js","App.js","index.js"],"names":["Start","react_default","a","createElement","className","react_router_dom","to","NULL","ENEMY","ITEM","TRAP","LEVEL_BASE","LEVEL_EASY","concat","URL_IMG_GH","URL_UNK","Card","_ref","data","handleClick","hit","_ref$type","type","price","health","src","poster","alt","name","mana","onClick","GameContext","React","createContext","GameProvider","Provider","ContextGame","children","_useState","useState","_useState2","Object","slicedToArray","maps","setMaps","_useState3","_useState4","magic","setMagic","_useState5","_useState6","traps","setTraps","_useState7","_useState8","items","setItems","_useState9","_useState10","chests","setChests","_useState11","_useState12","heroes","setHeroes","_useState13","_useState14","weapons","setWeapos","_useState15","_useState16","enemies","setEnemies","_useState17","_useState18","item","setItem","_useState19","_useState20","enemy","setEnemy","_useState21","_useState22","fightLog","setFightLog","_useState23","_useState24","map","setMap","_useState25","_useState26","randomItem","setRandomItem","_useState27","_useState28","randomTrap","setRandomTrap","_useState29","_useState30","randomChest","setRandomChest","_useState31","_useState32","dice","setDice","_useState33","mapPositions","mapLength","heroPosition","end","playing","_useState34","game","setGame","_useState35","round","modalInventory","turn","winner","heroAttack","enemyAttack","_useState36","fight","setFight","useEffect","mounted","length","heroes_api","items_api","maps_api","enemies_api","weapons_api","magic_api","traps_api","chest_api","value","resetGame","resetFight","resetRandomItem","resetRandomTrap","getRandomItem","arr","Math","floor","random","HeroContext","HeroProvider","ContextHero","hero","setHero","min","max","isObjectEmpty","obj","keys","getNextLevel","base","pow","SelectHero","useContext","_useContext2","Hero","key","_nxt","level","objectSpread","nextLevel","handleSelectThis","splice","disabled","rarity","SelectItem","_useContext","handleSelect","id","uuidv4","equipped","weapon","Item","messageHandler","message","setMessage","timer","arguments","undefined","content","setTimeout","Map","size","SelectMap","navigate","useNavigate","card_Map","positions","i","_positions$push","push","defineProperty","init","boss","pos1","pos2","x","code","chest","generatePositions","error","console","warn","HeroInline","gold","exp","Dice","ConfirmModal","active","cancel","GameButtons","play","reset","setModalItem","setModalShop","modalShop","modalItem","resetModal","setResetModal","Fragment","ui_ConfirmModal","GameMenu","game_Dice","game_GameButtons","Position","index","Timeline","position","position_Position","Toast","show","Shop","handleBuy","newGold","newItems","toConsumableArray","Weapon","ui_Toast","Trap","setModalTrap","card_Trap","_dpf","alert","handleTrap","Log","log","JSON","stringify","reverse","Turn","Play","flee","setModalUserMagic","Fight","LevelUp","activeClass","setActiveClass","UserItems","arrItems","filter","_itx","poison","handleUse","ModalMagic","modalUserMagic","handleUseMagic","Magic","ModalFight","setModalFight","_rxn","_sta","enemyTurn","nextExp","_exl","victories","fight_LevelUp","fight_Turn","fight_Fight","fight_Play","equippedWeapon","weaponDamage","_stq","fight_Log","modal_UserItems","fight_Magic","magicDamage","ModalItem","setModalGiftItem","_nwi","handleGet","Code","setModalCode","card_Code","setPassword","password","autoFocus","onChange","e","target","Chest","setModalChest","card_Chest","Game","modalFight","modalGiftItem","modalTrap","modalCode","modalChest","updatedDice","setUpdatedDice","actualPosition","card_HeroInline","position_Timeline","modal_Shop","modal_Fight","Gift","modal_Trap","modal_Code","modal_Chest","game_GameMenu","_counter","interval","setInterval","clearInterval","diceAnimation","App","react_router","exact","path","element","pages_Start","pages_SelectHero","pages_SelectItem","pages_SelectMap","pages_Game","ReactDOM","createRoot","document","getElementById","render","StrictMode","Game_ContextGame","Hero_ContextHero","basename","process","src_App"],"mappings":"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","file":"static/js/main.0918ae62.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Start = () => {\r\n  return (\r\n    <div className=\"center-center\">\r\n      <Link to=\"/select-hero\">\r\n        <button>\r\n          iniciar{' '}\r\n          <span className=\"material-symbols-outlined\">chevron_right</span>\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","export const NULL = 'null';\r\nexport const ENEMY = 'enemy';\r\nexport const ITEM = 'item';\r\nexport const TRAP = 'trap';\r\nexport const BOSS = 'boss';\r\nexport const INIT = 'init';\r\nexport const CODE = 'code';\r\nexport const CHEST = 'chest';\r\n\r\nexport const BOMB = 'bomb';\r\n\r\nexport const LEVEL_BASE = [NULL, ENEMY, TRAP, ITEM];\r\nexport const LEVEL_EASY = [NULL, ENEMY, ENEMY, ITEM, TRAP].concat(LEVEL_BASE);\r\nexport const LEVEL_MEDIUM = [NULL, ENEMY, ENEMY, ENEMY, ITEM].concat(\r\n  LEVEL_BASE\r\n);\r\n// TEST\r\n// export const LEVEL_EASY = [CODE, CHEST];\r\n\r\nexport const LEVEL_HARD = 'hard';\r\n\r\nexport const MANA = 'mana';\r\nexport const HEALTH = 'health';\r\nexport const POISON = 'poison';\r\n\r\nexport const SUCCESS = 'success';\r\nexport const WARNING = 'warning';\r\nexport const ERROR = 'error';\r\n\r\nexport const URL_IMG = 'http://localhost:3000/images/';\r\nexport const URL_IMG_GH =\r\n  'https://raw.githubusercontent.com/eduardo239/card-game/main/public/images/';\r\nexport const URL_EMP = 'empty_card.png';\r\nexport const URL_UNK = 'unknow_card.png';\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, hit, type = 'none' }) => {\r\n  if (data)\r\n    return (\r\n      <div className={`card enemy-hit hero-hit ${hit ? 'activate' : ''}`}>\r\n        {type === 'shop' && <span>{data.price}</span>}\r\n        <div\r\n          className={`card-image ${data.health <= 0 ? 'filter-grayscale' : ''}`}\r\n        >\r\n          <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <span>NA: {data.name}</span>\r\n          <span>TY: {data.type}</span>\r\n          <span className={`${data.health < 25 ? 'color-error' : ''}`}>\r\n            HP: {data.health}\r\n          </span>\r\n          {data.mana && <span>MP: {data.mana}</span>}\r\n        </div>\r\n        {type === 'shop' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            buy\r\n          </button>\r\n        )}\r\n        {type === 'use' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            use\r\n          </button>\r\n        )}\r\n        {type === 'select' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            selecionar\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport heroes_api from '../api/heroes.json';\r\nimport items_api from '../api/items.json';\r\nimport maps_api from '../api/maps.json';\r\nimport enemies_api from '../api/enemies.json';\r\nimport magic_api from '../api/magic.json';\r\nimport weapons_api from '../api/weapons.json';\r\nimport traps_api from '../api/traps.json';\r\nimport chest_api from '../api/chest.json';\r\n\r\nimport { CHEST, ITEM, TRAP } from '../utils/constants';\r\n\r\nconst GameContext = React.createContext();\r\nconst GameProvider = GameContext.Provider;\r\n\r\nconst ContextGame = ({ children }) => {\r\n  const [maps, setMaps] = useState([]);\r\n  const [magic, setMagic] = useState([]);\r\n  const [traps, setTraps] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n  const [chests, setChests] = useState([]);\r\n  const [heroes, setHeroes] = useState([]);\r\n  const [weapons, setWeapos] = useState([]);\r\n  const [enemies, setEnemies] = useState([]);\r\n\r\n  // dados das posicoes\r\n  const [item, setItem] = useState(null);\r\n  const [enemy, setEnemy] = useState(null);\r\n\r\n  // log da luta\r\n  const [fightLog, setFightLog] = useState([]);\r\n\r\n  // mapa selecionado\r\n  const [map, setMap] = useState(null);\r\n\r\n  // gift item\r\n  const [randomItem, setRandomItem] = useState(null);\r\n  const [randomTrap, setRandomTrap] = useState(null);\r\n  const [randomChest, setRandomChest] = useState(null);\r\n\r\n  // dice\r\n  const [dice, setDice] = useState(0);\r\n\r\n  // estado do jogo\r\n  const [game, setGame] = useState({\r\n    map: null,\r\n    mapPositions: 0,\r\n    mapLength: 0,\r\n    heroPosition: 0,\r\n    end: false,\r\n    playing: false,\r\n  });\r\n\r\n  // estado da luta\r\n  const [fight, setFight] = useState({\r\n    round: 0,\r\n    modalInventory: false,\r\n    end: false,\r\n    turn: 0,\r\n    winner: null,\r\n    heroAttack: false,\r\n    enemyAttack: false,\r\n  });\r\n\r\n  const resetGame = () => {\r\n    setGame({\r\n      map: null,\r\n      mapPositions: 0,\r\n      mapLength: 0,\r\n      heroPosition: 0,\r\n      end: false,\r\n      playing: false,\r\n    });\r\n  };\r\n\r\n  const resetFight = () => {\r\n    setFight({\r\n      round: 0,\r\n      modalInventory: false,\r\n      end: false,\r\n      turn: 0,\r\n      winner: null,\r\n      heroAttack: false,\r\n      enemyAttack: false,\r\n    });\r\n  };\r\n\r\n  const getRandomItem = arr => {\r\n    switch (arr) {\r\n      case ITEM:\r\n        setRandomItem(items[Math.floor(Math.random() * items.length)]);\r\n        break;\r\n      case TRAP:\r\n        setRandomTrap(traps[Math.floor(Math.random() * traps.length)]);\r\n        break;\r\n      case CHEST:\r\n        setRandomChest(chests[Math.floor(Math.random() * chests.length)]);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const resetRandomItem = () => setRandomItem(null);\r\n  const resetRandomTrap = () => setRandomTrap(null);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted) {\r\n      // carregar os itens da api\r\n      if (heroes.length === 0) setHeroes(heroes_api);\r\n      // carregar os herois da api\r\n      if (items.length === 0) setItems(items_api);\r\n      // carregar os mapas da api\r\n      if (maps.length === 0) setMaps(maps_api);\r\n      // carregar os inimigos da api\r\n      if (enemies.length === 0) setEnemies(enemies_api);\r\n      // carregar as armas da api\r\n      if (weapons.length === 0) setWeapos(weapons_api);\r\n      // carregar as magicas da api\r\n      if (magic.length === 0) setMagic(magic_api);\r\n      // carregar as traps da api\r\n      if (traps.length === 0) setTraps(traps_api);\r\n      // carregar os baus da api\r\n      if (chests.length === 0) setChests(chest_api);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [heroes, items, maps, enemies, weapons, magic, traps, chests]);\r\n\r\n  return (\r\n    <GameProvider\r\n      value={{\r\n        heroes,\r\n        items,\r\n        maps,\r\n        enemies,\r\n        map,\r\n        weapons,\r\n        magic,\r\n        game,\r\n        enemy,\r\n        item,\r\n        fight,\r\n        fightLog,\r\n        dice,\r\n        setMap,\r\n        setGame,\r\n        setFight,\r\n        setEnemy,\r\n        setItem,\r\n        setFightLog,\r\n        resetGame,\r\n        resetFight,\r\n        randomItem,\r\n        randomChest,\r\n        randomTrap,\r\n        resetRandomItem,\r\n        resetRandomTrap,\r\n        getRandomItem,\r\n        setDice,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameProvider>\r\n  );\r\n};\r\n\r\nexport { GameContext, ContextGame };\r\n","import React, { useState } from 'react';\r\n\r\nconst HeroContext = React.createContext();\r\nconst HeroProvider = HeroContext.Provider;\r\n\r\nconst ContextHero = ({ children }) => {\r\n  const [hero, setHero] = useState(null);\r\n\r\n  return (\r\n    <HeroProvider\r\n      value={{\r\n        setHero,\r\n        hero,\r\n      }}\r\n    >\r\n      {children}\r\n    </HeroProvider>\r\n  );\r\n};\r\n\r\nexport { HeroContext, ContextHero };\r\n","// generate random number from min to max\r\n/**\r\n *\r\n * @param {int} min\r\n * @param {int} max\r\n * @returns int\r\n */\r\nexport const random = (min, max) =>\r\n  Math.floor(Math.random() * (max - min + 1) + min);\r\n\r\n/**\r\n *\r\n * @param {Object} obj Valida se o objeto esta vazio\r\n * @returns\r\n */\r\nexport const isObjectEmpty = obj => {\r\n  if (!obj) return true;\r\n  return Object.keys(obj).length === 0;\r\n};\r\n\r\n/**\r\n *\r\n * @param {int} base recebe o nivel atual do heroi\r\n * @returns inteiro com o total de experiencia para evoluir para o proximo nivel\r\n */\r\nexport const getNextLevel = base => {\r\n  let con = 1.256;\r\n  let nextLevel = Math.floor(con ** base * 100);\r\n  return nextLevel;\r\n};\r\n\r\n/**\r\n *\r\n * @param {function} setDice configura o valor do dado no estado atual\r\n * @param {function} setUpdatedDice para validar quando a animacao finaliza\r\n */\r\nexport const diceAnimation = (setDice, setUpdatedDice) => {\r\n  let _counter = 0;\r\n\r\n  let interval = setInterval(() => {\r\n    _counter += 1;\r\n\r\n    setDice(random(1, 6));\r\n\r\n    if (_counter >= 10) {\r\n      clearInterval(interval);\r\n      setUpdatedDice(true);\r\n    }\r\n  }, 100);\r\n};\r\n","import React, { useContext } from 'react';\r\nimport CardHero from '../components/game/card/Hero';\r\nimport { Link } from 'react-router-dom';\r\nimport { GameContext } from '../context/Game';\r\nimport { HeroContext } from '../context/Hero';\r\nimport { getNextLevel } from '../utils';\r\nimport { URL_UNK } from '../utils/constants';\r\n\r\nconst SelectHero = () => {\r\n  const { heroes } = useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const handleSelectThis = data => {\r\n    // adicionar o heroi\r\n    let _nxt = getNextLevel(data.level);\r\n    setHero({ ...data, nextLevel: _nxt });\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-center\">\r\n      <div>\r\n        {/* loop pelos herois da api */}\r\n        <div className=\"card-grid\">\r\n          {heroes.length > 0 ? (\r\n            heroes\r\n              .map(hero => (\r\n                <CardHero\r\n                  key={Math.random()}\r\n                  data={hero}\r\n                  handleClick={() => handleSelectThis(hero)}\r\n                  type=\"select\"\r\n                />\r\n              ))\r\n              .splice(0, 3)\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* menu */}\r\n        <div className=\"menu-select\">\r\n          <Link to=\"/\">\r\n            <button>\r\n              início{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_before</span>\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/select-item\">\r\n            <button disabled={!hero}>\r\n              próximo{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_next</span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* mostrar o heroi selecionado */}\r\n        <div className=\"card-grid\">\r\n          {hero ? (\r\n            <CardHero key={Math.random()} data={hero}></CardHero>\r\n          ) : (\r\n            <CardHero data={{ name: 'Nada selecionado', poster: URL_UNK }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectHero;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none' }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>TY: {data.type}</span>\r\n        <span>RA: {data.rarity}</span>\r\n        <span>VL: {data.value}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          comprar\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Link } from 'react-router-dom';\r\nimport { GameContext } from '../context/Game';\r\nimport { HeroContext } from '../context/Hero';\r\nimport CardItem from '../components/game/card/Item';\r\nimport { URL_UNK } from '../utils/constants';\r\n\r\nconst SelectItem = () => {\r\n  const { items, magic, weapons } = useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const handleSelectThis = data => {\r\n    // adicionar o item aos items do heroi\r\n    setHero({\r\n      ...hero,\r\n      items: [data],\r\n      magic: [magic[0]],\r\n      weapons: [weapons[0]],\r\n      equipped: {\r\n        weapon: weapons[0],\r\n      },\r\n    });\r\n\r\n    // TODO: adicionar a magica e a arma ao heroi\r\n  };\r\n\r\n  const handleSelect = data => {\r\n    data.id = uuidv4();\r\n    handleSelectThis(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-center\">\r\n      <div>\r\n        {/* loop pelos herois da api */}\r\n        <div className=\"card-grid\">\r\n          {items.length > 0 ? (\r\n            items\r\n              .map(item => (\r\n                <CardItem\r\n                  key={Math.random()}\r\n                  data={item}\r\n                  handleClick={() => handleSelect(item)}\r\n                  type=\"select\"\r\n                />\r\n              ))\r\n              .splice(0, 3)\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* menu */}\r\n        <div className=\"menu-select\">\r\n          <Link to=\"/select-hero\">\r\n            <button>\r\n              voltar{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_before</span>\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/select-map\">\r\n            <button disabled={!hero || hero.items.length === 0}>\r\n              próximo{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_next</span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* mostrar o heroi selecionado */}\r\n        <div className=\"card-grid\">\r\n          {hero && hero.items && hero.items.length > 0 ? (\r\n            hero.items.map(item => (\r\n              <CardItem key={Math.random()} data={item}></CardItem>\r\n            ))\r\n          ) : (\r\n            <CardItem data={{ name: 'Nada selecionado', poster: URL_UNK }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectItem;\r\n","import {\r\n  BOSS,\r\n  ENEMY,\r\n  ITEM,\r\n  LEVEL_EASY,\r\n  NULL,\r\n  TRAP,\r\n  INIT,\r\n  CODE,\r\n  CHEST,\r\n} from './constants';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n/**\r\n *\r\n * @param {Object} map necessário conter map.size\r\n * @param {Array} enemies array de inimigos\r\n * @param {Array} items array de itens\r\n * @returns retonrno uma array com posicoes aleatorias\r\n */\r\nexport const generatePositions = (map, enemies, items) => {\r\n  let positions = [];\r\n\r\n  for (let i = 0; i < map.size; i++) {\r\n    // gera um valor aleatorio para cada posicao\r\n    let key = [LEVEL_EASY[Math.floor(Math.random() * LEVEL_EASY.length)]];\r\n    let value = '';\r\n    // valida o tipo da posicao\r\n    switch (key[0]) {\r\n      case ENEMY:\r\n        value = enemies[Math.floor(Math.random() * enemies.length)];\r\n        break;\r\n      case ITEM:\r\n        value = items[Math.floor(Math.random() * items.length)];\r\n        break;\r\n      case TRAP:\r\n        value = { name: 'trap' };\r\n        break;\r\n      case NULL:\r\n        value = {};\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    positions.push({ [key]: value, id: uuidv4() });\r\n  }\r\n\r\n  positions[0] = { init: { name: INIT }, id: uuidv4() };\r\n  positions[positions.length - 1] = { boss: { name: BOSS }, id: uuidv4() };\r\n\r\n  // adicionar bau a uma posicao aleatoria\r\n  let pos1 = Math.floor(Math.random() * positions.length);\r\n  let pos2 = Math.floor(Math.random() * positions.length);\r\n\r\n  if (pos1 === 0) pos1 += 1;\r\n  if (pos2 === 0) pos2 += 2;\r\n  if (pos1 === pos2) pos2 += 1;\r\n  // TODO: validar bugs\r\n  if (pos1 === positions.length - 1) pos1 -= 1;\r\n  if (pos2 === positions.length - 1) pos2 -= 1;\r\n\r\n  if (pos1 > pos2) {\r\n    let x = pos1;\r\n    pos1 = pos2;\r\n    pos2 = x;\r\n  }\r\n\r\n  positions[pos1] = { code: { name: CODE }, id: uuidv4() };\r\n  positions[pos2] = { chest: { name: CHEST }, id: uuidv4() };\r\n\r\n  return positions;\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} type tipo de mensagem, success, warning ou error\r\n * @param {String} message mensagem que aparecera no Toast\r\n * @param {function} setMessage funcao do useState, para resetar a mensagem\r\n * @param {integer} timer tempo em milisegundos\r\n */\r\nexport const messageHandler = (type, message, setMessage, timer = 3000) => {\r\n  if (type && message && setMessage) {\r\n    setMessage({\r\n      type: type,\r\n      content: message,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setMessage({\r\n        type: '',\r\n        content: '',\r\n      });\r\n    }, timer);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Map = ({ data, handleClick, type = 'none' }) => {\r\n  if (data)\r\n    return (\r\n      <div className=\"card\">\r\n        {type === 'shop' && <span>{data.price}</span>}\r\n\r\n        <div className=\"card-image\">\r\n          <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n        </div>\r\n\r\n        <div className=\"card-content\">\r\n          <span>NA: {data.name}</span>\r\n          <span>TY: {data.type}</span>\r\n          <span>LV: {data.level}</span>\r\n          <span>SZ: {data.size}</span>\r\n        </div>\r\n        {type === 'shop' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            buy\r\n          </button>\r\n        )}\r\n        {type === 'use' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            use\r\n          </button>\r\n        )}\r\n        {type === 'select' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            selecionar\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useContext } from 'react';\r\nimport { GameContext } from '../context/Game';\r\nimport { generatePositions } from '../utils/game';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport CardMap from '../components/game/card/Map';\r\nimport { URL_UNK } from '../utils/constants';\r\n\r\nconst SelectMap = () => {\r\n  const navigate = useNavigate();\r\n  const { items, enemies, map, maps, setMap, game, setGame } =\r\n    useContext(GameContext);\r\n\r\n  const handleSelectThis = data => {\r\n    // adicionar o mapa ao jogo\r\n    setMap(data);\r\n  };\r\n\r\n  const initGame = () => {\r\n    // configurar o jogo\r\n    setGame({ ...game, map: map });\r\n\r\n    // gerar as posicoes\r\n    try {\r\n      let positions = generatePositions(map, enemies, items);\r\n      setGame({\r\n        ...game,\r\n        map: map,\r\n        mapPositions: positions,\r\n        mapLength: positions.length,\r\n        heroPosition: 0,\r\n      });\r\n\r\n      // redirecionar e iniciar o jogo\r\n      setTimeout(() => navigate('/start-game'), 100);\r\n    } catch (error) {\r\n      console.warn(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-center\">\r\n      <div>\r\n        {/* loop pelos herois da api */}\r\n        <div className=\"card-grid\">\r\n          {maps.length > 0 ? (\r\n            maps.map(data => (\r\n              <CardMap\r\n                key={Math.random()}\r\n                data={data}\r\n                handleClick={() => handleSelectThis(data)}\r\n                type=\"select\"\r\n              />\r\n            ))\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* menu */}\r\n        <div className=\"menu-select\">\r\n          <Link to=\"/select-item\">\r\n            <button>\r\n              voltar{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_before</span>{' '}\r\n            </button>\r\n          </Link>\r\n          <button onClick={initGame} disabled={!map}>\r\n            começar{' '}\r\n            <span className=\"material-symbols-outlined\">navigate_next</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* mostrar o heroi selecionado */}\r\n        <div className=\"card-grid\">\r\n          {map != null ? (\r\n            <CardMap key={Math.random()} data={map}></CardMap>\r\n          ) : (\r\n            <CardMap data={{ name: 'Nada selecionado', poster: URL_UNK }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectMap;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst HeroInline = ({ data }) => {\r\n  if (data)\r\n    return (\r\n      <div className=\"hero-inline-container\">\r\n        <div\r\n          className={`card-image ${data.health <= 0 ? 'filter-grayscale' : ''}`}\r\n        >\r\n          <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          <div className=\"hero-inline\">\r\n            <span>\r\n              <b>HERÓI</b>\r\n            </span>\r\n            <span>\r\n              <b>VIDA</b>\r\n            </span>\r\n            <span>\r\n              <b>MANA</b>\r\n            </span>\r\n            <span>\r\n              <b>GOLD</b>\r\n            </span>\r\n            <span>\r\n              <b>EXP</b>\r\n            </span>\r\n            <span>\r\n              <b>NIVEL</b>\r\n            </span>\r\n          </div>\r\n          <div className=\"hero-inline\">\r\n            <span>{data.name}</span>\r\n            <span>{data.health}</span>\r\n            <span>{data.mana}</span>\r\n            <span>${data.gold}</span>\r\n            <span>\r\n              {data.exp}/{data.nextLevel}\r\n            </span>\r\n            <span>{data.level}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default HeroInline;\r\n","import React, { useContext } from 'react';\r\nimport { GameContext } from '../../context/Game';\r\nimport { isObjectEmpty } from '../../utils';\r\n\r\nconst Dice = () => {\r\n  const { game, dice } = useContext(GameContext);\r\n\r\n  if (!isObjectEmpty(game))\r\n    return (\r\n      <div className=\"dices\">\r\n        <div className={`dice ${dice === 1 ? 'active' : ''}`}>1</div>\r\n        <div className={`dice ${dice === 2 ? 'active' : ''}`}>2</div>\r\n        <div className={`dice ${dice === 3 ? 'active' : ''}`}>3</div>\r\n        <div className={`dice ${dice === 4 ? 'active' : ''}`}>4</div>\r\n        <div className={`dice ${dice === 5 ? 'active' : ''}`}>5</div>\r\n        <div className={`dice ${dice === 6 ? 'active' : ''}`}>6</div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Dice;\r\n","import React from 'react';\r\n\r\nconst ConfirmModal = ({ onClick, active, cancel, message }) => {\r\n  return (\r\n    <div className={`modal-confirm-container ${active ? 'active' : ''}`}>\r\n      <div className=\"modal-confirm\">\r\n        <p>{message}</p>\r\n        <div className=\"flex-justify-end\">\r\n          <button onClick={() => cancel(false)}>cancelar</button>\r\n          <button onClick={onClick}>confirmar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React, { useState } from 'react';\r\nimport ConfirmModal from '../ui/ConfirmModal';\r\n\r\nconst GameButtons = ({\r\n  play,\r\n  reset,\r\n  game,\r\n  setModalItem,\r\n  setModalShop,\r\n  modalShop,\r\n  modalItem,\r\n}) => {\r\n  const [resetModal, setResetModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <ConfirmModal\r\n        onClick={reset}\r\n        active={resetModal}\r\n        cancel={setResetModal}\r\n        message=\"Tem certeza que deseja reiniciar o jogo?\"\r\n      />\r\n\r\n      <div className=\"game-menu-buttons\">\r\n        <button disabled={game.playing || game.end} onClick={() => play()}>\r\n          jogar\r\n        </button>\r\n        <button\r\n          disabled={game.playing || game.end}\r\n          onClick={() => setModalShop(!modalShop)}\r\n        >\r\n          loja\r\n        </button>\r\n        <button\r\n          disabled={game.playing || game.end}\r\n          onClick={() => setModalItem(!modalItem)}\r\n        >\r\n          inventário\r\n        </button>\r\n        <button disabled={game.playing} onClick={() => setResetModal(true)}>\r\n          reiniciar\r\n        </button>\r\n        <button disabled={game.playing}>salvar</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameButtons;\r\n","import React from 'react';\r\nimport Dice from './Dice';\r\nimport GameButtons from './GameButtons';\r\n\r\nconst GameMenu = ({\r\n  game,\r\n  play,\r\n  reset,\r\n  modalShop,\r\n  modalItem,\r\n  setModalItem,\r\n  setModalShop,\r\n}) => {\r\n  return (\r\n    <div className=\"game-menu\">\r\n      <Dice />\r\n\r\n      <GameButtons\r\n        game={game}\r\n        play={play}\r\n        reset={reset}\r\n        modalShop={modalShop}\r\n        modalItem={modalItem}\r\n        setModalShop={setModalShop}\r\n        setModalItem={setModalItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameMenu;\r\n","import React from 'react';\r\n\r\nconst Position = ({ data, index, heroPosition }) => {\r\n  return (\r\n    <div\r\n      className={`position ${\r\n        heroPosition === index ? 'active' : heroPosition > index ? 'pass' : ''\r\n      }`}\r\n    >\r\n      {index} - {Object.keys(data)[0]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Position;\r\n","import React from 'react';\r\nimport Position from './Position';\r\n\r\nconst Timeline = ({ game }) => {\r\n  return (\r\n    <>\r\n      {game.map ? (\r\n        game.mapPositions.map((position, index) => (\r\n          <Position\r\n            key={position.id}\r\n            data={position}\r\n            index={index}\r\n            heroPosition={game.heroPosition}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          <span>Nenhuma informação encontrada</span>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none' }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>RR: {data.rarity}</span>\r\n        <span>MI: {data.min}</span>\r\n        <span>MX: {data.max}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          comprar\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nconst Toast = ({ show, message, type }) => {\r\n  if (show)\r\n    return (\r\n      <div\r\n        className={`message ${\r\n          type === 'success'\r\n            ? 'success'\r\n            : type === 'warning'\r\n            ? 'warning'\r\n            : type === 'error'\r\n            ? 'error'\r\n            : ''\r\n        }`}\r\n      >\r\n        {message}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Toast;\r\n","import React, { useContext, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport CardItem from '../card/Item';\r\nimport CardWeapon from '../card/Weapon';\r\nimport Toast from '../../ui/Toast';\r\nimport { SUCCESS, WARNING } from '../../../utils/constants';\r\nimport { isObjectEmpty } from '../../../utils';\r\n\r\nconst Shop = ({ show, setModalShop }) => {\r\n  const { items, weapons } = useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleBuy = data => {\r\n    if (!isObjectEmpty(hero)) {\r\n      if (hero.gold >= data.price) {\r\n        // compra de item e adiciona a lista do heroi\r\n        let newGold = hero.gold - data.price;\r\n        let i = { ...data, id: uuidv4() };\r\n        let newItems = [...hero.items, i];\r\n\r\n        setHero({ ...hero, items: newItems, gold: newGold });\r\n        messageHandler(SUCCESS, 'Item comprado com sucesso!', setMessage);\r\n      } else {\r\n        messageHandler(WARNING, 'Sem ouro suficiente para compra!', setMessage);\r\n      }\r\n    } else {\r\n      messageHandler(WARNING, 'O herói não foi selecionado!', setMessage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`modal-container ${show ? 'active' : ''}`}>\r\n        <div className={`modal ${show ? 'active' : ''}`}>\r\n          <div className=\"modal-header\">\r\n            <h1>Loja</h1>\r\n            <h3 className=\"color-warning \">\r\n              Saldo do herói: ${(hero && hero.gold) || 0}\r\n            </h3>\r\n            <button onClick={() => setModalShop(false)}>fechar</button>\r\n          </div>\r\n\r\n          <h3>Itens</h3>\r\n          <div className=\"card-container\">\r\n            {items.length > 0 ? (\r\n              items.map(item => (\r\n                <CardItem\r\n                  key={item.id}\r\n                  data={item}\r\n                  handleClick={() => handleBuy(item)}\r\n                  type=\"shop\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <span>Nada encontrado aqui</span>\r\n            )}\r\n          </div>\r\n\r\n          {/* armas */}\r\n          <h3>Armas</h3>\r\n          <div className=\"card-container\">\r\n            {weapons.length > 0 ? (\r\n              weapons.map(weapon => (\r\n                <CardWeapon\r\n                  key={weapon.id}\r\n                  data={weapon}\r\n                  handleClick={() => handleBuy(weapon)}\r\n                  type=\"shop\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <span>Nada encontrado aqui</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Toast\r\n        show={message && message.content}\r\n        type={message.type}\r\n        message={message.content}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none' }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>TY: {data.type}</span>\r\n        <span>MI: {data.min}</span>\r\n        <span>MX: {data.max}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          comprar\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport { ERROR, BOMB, TRAP } from '../../../utils/constants';\r\nimport Toast from '../../ui/Toast';\r\nimport CardTrap from '../card/Trap';\r\nimport { random } from '../../../utils';\r\n\r\nconst Trap = ({ show, setModalTrap }) => {\r\n  const { randomTrap, getRandomItem, resetRandomItem, game, setGame } =\r\n    useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleTrap = data => {\r\n    let _tpd = data.type;\r\n    let _dpf = 0;\r\n    switch (_tpd) {\r\n      case BOMB:\r\n        _dpf = random(data.min, data.max);\r\n        setHero({ ...hero, health: (hero.health -= _dpf) });\r\n        messageHandler(ERROR, `O herói sofreu ${_dpf} de dano`, setMessage);\r\n\r\n        if (hero.health <= 0) {\r\n          messageHandler(ERROR, `GAME OVER`, setMessage, 5000);\r\n          setGame({ ...game, end: true });\r\n        }\r\n        break;\r\n\r\n      default:\r\n        alert('[Trap.js] - Erro ao escolher o tipo de dano');\r\n        break;\r\n    }\r\n\r\n    setModalTrap(false);\r\n    resetRandomItem();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted && !randomTrap) getRandomItem(TRAP);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [randomTrap]);\r\n\r\n  if (randomTrap)\r\n    return (\r\n      <>\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <div className=\"modal-header\">\r\n              <h1>Trap</h1>\r\n            </div>\r\n            <div className=\"flex-justify-center\">\r\n              <CardTrap\r\n                key={Math.random()}\r\n                data={randomTrap}\r\n                handleClick={() => handleTrap(randomTrap)}\r\n                type=\"select\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Toast\r\n          show={message && message.content}\r\n          type={message.type}\r\n          message={message.content}\r\n        />\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Trap;\r\n","import React from 'react';\r\n\r\nconst Log = ({ fightLog }) => {\r\n  return (\r\n    <div className=\"game-fight-log \">\r\n      {fightLog.length > 0 ? (\r\n        fightLog\r\n          .map((log, index) => <p key={index}>{JSON.stringify(log)}</p>)\r\n          .reverse()\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Log;\r\n","import React from 'react';\r\n\r\nconst Turn = ({ fight }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <small>Rodada: {fight.round || 0}</small>\r\n      </div>\r\n      <div>\r\n        {!fight.end ? (\r\n          <small>\r\n            Vez de jogar:{' '}\r\n            {fight.turn === 0\r\n              ? ' Vez do Herói de jogar'\r\n              : ' O Inimigo está atacando ....'}\r\n          </small>\r\n        ) : (\r\n          <small>\r\n            Fim da luta:\r\n            {fight.winner === 0 ? ' O herói venceu !' : ' O Inimigo venceu !'}\r\n          </small>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Turn;\r\n","import React from 'react';\r\n\r\nconst Play = ({ fight, flee, hero, hit, setModalUserMagic, setModalItem }) => {\r\n  return (\r\n    <div className=\"game-fight-menu\">\r\n      <button disabled={fight.end || fight.turn === 1} onClick={hit}>\r\n        lutar\r\n      </button>\r\n      <button\r\n        disabled={fight.end || fight.turn === 1 || hero.mana <= 0}\r\n        onClick={() => setModalUserMagic(true)}\r\n      >\r\n        mágica\r\n      </button>\r\n      <button\r\n        disabled={fight.end || fight.turn === 1}\r\n        onClick={() => setModalItem(true)}\r\n      >\r\n        inventário\r\n      </button>\r\n\r\n      <button disabled={fight.turn === 1 && !fight.end} onClick={flee}>\r\n        {fight.end && fight.winner === 0\r\n          ? 'sair'\r\n          : fight.end && fight.winner === 1\r\n          ? 'fim'\r\n          : 'fugir'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Play;\r\n","import React from 'react';\r\nimport CardHero from '../../card/Hero';\r\n\r\nconst Fight = ({ hero, enemy, fight }) => {\r\n  return (\r\n    <div className=\"game-fight\">\r\n      <div className=\"text-center\">\r\n        <h4>Herói</h4>\r\n        <CardHero data={hero} hit={fight.enemyAttack}></CardHero>\r\n      </div>\r\n\r\n      <h1>vs</h1>\r\n\r\n      <div className=\"text-center\">\r\n        <h4>Inimigo</h4>\r\n        {enemy && <CardHero data={enemy} hit={fight.heroAttack}></CardHero>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fight;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst LevelUp = ({ hero }) => {\r\n  const [activeClass, setActiveClass] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted) {\r\n      if (hero.level > 1) {\r\n        setActiveClass(true);\r\n\r\n        setTimeout(() => {\r\n          setActiveClass(false);\r\n        }, 1000);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [hero.level]);\r\n\r\n  return (\r\n    <div className={`level-up ${activeClass ? 'active' : ''}`}>\r\n      <span>\r\n        Subiu para o nível: {` `}\r\n        <b>{hero.level || 0}</b>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LevelUp;\r\n","import React, { useContext, useState } from 'react';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { MANA, HEALTH, POISON, SUCCESS } from '../../../utils/constants';\r\nimport Toast from '../../ui/Toast';\r\nimport Card from '../card/Item';\r\n\r\nconst UserItems = ({ show, setModalItem }) => {\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleUse = data => {\r\n    // remove item da lista ao utilizar\r\n    let arrItems = hero.items.filter(i => i.id !== data.id);\r\n    let _itx = '';\r\n\r\n    switch (data.type) {\r\n      case MANA:\r\n        // TODO: validar mana maxima\r\n        setHero({ ...hero, items: arrItems, mana: hero.mana + data.value });\r\n        _itx =\r\n          'O Herói usou ' +\r\n          data.name +\r\n          ' e aumentou ' +\r\n          data.value +\r\n          ' de mana.';\r\n        setMessage({ type: SUCCESS, content: _itx });\r\n        break;\r\n      case HEALTH:\r\n        // TODO: validar vida maxima\r\n        setHero({ ...hero, items: arrItems, health: hero.health + data.value });\r\n        _itx =\r\n          'O Herói usou ' +\r\n          data.name +\r\n          ' e curou ' +\r\n          data.value +\r\n          ' de sua vida.';\r\n        setMessage({ type: SUCCESS, content: _itx });\r\n        break;\r\n      case POISON:\r\n        // TODO: validar vida maxima\r\n        // Aplicar condicao de envenenado ao inimigo\r\n        setHero({\r\n          ...hero,\r\n          items: arrItems,\r\n          equipped: { ...hero.equipped, poison: true },\r\n        });\r\n        _itx =\r\n          'O Herói usou ' +\r\n          data.name +\r\n          ' e envenenou ' +\r\n          data.value +\r\n          ' o inimigo.';\r\n        setMessage({\r\n          type: SUCCESS,\r\n          content: _itx,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setTimeout(() => setMessage({ type: '', content: '' }), 2000);\r\n\r\n    // TODO: alternar turno da batalha ao utilizar o item dentro da batalha\r\n    setModalItem(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`modal-container ${show ? 'active' : ''}`}>\r\n        <div className={`modal ${show ? 'active' : ''}`}>\r\n          <div className=\"modal-header\">\r\n            <h1>Inventário</h1>\r\n            <button onClick={() => setModalItem(false)}>fechar</button>\r\n          </div>\r\n\r\n          <div className=\"grid-container\">\r\n            {hero && hero.items.length > 0 ? (\r\n              hero.items.map(item => (\r\n                <Card\r\n                  key={Math.random()}\r\n                  data={item}\r\n                  handleClick={() => handleUse(item)}\r\n                  type=\"use\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <span>Nada encontrado aqui</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Toast\r\n        show={message && message.content}\r\n        type={message.type}\r\n        message={message.content}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserItems;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none', disabled }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n      </div>\r\n\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>TY: {data.type}</span>\r\n        <span>MI: {data.min}</span>\r\n        <span>MX: {data.max}</span>\r\n        <span>MP: {data.mana}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          buy\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" disabled={disabled} onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport CardMagic from '../../card/Magic';\r\n\r\nconst ModalMagic = ({\r\n  modalUserMagic,\r\n  setModalUserMagic,\r\n  hero,\r\n  handleUseMagic,\r\n}) => {\r\n  return (\r\n    <div className={`modal-container ${modalUserMagic ? 'active' : ''}`}>\r\n      <div className={`modal ${modalUserMagic ? 'active' : ''}`}>\r\n        <div className=\"modal-header\">\r\n          <h1>Magias</h1>\r\n          <h3 className=\"color-warning \">\r\n            Mana disponível: {(hero && hero.mana) || 0}\r\n          </h3>\r\n          <button onClick={() => setModalUserMagic(false)}>fechar</button>\r\n        </div>\r\n\r\n        <div className=\"grid-container\">\r\n          {hero && hero.magic.length > 0 ? (\r\n            hero.magic\r\n              .map(item => (\r\n                <CardMagic\r\n                  key={Math.random()}\r\n                  data={item}\r\n                  handleClick={() => handleUseMagic(item)}\r\n                  type=\"use\"\r\n                  disabled={item.mana > hero.mana}\r\n                />\r\n              ))\r\n              .reverse()\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalMagic;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { getNextLevel, random } from '../../../utils';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport Log from './fight/Log';\r\nimport Turn from './fight/Turn';\r\nimport Play from './fight/Play';\r\nimport Fight from './fight/Fight';\r\nimport LevelUp from './fight/LevelUp';\r\nimport ModalItems from './UserItems';\r\nimport ModalMagic from './fight/Magic';\r\nimport Toast from '../../ui/Toast';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport { ERROR } from '../../../utils/constants';\r\n\r\nconst ModalFight = ({ show, setModalFight }) => {\r\n  const { hero, setHero } = useContext(HeroContext);\r\n  const {\r\n    fight,\r\n    enemy,\r\n    setFight,\r\n    setEnemy,\r\n    fightLog,\r\n    setFightLog,\r\n    resetFight,\r\n    game,\r\n    setGame,\r\n  } = useContext(GameContext);\r\n  const [modalItem, setModalItem] = useState(false);\r\n  const [modalUserMagic, setModalUserMagic] = useState(false);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  /**\r\n   * Causa um dano aleatório ao herói\r\n   */\r\n  const enemyTurn = () => {\r\n    let _rxn = random(5, 15);\r\n    let _sta = 'O Inimigo provocou ' + _rxn + ' de dano.';\r\n\r\n    setTimeout(() => {\r\n      setHero({ ...hero, health: hero.health - _rxn });\r\n      setFight({\r\n        ...fight,\r\n        turn: 0,\r\n        round: fight.round + 1,\r\n      });\r\n      setFightLog([...fightLog, _sta]);\r\n    }, 1000);\r\n  };\r\n\r\n  /**\r\n   * Causa dano ao inimigo de acordo com uma escolha\r\n   * aleatória, entre o dano mínimo e máximo da arma\r\n   * equipada\r\n   */\r\n  const hit = () => {\r\n    let equippedWeapon = hero.equipped.weapon;\r\n    let weaponDamage = random(equippedWeapon.min, equippedWeapon.max);\r\n    let _stq = 'O Herói atacou, provocando ' + weaponDamage + ' de dano.';\r\n\r\n    setFightLog([...fightLog, _stq]);\r\n    setEnemy({ ...enemy, health: enemy.health - weaponDamage });\r\n    setFight({ ...fight, turn: 1 });\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {Object} data Magic Item\r\n   */\r\n  const handleUseMagic = data => {\r\n    let magicDamage = random(data.min, data.max);\r\n    let _itx =\r\n      'O Herói usou ' + data.name + ' e causou ' + magicDamage + ' de dano.';\r\n\r\n    if (data.mana <= hero.mana) {\r\n      setFightLog([...fightLog, _itx]);\r\n      setEnemy({ ...enemy, health: enemy.health - magicDamage });\r\n      setHero({ ...hero, mana: hero.mana - data.mana });\r\n      setFight({ ...fight, turn: 1 });\r\n      setModalUserMagic(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Herói foge da batalha, perdendo uma parte do gold\r\n   * e de experiência se houver experiência\r\n   */\r\n  const flee = () => {\r\n    if (fight.end) {\r\n      // sair sem prejuizo\r\n      setModalFight(false);\r\n    } else {\r\n      // sair com prejuizo\r\n      let expHero = hero.exp;\r\n      let expBase = 15;\r\n      let goldBase = 15;\r\n      if (expHero < expBase) {\r\n        setHero({ ...hero, gold: hero.gold - goldBase, exp: 0 });\r\n        messageHandler(\r\n          ERROR,\r\n          `Removido ${goldBase} de ouro e 0 de experiência!`,\r\n          setMessage\r\n        );\r\n      } else {\r\n        setHero({\r\n          ...hero,\r\n          gold: hero.gold - goldBase,\r\n          exp: hero.exp - expBase,\r\n        });\r\n        messageHandler(\r\n          ERROR,\r\n          `Removido ${goldBase} de ouro e ${expBase} de experiência!`,\r\n          setMessage\r\n        );\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setModalFight(false);\r\n      }, 2000);\r\n    }\r\n    resetFight();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted && fight && enemy && hero) {\r\n      if (fight.end) {\r\n        // TODO: fim do jogo\r\n        return;\r\n      } else if (fight.turn === 0 && hero.health > 0) {\r\n        // TODO: fazer nada, vez do heroi\r\n      } else if (fight.turn === 1 && enemy.health > 0) {\r\n        enemyTurn();\r\n      } else if (hero.health <= 0) {\r\n        let _ini = 'O herói foi derrotado!';\r\n        setFightLog([...fightLog, _ini]);\r\n        setFight({ ...fight, winner: 1, end: true });\r\n        setGame({ ...game, end: true });\r\n      } else if (enemy.health <= 0) {\r\n        let _itx = 'O inimigo foi derrotado';\r\n        setFightLog([...fightLog, _itx]);\r\n        setFight({ ...fight, winner: 0, end: true });\r\n\r\n        // validar o exp atual e realizar a evolucao do heroi\r\n        // TODO: configurar a quantidade de exp que o herói recebe\r\n        let baseExp = 55;\r\n        let goldBase = 45;\r\n        let nextExp = Math.floor(baseExp + hero.nextLevel / (hero.level * 10));\r\n        if (hero.exp + nextExp > hero.nextLevel) {\r\n          // calcular a quantidade de experiencia para o proximo nivel\r\n          let _nxt = getNextLevel(hero.level + 1);\r\n          let _exl = hero.exp + nextExp - hero.nextLevel;\r\n          // let _nxl = Math.floor(hero.nextLevel + hero.nextLevel / 2);\r\n          // evolução do herói\r\n          setHero({\r\n            ...hero,\r\n            gold: hero.gold + goldBase,\r\n            exp: _exl,\r\n            victories: hero.victories + 1,\r\n            level: hero.level + 1,\r\n            nextLevel: _nxt,\r\n          });\r\n        } else {\r\n          setHero({\r\n            ...hero,\r\n            gold: hero.gold + goldBase,\r\n            exp: hero.exp + baseExp,\r\n            victories: hero.victories + 1,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [enemy, hero, fight]);\r\n\r\n  if (hero)\r\n    return (\r\n      <>\r\n        {/*  */}\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <LevelUp hero={hero} />\r\n\r\n            {/*  */}\r\n            <h3>Luta</h3>\r\n\r\n            {/*  */}\r\n            <Turn fight={fight} />\r\n\r\n            {/*  */}\r\n            <Fight hero={hero} enemy={enemy} fight={fight} />\r\n\r\n            {/*  */}\r\n            <Play\r\n              fight={fight}\r\n              flee={flee}\r\n              hero={hero}\r\n              hit={hit}\r\n              setModalUserMagic={setModalUserMagic}\r\n              setModalItem={setModalItem}\r\n            />\r\n\r\n            {/*  */}\r\n            <Log fightLog={fightLog} />\r\n\r\n            {/*  */}\r\n          </div>\r\n        </div>\r\n\r\n        {/* inventario */}\r\n        <ModalItems show={modalItem} setModalItem={setModalItem} />\r\n\r\n        {/* magia */}\r\n        <ModalMagic\r\n          modalUserMagic={modalUserMagic}\r\n          setModalUserMagic={setModalUserMagic}\r\n          hero={hero}\r\n          handleUseMagic={handleUseMagic}\r\n        />\r\n\r\n        <Toast\r\n          show={message && message.content}\r\n          type={message.type}\r\n          message={message.content}\r\n        />\r\n      </>\r\n    );\r\n};\r\n\r\nexport default ModalFight;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport Toast from '../../ui/Toast';\r\nimport CardItem from '../card/Item';\r\nimport { ITEM, SUCCESS } from '../../../utils/constants';\r\n\r\nconst ModalItem = ({ show, setModalGiftItem }) => {\r\n  const { randomItem, getRandomItem, resetRandomItem } =\r\n    useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleGet = data => {\r\n    let i = { ...data, id: uuidv4() };\r\n    let _nwi = [...hero.items, i];\r\n\r\n    setHero({ ...hero, items: _nwi });\r\n    messageHandler(SUCCESS, 'Item adiquirido com sucesso!', setMessage);\r\n\r\n    setModalGiftItem(false);\r\n    resetRandomItem();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted && !randomItem) getRandomItem(ITEM);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [randomItem]);\r\n\r\n  if (randomItem)\r\n    return (\r\n      <>\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <div className=\"modal-header\">\r\n              <h1>Presente</h1>\r\n              <button onClick={() => setModalGiftItem(false)}>\r\n                fechar\r\n              </button>{' '}\r\n            </div>\r\n\r\n            <div className=\"flex-justify-center\">\r\n              <CardItem\r\n                key={Math.random()}\r\n                data={randomItem}\r\n                handleClick={() => handleGet(randomItem)}\r\n                type=\"select\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Toast\r\n          show={message && message.content}\r\n          type={message.type}\r\n          message={message.content}\r\n        />\r\n      </>\r\n    );\r\n};\r\n\r\nexport default ModalItem;\r\n","import React from 'react';\r\n\r\nconst Code = () => {\r\n  return (\r\n    <div>\r\n      <h3>Code</h3>\r\n      <p>\r\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nostrum\r\n        quisquam voluptatem officia quidem vitae similique iste vero, saepe\r\n        alias porro nisi veritatis aspernatur cupiditate earum animi deleniti,\r\n        quibusdam impedit? Doloremque?\r\n      </p>\r\n      <code>83457</code>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Code;\r\n","import React from 'react';\r\n\r\nimport CardCode from '../card/Code';\r\n\r\nlet data = {\r\n  id: 1,\r\n  name: 'code',\r\n};\r\n\r\nconst Code = ({ show, setModalCode }) => {\r\n  const handleGet = data => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`modal-container ${show ? 'active' : ''}`}>\r\n        <div className={`modal ${show ? 'active' : ''}`}>\r\n          <div className=\"modal-header\">\r\n            <h1>Presente</h1>\r\n            <button onClick={() => setModalCode(false)}>fechar</button>{' '}\r\n          </div>\r\n\r\n          <div className=\"flex-justify-center\">\r\n            <CardCode\r\n              key={Math.random()}\r\n              data={data}\r\n              handleClick={() => handleGet(data)}\r\n              type=\"select\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Code;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, setPassword, password, type = 'none' }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>TY: {data.type}</span>\r\n        <span>RA: {data.rarity}</span>\r\n        <span>VL: {data.value}</span>\r\n      </div>\r\n\r\n      {type === 'key' && (\r\n        <form>\r\n          <input\r\n            autoFocus=\"autoFocus\"\r\n            className=\"card-password\"\r\n            type=\"text\"\r\n            onChange={e => setPassword(e.target.value)}\r\n            value={password}\r\n          />\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            abrir\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { isObjectEmpty } from '../../../utils';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport { CHEST, ERROR, SUCCESS } from '../../../utils/constants';\r\nimport Toast from '../../ui/Toast';\r\nimport CardItem from '../card/Chest';\r\n\r\nconst Chest = ({ show, setModalChest }) => {\r\n  const { randomChest, getRandomItem } = useContext(GameContext);\r\n\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleGet = data => {\r\n    console.log(data);\r\n\r\n    let code = data.code;\r\n    if (code === password) {\r\n      messageHandler(SUCCESS, 'Bau aberto com sucesso!', setMessage);\r\n    } else {\r\n      messageHandler(ERROR, 'Falha ao abrir o bau!', setMessage);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted && !randomChest) getRandomItem(CHEST);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [randomChest]);\r\n\r\n  if (!isObjectEmpty(randomChest))\r\n    return (\r\n      <>\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <div className=\"modal-header\">\r\n              <h1>Baú</h1>\r\n              <button onClick={() => setModalChest(false)}>fechar</button>{' '}\r\n            </div>\r\n\r\n            <div className=\"flex-justify-center\">\r\n              <CardItem\r\n                key={Math.random()}\r\n                data={randomChest}\r\n                handleClick={() => handleGet(randomChest)}\r\n                type=\"key\"\r\n                password={password}\r\n                setPassword={setPassword}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Toast\r\n          show={message && message.content}\r\n          type={message.type}\r\n          message={message.content}\r\n        />\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Chest;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { diceAnimation } from '../utils';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GameContext } from '../context/Game';\r\nimport { HeroContext } from '../context/Hero';\r\nimport Hero from '../components/game/card/HeroInline';\r\nimport GameMenu from '../components/game/GameMenu';\r\nimport Timeline from '../components/game/position/Timeline';\r\nimport ModalShop from '../components/game/modal/Shop';\r\nimport ModalTrap from '../components/game/modal/Trap';\r\nimport ModalFight from '../components/game/modal/Fight';\r\nimport ModalGiftItem from '../components/game/modal/Gift';\r\nimport ModalUserItems from '../components/game/modal/UserItems';\r\nimport ModalCode from '../components/game/modal/Code';\r\nimport ModalChest from '../components/game/modal/Chest';\r\nimport { BOSS, CHEST, CODE, ENEMY, ITEM, NULL, TRAP } from '../utils/constants';\r\n\r\nconst Game = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const { hero, setHero } = useContext(HeroContext);\r\n  const { dice, setDice, game, setGame, setEnemy, setFightLog, resetGame } =\r\n    useContext(GameContext);\r\n\r\n  // modal shop\r\n  const [modalShop, setModalShop] = useState(false);\r\n\r\n  // abre o modal de acordo com a posicao\r\n  const [modalFight, setModalFight] = useState(false);\r\n  const [modalItem, setModalItem] = useState(false);\r\n  const [modalGiftItem, setModalGiftItem] = useState(false);\r\n  const [modalTrap, setModalTrap] = useState(false);\r\n  const [modalCode, setModalCode] = useState(false);\r\n  const [modalChest, setModalChest] = useState(false);\r\n\r\n  // validar se os dados estao sendo atualizados\r\n  const [updatedDice, setUpdatedDice] = useState(false);\r\n\r\n  const reset = () => {\r\n    resetGame();\r\n    setHero(null);\r\n    setTimeout(() => navigate('/'), 5);\r\n  };\r\n\r\n  const play = () => {\r\n    if (game.mapLength === 0) {\r\n      return;\r\n    } else if (game.heroPosition < game.mapLength) {\r\n      // efeito de animacao dos dados\r\n      setGame({ ...game, playing: true });\r\n      diceAnimation(setDice, setUpdatedDice);\r\n    } else {\r\n      alert('Boss');\r\n    }\r\n  };\r\n\r\n  const playUpdateStats = () => {\r\n    setGame({\r\n      ...game,\r\n      heroPosition: game.heroPosition + dice,\r\n      playing: false,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      // verifica o tipo de posicao atual\r\n      let actualPosition = game.mapPositions[game.heroPosition + dice];\r\n\r\n      // verifica o tipo da posicao do mapa\r\n      if (!actualPosition) {\r\n        // TODO: BOSS\r\n        return;\r\n      } else {\r\n        let actualMapPosition = Object.keys(actualPosition)[0];\r\n\r\n        // abre o modal de acordo com o tipo de posicao\r\n        switch (actualMapPosition) {\r\n          case ENEMY:\r\n            setEnemy({ ...actualPosition.enemy });\r\n            setModalFight(true);\r\n            setFightLog([]);\r\n            break;\r\n          case ITEM:\r\n            setModalGiftItem(true);\r\n            break;\r\n          case TRAP:\r\n            setModalTrap(true);\r\n            break;\r\n          case BOSS:\r\n            break;\r\n          case CODE:\r\n            setModalCode(true);\r\n            break;\r\n          case CHEST:\r\n            setModalChest(true);\r\n            break;\r\n          case NULL:\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    // movimenta para proxima posicao apos animacao dos dados\r\n    if (updatedDice && mounted) {\r\n      playUpdateStats();\r\n    }\r\n\r\n    return () => {\r\n      mounted = false;\r\n      setUpdatedDice(false);\r\n    };\r\n  }, [updatedDice]);\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      {/* informacoes sobre o heroi*/}\r\n      {hero && <Hero data={hero} />}\r\n      {/* timeline */}\r\n      <Timeline game={game} />\r\n      {/* modal shop */}\r\n      <ModalShop show={modalShop} setModalShop={setModalShop} />\r\n      {/* modal itens do ususario */}\r\n      <ModalUserItems show={modalItem} setModalItem={setModalItem} />\r\n      {/* game modal luta */}\r\n      <ModalFight show={modalFight} setModalFight={setModalFight} />\r\n      {/* game modal item */}\r\n      <ModalGiftItem show={modalGiftItem} setModalGiftItem={setModalGiftItem} />\r\n      {/* game modal trap */}\r\n      <ModalTrap show={modalTrap} setModalTrap={setModalTrap} />\r\n      {/* game modal code */}\r\n      <ModalCode show={modalCode} setModalCode={setModalCode} />\r\n      {/* game code para o chest */}\r\n      <ModalChest show={modalChest} setModalChest={setModalChest} />\r\n      {/* game menu */}\r\n      <GameMenu\r\n        game={game}\r\n        play={play}\r\n        reset={reset}\r\n        modalShop={modalShop}\r\n        modalItem={modalItem}\r\n        setModalShop={setModalShop}\r\n        setModalItem={setModalItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport { Route, Routes } from 'react-router';\n\nimport Start from './pages/Start';\nimport Hero from './pages/SelectHero';\nimport Item from './pages/SelectItem';\nimport Map from './pages/SelectMap';\nimport Game from './pages/Game';\n\nfunction App() {\n  return (\n    <>\n      <Routes>\n        <Route exact path=\"/\" element={<Start />} />\n        <Route exact path=\"/select-hero\" element={<Hero />} />\n        <Route exact path=\"/select-item\" element={<Item />} />\n        <Route exact path=\"/select-map\" element={<Map />} />\n        <Route exact path=\"/start-game\" element={<Game />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nimport './css/reset.css';\nimport './css/index.css';\nimport './css/card.css';\nimport './css/modal.css';\nimport './css/game.css';\nimport './css/map.css';\nimport './css/hero.css';\nimport './css/message.css';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ContextHero } from './context/Hero';\nimport { ContextGame } from './context/Game';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <ContextGame>\n      <ContextHero>\n        <Router basename={process.env.PUBLIC_URL}>\n          <App />\n        </Router>\n      </ContextHero>\n    </ContextGame>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}