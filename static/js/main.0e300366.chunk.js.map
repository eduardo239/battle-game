{"version":3,"sources":["pages/Start.js","utils/constants.js","components/game/card/Hero.js","context/Game.js","context/Hero.js","utils/index.js","pages/SelectHero.js","components/game/card/Item.js","pages/SelectItem.js","utils/game.js","components/game/card/Map.js","pages/SelectMap.js","components/game/card/HeroInline.js","components/game/Dice.js","components/ui/ConfirmModal.js","components/game/GameButtons.js","components/game/GameMenu.js","components/game/position/Position.js","components/game/position/Timeline.js","components/game/card/Weapon.js","components/ui/Toast.js","components/game/modal/Shop.js","components/game/card/Trap.js","components/game/modal/Trap.js","components/game/modal/fight/Log.js","components/game/modal/fight/Turn.js","components/game/modal/fight/Play.js","components/game/modal/fight/Fight.js","components/game/modal/fight/LevelUp.js","components/game/modal/UserItems.js","components/game/card/Magic.js","components/game/modal/fight/ModalMagic.js","components/game/modal/ModalFight.js","components/game/modal/ModalItem.js","pages/Game.js","App.js","index.js"],"names":["Start","react_default","a","createElement","className","react_router_dom","to","NULL","ENEMY","ITEM","LEVEL_BASE","LEVEL_EASY","concat","URL_IMG_GH","URL_UNK","Card","_ref","data","handleClick","_ref$type","type","price","health","src","poster","alt","name","mana","onClick","GameContext","React","createContext","GameProvider","Provider","ContextGame","children","_useState","useState","_useState2","Object","slicedToArray","heroes","setHeroes","_useState3","_useState4","items","setItems","_useState5","_useState6","maps","setMaps","_useState7","_useState8","enemies","setEnemies","_useState9","_useState10","weapons","setWeapos","_useState11","_useState12","magic","setMagic","_useState13","_useState14","traps","setTraps","_useState15","_useState16","enemy","setEnemy","_useState17","_useState18","item","setItem","_useState19","_useState20","fightLog","setFightLog","_useState21","_useState22","map","setMap","_useState23","_useState24","randomItem","setRandomItem","_useState25","_useState26","randomTrap","setRandomTrap","_useState27","_useState28","dice","setDice","_useState29","mapPositions","mapLength","heroPosition","end","playing","_useState30","game","setGame","_useState31","round","modalInventory","turn","winner","_useState32","fight","setFight","useEffect","mounted","length","heroes_api","items_api","maps_api","enemies_api","weapons_api","magic_api","traps_api","value","resetGame","resetFight","getRandomItem","arr","Math","floor","random","resetRandomItem","resetRandomTrap","HeroContext","HeroProvider","ContextHero","hero","setHero","min","max","isObjectEmpty","obj","keys","getNextLevel","base","pow","SelectHero","useContext","_useContext2","Hero","key","_nxt","level","objectSpread","nextLevel","handleSelectThis","splice","disabled","rarity","SelectItem","_useContext","handleSelect","id","uuidv4","equipped","weapon","Item","messageHandler","message","setMessage","timer","arguments","undefined","content","setTimeout","Map","size","SelectMap","navigate","useNavigate","card_Map","positions","i","_positions$push","push","defineProperty","init","boss","generatePositions","error","console","warn","HeroInline","gold","exp","Dice","ConfirmModal","active","cancel","GameButtons","play","reset","setModalItem","setModalShop","modalShop","modalItem","resetModal","setResetModal","Fragment","ui_ConfirmModal","GameMenu","game_Dice","game_GameButtons","Position","index","Timeline","position","position_Position","Toast","Shop","show","handleBuy","newGold","newItems","toConsumableArray","Weapon","ui_Toast","Trap","setModalTrap","card_Trap","_dpf","alert","handleTrap","Log","log","JSON","stringify","Turn","Play","flee","hit","setModalUserMagic","Fight","LevelUp","activeClass","setActiveClass","UserItems","arrItems","filter","_itx","poison","handleUse","ModalMagic","modalUserMagic","handleUseMagic","Magic","reverse","ModalFight","setModalFight","_rxn","_sta","enemyTurn","_pex","_exl","victories","fight_LevelUp","fight_Turn","fight_Fight","fight_Play","expHero","_wep","_dmg","_stq","fight_Log","modal_UserItems","fight_ModalMagic","_mpp","ModalItem","setModalGiftItem","_nwi","handleGet","Game","modalFight","modalGiftItem","modalTrap","updatedDice","setUpdatedDice","playUpdateStats","actualPosition","card_HeroInline","position_Timeline","modal_Shop","modal_ModalFight","modal_ModalItem","modal_Trap","game_GameMenu","_counter","interval","setInterval","clearInterval","diceAnimation","App","react_router","exact","path","element","pages_Start","pages_SelectHero","pages_SelectItem","pages_SelectMap","pages_Game","ReactDOM","createRoot","document","getElementById","render","StrictMode","Game_ContextGame","Hero_ContextHero","basename","process","src_App"],"mappings":"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","file":"static/js/main.0e300366.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Start = () => {\r\n  return (\r\n    <div className=\"center-center\">\r\n      <Link to=\"/select-hero\">\r\n        <button>\r\n          iniciar{' '}\r\n          <span className=\"material-symbols-outlined\">chevron_right</span>\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","export const NULL = 'null';\r\nexport const ENEMY = 'enemy';\r\nexport const ITEM = 'item';\r\nexport const TRAP = 'trap';\r\nexport const BOSS = 'boss';\r\nexport const INIT = 'init';\r\n\r\nexport const BOMB = 'bomb';\r\n\r\nexport const LEVEL_BASE = [NULL, ENEMY, TRAP, ITEM];\r\nexport const LEVEL_EASY = [NULL, ENEMY, ENEMY, ITEM].concat(LEVEL_BASE);\r\nexport const LEVEL_MEDIUM = [NULL, ENEMY, ENEMY, ENEMY, ITEM].concat(\r\n  LEVEL_BASE\r\n);\r\nexport const LEVEL_HARD = 'hard';\r\n\r\nexport const MANA = 'mana';\r\nexport const HEALTH = 'health';\r\nexport const POISON = 'poison';\r\n\r\nexport const SUCCESS = 'success';\r\nexport const WARNING = 'warning';\r\nexport const ERROR = 'error';\r\n\r\nexport const URL_IMG = 'http://localhost:3000/images/';\r\nexport const URL_IMG_GH =\r\n  'https://raw.githubusercontent.com/eduardo239/card-game/main/public/images/';\r\nexport const URL_EMP = 'empty_card.png';\r\nexport const URL_UNK = 'unknow_card.png';\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none' }) => {\r\n  if (data)\r\n    return (\r\n      <div className=\"card\">\r\n        {type === 'shop' && <span>{data.price}</span>}\r\n        <div\r\n          className={`card-image ${data.health <= 0 ? 'filter-grayscale' : ''}`}\r\n        >\r\n          <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <span>NA: {data.name}</span>\r\n          <span>TY: {data.type}</span>\r\n          <span className={`${data.health < 25 ? 'color-error' : ''}`}>\r\n            HP: {data.health}\r\n          </span>\r\n          {data.mana && <span>MP: {data.mana}</span>}\r\n        </div>\r\n        {type === 'shop' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            buy\r\n          </button>\r\n        )}\r\n        {type === 'use' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            use\r\n          </button>\r\n        )}\r\n        {type === 'select' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            selecionar\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport heroes_api from '../api/heroes.json';\r\nimport items_api from '../api/items.json';\r\nimport maps_api from '../api/maps.json';\r\nimport enemies_api from '../api/enemies.json';\r\nimport magic_api from '../api/magic.json';\r\nimport weapons_api from '../api/weapons.json';\r\nimport traps_api from '../api/traps.json';\r\nimport { ITEM, TRAP } from '../utils/constants';\r\n\r\nconst GameContext = React.createContext();\r\nconst GameProvider = GameContext.Provider;\r\n\r\nconst ContextGame = ({ children }) => {\r\n  const [heroes, setHeroes] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n  const [maps, setMaps] = useState([]);\r\n  const [enemies, setEnemies] = useState([]);\r\n  const [weapons, setWeapos] = useState([]);\r\n  const [magic, setMagic] = useState([]);\r\n  const [traps, setTraps] = useState([]);\r\n\r\n  // dados das posicoes\r\n  const [enemy, setEnemy] = useState(null);\r\n  const [item, setItem] = useState(null);\r\n\r\n  // log da luta\r\n  const [fightLog, setFightLog] = useState([]);\r\n\r\n  // mapa selecionado\r\n  const [map, setMap] = useState(null);\r\n\r\n  // gift item\r\n  const [randomItem, setRandomItem] = useState(null);\r\n  const [randomTrap, setRandomTrap] = useState(null);\r\n\r\n  // dice\r\n  const [dice, setDice] = useState(0);\r\n\r\n  // estado do jogo\r\n  const [game, setGame] = useState({\r\n    map: null,\r\n    mapPositions: 0,\r\n    mapLength: 0,\r\n    heroPosition: 0,\r\n    end: false,\r\n    playing: false,\r\n  });\r\n\r\n  // estado da luta\r\n  const [fight, setFight] = useState({\r\n    round: 0,\r\n    modalInventory: false,\r\n    end: false,\r\n    turn: 0,\r\n    winner: null,\r\n  });\r\n\r\n  const resetGame = () => {\r\n    setGame({\r\n      map: null,\r\n      mapPositions: 0,\r\n      mapLength: 0,\r\n      heroPosition: 0,\r\n      end: false,\r\n      playing: false,\r\n    });\r\n  };\r\n\r\n  const resetFight = () => {\r\n    setFight({\r\n      round: 0,\r\n      modalInventory: false,\r\n      end: false,\r\n      turn: 0,\r\n      winner: null,\r\n    });\r\n  };\r\n\r\n  const getRandomItem = arr => {\r\n    switch (arr) {\r\n      case ITEM:\r\n        setRandomItem(items[Math.floor(Math.random() * items.length)]);\r\n        break;\r\n      case TRAP:\r\n        setRandomTrap(traps[Math.floor(Math.random() * traps.length)]);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const resetRandomItem = () => setRandomItem(null);\r\n  const resetRandomTrap = () => setRandomTrap(null);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted) {\r\n      // carregar os itens da api\r\n      if (heroes.length === 0) setHeroes(heroes_api);\r\n      // carregar os herois da api\r\n      if (items.length === 0) setItems(items_api);\r\n      // carregar os mapas da api\r\n      if (maps.length === 0) setMaps(maps_api);\r\n      // carregar os inimigos da api\r\n      if (enemies.length === 0) setEnemies(enemies_api);\r\n      // carregar as armas da api\r\n      if (weapons.length === 0) setWeapos(weapons_api);\r\n      // carregar as magicas da api\r\n      if (magic.length === 0) setMagic(magic_api);\r\n      // carregar as traps da api\r\n      if (traps.length === 0) setTraps(traps_api);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [heroes, items, maps, enemies, weapons, magic]);\r\n\r\n  return (\r\n    <GameProvider\r\n      value={{\r\n        heroes,\r\n        items,\r\n        maps,\r\n        enemies,\r\n        map,\r\n        weapons,\r\n        magic,\r\n        game,\r\n        enemy,\r\n        item,\r\n        fight,\r\n        fightLog,\r\n        dice,\r\n        setMap,\r\n        setGame,\r\n        setFight,\r\n        setEnemy,\r\n        setItem,\r\n        setFightLog,\r\n        resetGame,\r\n        resetFight,\r\n        randomItem,\r\n        getRandomItem,\r\n        randomTrap,\r\n        resetRandomItem,\r\n        resetRandomTrap,\r\n        setDice,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameProvider>\r\n  );\r\n};\r\n\r\nexport { GameContext, ContextGame };\r\n","import React, { useState } from 'react';\r\n\r\nconst HeroContext = React.createContext();\r\nconst HeroProvider = HeroContext.Provider;\r\n\r\nconst ContextHero = ({ children }) => {\r\n  const [hero, setHero] = useState(null);\r\n\r\n  return (\r\n    <HeroProvider\r\n      value={{\r\n        setHero,\r\n        hero,\r\n      }}\r\n    >\r\n      {children}\r\n    </HeroProvider>\r\n  );\r\n};\r\n\r\nexport { HeroContext, ContextHero };\r\n","// generate random number from min to max\r\n/**\r\n *\r\n * @param {int} min\r\n * @param {int} max\r\n * @returns int\r\n */\r\nexport const random = (min, max) =>\r\n  Math.floor(Math.random() * (max - min + 1) + min);\r\n\r\n/**\r\n *\r\n * @param {Object} obj Valida se o objeto esta vazio\r\n * @returns\r\n */\r\nexport const isObjectEmpty = obj => {\r\n  if (!obj) return true;\r\n  return Object.keys(obj).length === 0;\r\n};\r\n\r\n/**\r\n *\r\n * @param {int} base recebe o nivel atual do heroi\r\n * @returns inteiro com o total de experiencia para evoluir para o proximo nivel\r\n */\r\nexport const getNextLevel = base => {\r\n  let con = 1.256;\r\n  let nextLevel = Math.floor(con ** base * 100);\r\n  return nextLevel;\r\n};\r\n\r\n// for (let x = 0; x < 100; x++) {\r\n//   console.log(getNextLevel(x));\r\n// }\r\n\r\nexport const diceAnimation = (setDice, setUpdatedDice) => {\r\n  let _counter = 0;\r\n\r\n  let interval = setInterval(() => {\r\n    _counter += 1;\r\n\r\n    setDice(random(1, 6));\r\n\r\n    if (_counter >= 10) {\r\n      clearInterval(interval);\r\n      setUpdatedDice(true);\r\n    }\r\n  }, 100);\r\n};\r\n","import React, { useContext } from 'react';\r\nimport CardHero from '../components/game/card/Hero';\r\nimport { Link } from 'react-router-dom';\r\nimport { GameContext } from '../context/Game';\r\nimport { HeroContext } from '../context/Hero';\r\nimport { getNextLevel } from '../utils';\r\nimport { URL_UNK } from '../utils/constants';\r\n\r\nconst SelectHero = () => {\r\n  const { heroes } = useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const handleSelectThis = data => {\r\n    // adicionar o heroi\r\n    let _nxt = getNextLevel(data.level);\r\n    setHero({ ...data, nextLevel: _nxt });\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-center\">\r\n      <div>\r\n        {/* loop pelos herois da api */}\r\n        <div className=\"card-grid\">\r\n          {heroes.length > 0 ? (\r\n            heroes\r\n              .map(hero => (\r\n                <CardHero\r\n                  key={Math.random()}\r\n                  data={hero}\r\n                  handleClick={() => handleSelectThis(hero)}\r\n                  type=\"select\"\r\n                />\r\n              ))\r\n              .splice(0, 3)\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* menu */}\r\n        <div className=\"menu-select\">\r\n          <Link to=\"/\">\r\n            <button>\r\n              início{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_before</span>\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/select-item\">\r\n            <button disabled={!hero}>\r\n              próximo{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_next</span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* mostrar o heroi selecionado */}\r\n        <div className=\"card-grid\">\r\n          {hero ? (\r\n            <CardHero key={Math.random()} data={hero}></CardHero>\r\n          ) : (\r\n            <CardHero data={{ name: 'Nada selecionado', poster: URL_UNK }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectHero;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none' }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>TY: {data.type}</span>\r\n        <span>RA: {data.rarity}</span>\r\n        <span>VL: {data.value}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          comprar\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Link } from 'react-router-dom';\r\nimport { GameContext } from '../context/Game';\r\nimport { HeroContext } from '../context/Hero';\r\nimport CardItem from '../components/game/card/Item';\r\nimport { URL_UNK } from '../utils/constants';\r\n\r\nconst SelectItem = () => {\r\n  const { items, magic, weapons } = useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const handleSelectThis = data => {\r\n    // adicionar o item aos items do heroi\r\n    setHero({\r\n      ...hero,\r\n      items: [data],\r\n      magic: [magic[0]],\r\n      weapons: [weapons[0]],\r\n      equipped: {\r\n        weapon: weapons[0],\r\n      },\r\n    });\r\n\r\n    // TODO: adicionar a magica e a arma ao heroi\r\n  };\r\n\r\n  const handleSelect = data => {\r\n    data.id = uuidv4();\r\n    handleSelectThis(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-center\">\r\n      <div>\r\n        {/* loop pelos herois da api */}\r\n        <div className=\"card-grid\">\r\n          {items.length > 0 ? (\r\n            items\r\n              .map(item => (\r\n                <CardItem\r\n                  key={Math.random()}\r\n                  data={item}\r\n                  handleClick={() => handleSelect(item)}\r\n                  type=\"select\"\r\n                />\r\n              ))\r\n              .splice(0, 3)\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* menu */}\r\n        <div className=\"menu-select\">\r\n          <Link to=\"/select-hero\">\r\n            <button>\r\n              voltar{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_before</span>\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/select-map\">\r\n            <button disabled={!hero || hero.items.length === 0}>\r\n              próximo{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_next</span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* mostrar o heroi selecionado */}\r\n        <div className=\"card-grid\">\r\n          {hero && hero.items && hero.items.length > 0 ? (\r\n            hero.items.map(item => (\r\n              <CardItem key={Math.random()} data={item}></CardItem>\r\n            ))\r\n          ) : (\r\n            <CardItem data={{ name: 'Nada selecionado', poster: URL_UNK }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectItem;\r\n","import { BOSS, ENEMY, ITEM, LEVEL_EASY, NULL, TRAP, INIT } from './constants';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n/**\r\n *\r\n * @param {Object} map necessário conter map.size\r\n * @param {Array} enemies array de inimigos\r\n * @param {Array} items array de itens\r\n * @returns retonrno uma array com posicoes aleatorias\r\n */\r\nexport const generatePositions = (map, enemies, items) => {\r\n  let positions = [];\r\n\r\n  for (let i = 0; i < map.size; i++) {\r\n    // gera um valor aleatorio para cada posicao\r\n    let key = [LEVEL_EASY[Math.floor(Math.random() * LEVEL_EASY.length)]];\r\n    let value = '';\r\n    // valida o tipo da posicao\r\n    switch (key[0]) {\r\n      case ENEMY:\r\n        value = enemies[Math.floor(Math.random() * enemies.length)];\r\n        break;\r\n      case ITEM:\r\n        value = items[Math.floor(Math.random() * items.length)];\r\n        break;\r\n      case TRAP:\r\n        value = { name: 'trap' };\r\n        break;\r\n      case NULL:\r\n        value = {};\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    positions.push({ [key]: value, id: uuidv4() });\r\n  }\r\n\r\n  positions[0] = { init: { name: INIT }, id: uuidv4() };\r\n  positions[positions.length - 1] = { boss: { name: BOSS }, id: uuidv4() };\r\n\r\n  return positions;\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} type tipo de mensagem, success, warning ou error\r\n * @param {String} message mensagem que aparecera no Toast\r\n * @param {function} setMessage funcao do useState, para resetar a mensagem\r\n * @param {integer} timer tempo em milisegundos\r\n */\r\nexport const messageHandler = (type, message, setMessage, timer = 3000) => {\r\n  if (type && message && setMessage) {\r\n    setMessage({\r\n      type: type,\r\n      content: message,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setMessage({\r\n        type: '',\r\n        content: '',\r\n      });\r\n    }, timer);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Map = ({ data, handleClick, type = 'none' }) => {\r\n  if (data)\r\n    return (\r\n      <div className=\"card\">\r\n        {type === 'shop' && <span>{data.price}</span>}\r\n\r\n        <div className=\"card-image\">\r\n          <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n        </div>\r\n\r\n        <div className=\"card-content\">\r\n          <span>NA: {data.name}</span>\r\n          <span>TY: {data.type}</span>\r\n          <span>LV: {data.level}</span>\r\n          <span>SZ: {data.size}</span>\r\n        </div>\r\n        {type === 'shop' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            buy\r\n          </button>\r\n        )}\r\n        {type === 'use' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            use\r\n          </button>\r\n        )}\r\n        {type === 'select' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            selecionar\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useContext } from 'react';\r\nimport { GameContext } from '../context/Game';\r\nimport { generatePositions } from '../utils/game';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport CardMap from '../components/game/card/Map';\r\nimport { URL_UNK } from '../utils/constants';\r\n\r\nconst SelectMap = () => {\r\n  const navigate = useNavigate();\r\n  const { items, enemies, map, maps, setMap, game, setGame } =\r\n    useContext(GameContext);\r\n\r\n  const handleSelectThis = data => {\r\n    // adicionar o mapa ao jogo\r\n    setMap(data);\r\n  };\r\n\r\n  const initGame = () => {\r\n    // configurar o jogo\r\n    setGame({ ...game, map: map });\r\n\r\n    // gerar as posicoes\r\n    try {\r\n      let positions = generatePositions(map, enemies, items);\r\n      setGame({\r\n        ...game,\r\n        map: map,\r\n        mapPositions: positions,\r\n        mapLength: positions.length,\r\n        heroPosition: 0,\r\n      });\r\n\r\n      // redirecionar e iniciar o jogo\r\n      setTimeout(() => navigate('/start-game'), 100);\r\n    } catch (error) {\r\n      console.warn(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-center\">\r\n      <div>\r\n        {/* loop pelos herois da api */}\r\n        <div className=\"card-grid\">\r\n          {maps.length > 0 ? (\r\n            maps.map(data => (\r\n              <CardMap\r\n                key={Math.random()}\r\n                data={data}\r\n                handleClick={() => handleSelectThis(data)}\r\n                type=\"select\"\r\n              />\r\n            ))\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* menu */}\r\n        <div className=\"menu-select\">\r\n          <Link to=\"/select-item\">\r\n            <button>\r\n              voltar{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_before</span>{' '}\r\n            </button>\r\n          </Link>\r\n          <button onClick={initGame} disabled={!map}>\r\n            começar{' '}\r\n            <span className=\"material-symbols-outlined\">navigate_next</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* mostrar o heroi selecionado */}\r\n        <div className=\"card-grid\">\r\n          {map != null ? (\r\n            <CardMap key={Math.random()} data={map}></CardMap>\r\n          ) : (\r\n            <CardMap data={{ name: 'Nada selecionado', poster: URL_UNK }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectMap;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst HeroInline = ({ data }) => {\r\n  if (data)\r\n    return (\r\n      <div className=\"hero-inline-container\">\r\n        <div\r\n          className={`card-image ${data.health <= 0 ? 'filter-grayscale' : ''}`}\r\n        >\r\n          <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          <div className=\"hero-inline\">\r\n            <span>\r\n              <b>HERÓI</b>\r\n            </span>\r\n            <span>\r\n              <b>VIDA</b>\r\n            </span>\r\n            <span>\r\n              <b>MANA</b>\r\n            </span>\r\n            <span>\r\n              <b>GOLD</b>\r\n            </span>\r\n            <span>\r\n              <b>EXP</b>\r\n            </span>\r\n            <span>\r\n              <b>NIVEL</b>\r\n            </span>\r\n            <span>\r\n              <b>LEVEL UP</b>\r\n            </span>\r\n          </div>\r\n          <div className=\"hero-inline\">\r\n            <span>{data.name}</span>\r\n            <span>{data.health}</span>\r\n            <span>{data.mana}</span>\r\n            <span>${data.gold}</span>\r\n            <span>\r\n              {data.exp}/{data.nextLevel}\r\n            </span>\r\n            <span>{data.level}</span>\r\n            <span>{data.nextLevel}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default HeroInline;\r\n","import React, { useContext } from 'react';\r\nimport { GameContext } from '../../context/Game';\r\nimport { isObjectEmpty } from '../../utils';\r\n\r\nconst Dice = () => {\r\n  const { game, dice } = useContext(GameContext);\r\n\r\n  if (!isObjectEmpty(game))\r\n    return (\r\n      <div className=\"dices\">\r\n        <div className={`dice ${dice === 1 ? 'active' : ''}`}>1</div>\r\n        <div className={`dice ${dice === 2 ? 'active' : ''}`}>2</div>\r\n        <div className={`dice ${dice === 3 ? 'active' : ''}`}>3</div>\r\n        <div className={`dice ${dice === 4 ? 'active' : ''}`}>4</div>\r\n        <div className={`dice ${dice === 5 ? 'active' : ''}`}>5</div>\r\n        <div className={`dice ${dice === 6 ? 'active' : ''}`}>6</div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Dice;\r\n","import React from 'react';\r\n\r\nconst ConfirmModal = ({ onClick, active, cancel, message }) => {\r\n  return (\r\n    <div className={`modal-confirm-container ${active ? 'active' : ''}`}>\r\n      <div className=\"modal-confirm\">\r\n        <p>{message}</p>\r\n        <div className=\"flex-justify-end\">\r\n          <button onClick={() => cancel(false)}>cancelar</button>\r\n          <button onClick={onClick}>confirmar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React, { useState } from 'react';\r\nimport ConfirmModal from '../ui/ConfirmModal';\r\n\r\nconst GameButtons = ({\r\n  play,\r\n  reset,\r\n  game,\r\n  setModalItem,\r\n  setModalShop,\r\n  modalShop,\r\n  modalItem,\r\n}) => {\r\n  const [resetModal, setResetModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <ConfirmModal\r\n        onClick={reset}\r\n        active={resetModal}\r\n        cancel={setResetModal}\r\n        message=\"Tem certeza que deseja reiniciar o jogo?\"\r\n      />\r\n\r\n      <div className=\"game-menu-buttons\">\r\n        <button disabled={game.playing || game.end} onClick={() => play()}>\r\n          jogar\r\n        </button>\r\n        <button\r\n          disabled={game.playing || game.end}\r\n          onClick={() => setModalShop(!modalShop)}\r\n        >\r\n          loja\r\n        </button>\r\n        <button\r\n          disabled={game.playing || game.end}\r\n          onClick={() => setModalItem(!modalItem)}\r\n        >\r\n          inventário\r\n        </button>\r\n        <button disabled={game.playing} onClick={() => setResetModal(true)}>\r\n          reiniciar\r\n        </button>\r\n        <button disabled={game.playing}>salvar</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameButtons;\r\n","import React from 'react';\r\nimport Dice from './Dice';\r\nimport GameButtons from './GameButtons';\r\n\r\nconst GameMenu = ({\r\n  game,\r\n  play,\r\n  reset,\r\n  modalShop,\r\n  modalItem,\r\n  setModalItem,\r\n  setModalShop,\r\n}) => {\r\n  return (\r\n    <div className=\"game-menu\">\r\n      <Dice />\r\n\r\n      <GameButtons\r\n        game={game}\r\n        play={play}\r\n        reset={reset}\r\n        modalShop={modalShop}\r\n        modalItem={modalItem}\r\n        setModalShop={setModalShop}\r\n        setModalItem={setModalItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameMenu;\r\n","import React from 'react';\r\n\r\nconst Position = ({ data, index, heroPosition }) => {\r\n  return (\r\n    <div\r\n      className={`position ${\r\n        heroPosition === index ? 'active' : heroPosition > index ? 'pass' : ''\r\n      }`}\r\n    >\r\n      {index} - {Object.keys(data)[0]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Position;\r\n","import React from 'react';\r\nimport Position from './Position';\r\n\r\nconst Timeline = ({ game }) => {\r\n  return (\r\n    <>\r\n      {game.map ? (\r\n        game.mapPositions.map((position, index) => (\r\n          <Position\r\n            key={position.id}\r\n            data={position}\r\n            index={index}\r\n            heroPosition={game.heroPosition}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          <span>Nenhuma informação encontrada</span>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none' }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>RR: {data.rarity}</span>\r\n        <span>MI: {data.min}</span>\r\n        <span>MX: {data.max}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          comprar\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nconst Toast = ({ message, type }) => {\r\n  return (\r\n    <div\r\n      className={`message ${\r\n        type === 'success'\r\n          ? 'success'\r\n          : type === 'warning'\r\n          ? 'warning'\r\n          : type === 'error'\r\n          ? 'error'\r\n          : ''\r\n      }`}\r\n    >\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n","import React, { useContext, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport CardItem from '../card/Item';\r\nimport CardWeapon from '../card/Weapon';\r\nimport Toast from '../../ui/Toast';\r\nimport { SUCCESS, WARNING } from '../../../utils/constants';\r\nimport { isObjectEmpty } from '../../../utils';\r\n\r\nconst Shop = ({ show, setModalShop }) => {\r\n  const { items, weapons } = useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleBuy = data => {\r\n    if (!isObjectEmpty(hero)) {\r\n      if (hero.gold >= data.price) {\r\n        // compra de item e adiciona a lista do heroi\r\n        let newGold = hero.gold - data.price;\r\n        let i = { ...data, id: uuidv4() };\r\n        let newItems = [...hero.items, i];\r\n\r\n        setHero({ ...hero, items: newItems, gold: newGold });\r\n        messageHandler(SUCCESS, 'Item comprado com sucesso!', setMessage);\r\n      } else {\r\n        messageHandler(WARNING, 'Sem ouro suficiente para compra!', setMessage);\r\n      }\r\n    } else {\r\n      messageHandler(WARNING, 'O herói não foi selecionado!', setMessage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`modal-container ${show ? 'active' : ''}`}>\r\n        <div className={`modal ${show ? 'active' : ''}`}>\r\n          <div className=\"flex-justify-between\">\r\n            <h1>Loja</h1>\r\n            <h3 className=\"color-warning \">\r\n              Saldo do herói: ${(hero && hero.gold) || 0}\r\n            </h3>\r\n            <button onClick={() => setModalShop(false)}>fechar</button>\r\n          </div>\r\n\r\n          <h3>Itens</h3>\r\n          <div className=\"card-container\">\r\n            {items.length > 0 ? (\r\n              items.map(item => (\r\n                <CardItem\r\n                  key={item.id}\r\n                  data={item}\r\n                  handleClick={() => handleBuy(item)}\r\n                  type=\"shop\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <span>Nada encontrado aqui</span>\r\n            )}\r\n          </div>\r\n\r\n          {/* armas */}\r\n          <h3>Armas</h3>\r\n          <div className=\"card-container\">\r\n            {weapons.length > 0 ? (\r\n              weapons.map(weapon => (\r\n                <CardWeapon\r\n                  key={weapon.id}\r\n                  data={weapon}\r\n                  handleClick={() => handleBuy(weapon)}\r\n                  type=\"shop\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <span>Nada encontrado aqui</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {message && message.content && (\r\n        <Toast type={message.type} message={message.content} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none' }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>TY: {data.type}</span>\r\n        <span>MI: {data.min}</span>\r\n        <span>MX: {data.max}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          comprar\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport { ERROR, BOMB, TRAP } from '../../../utils/constants';\r\nimport Toast from '../../ui/Toast';\r\nimport CardTrap from '../card/Trap';\r\nimport { random } from '../../../utils';\r\n\r\nconst Trap = ({ show, setModalTrap }) => {\r\n  const { randomTrap, getRandomItem, resetRandomItem, game, setGame } =\r\n    useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleTrap = data => {\r\n    let _tpd = data.type;\r\n    let _dpf = 0;\r\n    switch (_tpd) {\r\n      case BOMB:\r\n        _dpf = random(data.min, data.max);\r\n        setHero({ ...hero, health: (hero.health -= _dpf) });\r\n        messageHandler(ERROR, `O herói sofreu ${_dpf} de dano`, setMessage);\r\n\r\n        if (hero.health <= 0) {\r\n          messageHandler(ERROR, `GAME OVER`, setMessage, 5000);\r\n          setGame({ ...game, end: true });\r\n        }\r\n        break;\r\n\r\n      default:\r\n        alert('[Trap.js] - Erro ao escolher o tipo de dano');\r\n        break;\r\n    }\r\n\r\n    setModalTrap(false);\r\n    resetRandomItem();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted && !randomTrap) getRandomItem(TRAP);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [randomTrap]);\r\n\r\n  if (randomTrap)\r\n    return (\r\n      <>\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <div className=\"flex-justify-between\">\r\n              <h1>Trap</h1>\r\n            </div>\r\n            <div className=\"grid-container\">\r\n              <CardTrap\r\n                key={Math.random()}\r\n                data={randomTrap}\r\n                handleClick={() => handleTrap(randomTrap)}\r\n                type=\"select\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {message && message.content && (\r\n          <Toast type={message.type} message={message.content} />\r\n        )}\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Trap;\r\n","import React from 'react';\r\n\r\nconst Log = ({ fightLog }) => {\r\n  return (\r\n    <div className=\"game-fight-log \">\r\n      {fightLog.length > 0 ? (\r\n        fightLog.map((log, index) => <p key={index}>{JSON.stringify(log)}</p>)\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Log;\r\n","import React from 'react';\r\n\r\nconst Turn = ({ fight }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <small>Rodada: {fight.round || 0}</small>\r\n      </div>\r\n      <div>\r\n        {!fight.end ? (\r\n          <small>\r\n            Vez de jogar:{' '}\r\n            {fight.turn === 0\r\n              ? ' Vez do Herói de jogar'\r\n              : ' O Inimigo está atacando ....'}\r\n          </small>\r\n        ) : (\r\n          <small>\r\n            Fim da luta:\r\n            {fight.winner === 0 ? ' O herói venceu !' : ' O Inimigo venceu !'}\r\n          </small>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Turn;\r\n","import React from 'react';\r\n\r\nconst Play = ({ fight, flee, hero, hit, setModalUserMagic, setModalItem }) => {\r\n  return (\r\n    <div className=\"game-fight-menu\">\r\n      <button disabled={fight.end || fight.turn === 1} onClick={hit}>\r\n        lutar\r\n      </button>\r\n      <button\r\n        disabled={fight.end || fight.turn === 1 || hero.mana <= 0}\r\n        onClick={() => setModalUserMagic(true)}\r\n      >\r\n        mágica\r\n      </button>\r\n      <button\r\n        disabled={fight.end || fight.turn === 1}\r\n        onClick={() => setModalItem(true)}\r\n      >\r\n        inventário\r\n      </button>\r\n\r\n      <button disabled={fight.turn === 1 && !fight.end} onClick={flee}>\r\n        {fight.end && fight.winner === 0\r\n          ? 'sair'\r\n          : fight.end && fight.winner === 1\r\n          ? 'fim'\r\n          : 'fugir'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Play;\r\n","import React from 'react';\r\nimport CardHero from '../../card/Hero';\r\n\r\nconst Fight = ({ hero, enemy }) => {\r\n  return (\r\n    <div className=\"game-fight\">\r\n      <div className=\"text-center\">\r\n        <h4>Herói</h4>\r\n        <CardHero data={hero}></CardHero>\r\n      </div>\r\n\r\n      <h1>vs</h1>\r\n\r\n      <div className=\"text-center\">\r\n        <h4>Inimigo</h4>\r\n        {enemy && <CardHero data={enemy}></CardHero>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fight;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst LevelUp = ({ hero }) => {\r\n  const [activeClass, setActiveClass] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted) {\r\n      if (hero.level > 1) {\r\n        setActiveClass(true);\r\n\r\n        setTimeout(() => {\r\n          setActiveClass(false);\r\n        }, 1000);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [hero.level]);\r\n\r\n  return (\r\n    <div className={`level-up ${activeClass ? 'active' : ''}`}>\r\n      <span>\r\n        Subiu para o nível: {` `}\r\n        <b>{hero.level || 0}</b>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LevelUp;\r\n","import React, { useContext, useState } from 'react';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { MANA, HEALTH, POISON, SUCCESS } from '../../../utils/constants';\r\nimport Toast from '../../ui/Toast';\r\nimport Card from '../card/Item';\r\n\r\nconst UserItems = ({ show, setModalItem }) => {\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleUse = data => {\r\n    // remove item da lista ao utilizar\r\n    let arrItems = hero.items.filter(i => i.id !== data.id);\r\n    let _itx = '';\r\n\r\n    switch (data.type) {\r\n      case MANA:\r\n        // TODO: validar mana maxima\r\n        setHero({ ...hero, items: arrItems, mana: hero.mana + data.value });\r\n        _itx =\r\n          'O Herói usou ' +\r\n          data.name +\r\n          ' e aumentou ' +\r\n          data.value +\r\n          ' de mana.';\r\n        setMessage({ type: SUCCESS, content: _itx });\r\n        break;\r\n      case HEALTH:\r\n        // TODO: validar vida maxima\r\n        setHero({ ...hero, items: arrItems, health: hero.health + data.value });\r\n        _itx =\r\n          'O Herói usou ' +\r\n          data.name +\r\n          ' e curou ' +\r\n          data.value +\r\n          ' de sua vida.';\r\n        setMessage({ type: SUCCESS, content: _itx });\r\n        break;\r\n      case POISON:\r\n        // TODO: validar vida maxima\r\n        // Aplicar condicao de envenenado ao inimigo\r\n        setHero({\r\n          ...hero,\r\n          items: arrItems,\r\n          equipped: { ...hero.equipped, poison: true },\r\n        });\r\n        _itx =\r\n          'O Herói usou ' +\r\n          data.name +\r\n          ' e envenenou ' +\r\n          data.value +\r\n          ' o inimigo.';\r\n        setMessage({\r\n          type: SUCCESS,\r\n          content: _itx,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setTimeout(() => setMessage({ type: '', content: '' }), 2000);\r\n    setModalItem(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`modal-container ${show ? 'active' : ''}`}>\r\n        <div className={`modal ${show ? 'active' : ''}`}>\r\n          <div className=\"flex-justify-between\">\r\n            <h1>Inventário</h1>\r\n            <button onClick={() => setModalItem(false)}>fechar</button>\r\n          </div>\r\n\r\n          <div className=\"grid-container\">\r\n            {hero && hero.items.length > 0 ? (\r\n              hero.items.map(item => (\r\n                <Card\r\n                  key={Math.random()}\r\n                  data={item}\r\n                  handleClick={() => handleUse(item)}\r\n                  type=\"use\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <span>Nada encontrado aqui</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {message && message.content && (\r\n        <Toast type={message.type} message={message.content} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserItems;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none', disabled }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n      </div>\r\n\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>TY: {data.type}</span>\r\n        <span>MI: {data.min}</span>\r\n        <span>MX: {data.max}</span>\r\n        <span>MP: {data.mana}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          buy\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" disabled={disabled} onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport CardMagic from '../../card/Magic';\r\n\r\nconst ModalMagic = ({\r\n  modalUserMagic,\r\n  setModalUserMagic,\r\n  hero,\r\n  handleUseMagic,\r\n}) => {\r\n  return (\r\n    <div className={`modal-container ${modalUserMagic ? 'active' : ''}`}>\r\n      <div className={`modal ${modalUserMagic ? 'active' : ''}`}>\r\n        <div className=\"flex-justify-between\">\r\n          <h1>Magias</h1>\r\n          <h3 className=\"color-warning \">\r\n            Mana disponível: {(hero && hero.mana) || 0}\r\n          </h3>\r\n          <button onClick={() => setModalUserMagic(false)}>fechar</button>\r\n        </div>\r\n\r\n        <div className=\"grid-container\">\r\n          {hero && hero.magic.length > 0 ? (\r\n            hero.magic\r\n              .map(item => (\r\n                <CardMagic\r\n                  key={Math.random()}\r\n                  data={item}\r\n                  handleClick={() => handleUseMagic(item)}\r\n                  type=\"use\"\r\n                  disabled={item.mana > hero.mana}\r\n                />\r\n              ))\r\n              .reverse()\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalMagic;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { getNextLevel, random } from '../../../utils';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport Log from './fight/Log';\r\nimport Turn from './fight/Turn';\r\nimport Play from './fight/Play';\r\nimport Fight from './fight/Fight';\r\nimport LevelUp from './fight/LevelUp';\r\nimport ModalItems from './UserItems';\r\nimport ModalMagic from './fight/ModalMagic';\r\n\r\nconst ModalFight = ({ show, setModalFight }) => {\r\n  const { hero, setHero } = useContext(HeroContext);\r\n  const {\r\n    fight,\r\n    enemy,\r\n    setFight,\r\n    setEnemy,\r\n    fightLog,\r\n    setFightLog,\r\n    resetFight,\r\n    game,\r\n    setGame,\r\n  } = useContext(GameContext);\r\n  const [modalItem, setModalItem] = useState(false);\r\n  const [modalUserMagic, setModalUserMagic] = useState(false);\r\n\r\n  /**\r\n   * Causa um dano aleatório ao herói\r\n   */\r\n  const enemyTurn = () => {\r\n    let _rxn = random(5, 15);\r\n    let _sta = 'O Inimigo provocou ' + _rxn + ' de dano.';\r\n\r\n    setTimeout(() => {\r\n      setHero({ ...hero, health: hero.health - _rxn });\r\n      setFight({ ...fight, turn: 0, round: fight.round + 1 });\r\n      setFightLog([...fightLog, _sta]);\r\n    }, 1000);\r\n  };\r\n\r\n  /**\r\n   * Causa dano ao inimigo de acordo com uma escolha\r\n   * aleatória, entre o dano mínimo e máximo da arma\r\n   * equipada\r\n   */\r\n  const hit = () => {\r\n    let _wep = hero.equipped.weapon;\r\n    let _dmg = random(_wep.min, _wep.max);\r\n    let _stq = 'O Herói atacou, provocando ' + _dmg + ' de dano.';\r\n\r\n    setFightLog([...fightLog, _stq]);\r\n    setEnemy({ ...enemy, health: enemy.health - _dmg });\r\n    setFight({ ...fight, turn: 1 });\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {Object} data Magic Item\r\n   */\r\n  const handleUseMagic = data => {\r\n    let _mpp = random(data.min, data.max);\r\n    let _itx = 'O Herói usou ' + data.name + ' e causou ' + _mpp + ' de dano.';\r\n\r\n    if (data.mana <= hero.mana) {\r\n      setFightLog([...fightLog, _itx]);\r\n      setEnemy({ ...enemy, health: enemy.health - _mpp });\r\n      setHero({ ...hero, mana: hero.mana - data.mana });\r\n      setFight({ ...fight, turn: 1 });\r\n      setModalUserMagic(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Herói foge da batalha, perdendo uma parte do gold\r\n   * e de experiência se houver experiência para remover\r\n   */\r\n  const flee = () => {\r\n    if (fight.end) {\r\n      // sair sem prejuizo\r\n      setModalFight(false);\r\n    } else {\r\n      // sair com prejuizo\r\n      let expHero = hero.exp;\r\n      let expBase = 15;\r\n      if (expHero < expBase) {\r\n        setHero({ ...hero, gold: hero.gold - 15, exp: 0 });\r\n      } else {\r\n        setHero({ ...hero, gold: hero.gold - 15, exp: hero.exp - 15 });\r\n      }\r\n      setModalFight(false);\r\n    }\r\n    resetFight();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted && fight && enemy && hero) {\r\n      if (fight.end) {\r\n        console.log('Fim do jogo');\r\n      } else if (fight.turn === 0 && hero.health > 0) {\r\n        console.log('Vez do heroi');\r\n      } else if (fight.turn === 1 && enemy.health > 0) {\r\n        enemyTurn();\r\n      } else if (hero.health <= 0) {\r\n        let _ini = 'O herói foi derrotado!';\r\n        setFightLog([...fightLog, _ini]);\r\n        setFight({ ...fight, winner: 1, end: true });\r\n        setGame({ ...game, end: true });\r\n      } else if (enemy.health <= 0) {\r\n        let _itx = 'O inimigo foi derrotado';\r\n        setFightLog([...fightLog, _itx]);\r\n        setFight({ ...fight, winner: 0, end: true });\r\n\r\n        // validar o exp atual e realizar a evolucao do heroi\r\n        let _pex = Math.floor(55 + hero.nextLevel / (hero.level * 10));\r\n        if (hero.exp + _pex > hero.nextLevel) {\r\n          // calcular a quantidade de experiencia para o proximo nivel\r\n          let _nxt = getNextLevel(hero.level + 1);\r\n          let _exl = hero.exp + _pex - hero.nextLevel;\r\n          // let _nxl = Math.floor(hero.nextLevel + hero.nextLevel / 2);\r\n          // evolução do herói\r\n          setHero({\r\n            ...hero,\r\n            gold: hero.gold + 65,\r\n            exp: _exl,\r\n            victories: hero.victories + 1,\r\n            level: hero.level + 1,\r\n            nextLevel: _nxt,\r\n          });\r\n        } else {\r\n          setHero({\r\n            ...hero,\r\n            gold: hero.gold + 55,\r\n            exp: hero.exp + 55,\r\n            victories: hero.victories + 1,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [enemy, hero, fight]);\r\n\r\n  if (hero)\r\n    return (\r\n      <>\r\n        {/*  */}\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <LevelUp hero={hero} />\r\n\r\n            {/*  */}\r\n            <h3>Luta</h3>\r\n\r\n            {/*  */}\r\n            <Turn fight={fight} />\r\n\r\n            {/*  */}\r\n            <Fight hero={hero} enemy={enemy} />\r\n\r\n            {/*  */}\r\n            <Play\r\n              fight={fight}\r\n              flee={flee}\r\n              hero={hero}\r\n              hit={hit}\r\n              setModalUserMagic={setModalUserMagic}\r\n              setModalItem={setModalItem}\r\n            />\r\n\r\n            {/*  */}\r\n            <Log fightLog={fightLog} />\r\n\r\n            {/*  */}\r\n          </div>\r\n        </div>\r\n\r\n        {/* inventario */}\r\n        <ModalItems show={modalItem} setModalItem={setModalItem} />\r\n\r\n        {/* magia */}\r\n        <ModalMagic\r\n          modalUserMagic={modalUserMagic}\r\n          setModalUserMagic={setModalUserMagic}\r\n          hero={hero}\r\n          handleUseMagic={handleUseMagic}\r\n        />\r\n      </>\r\n    );\r\n};\r\n\r\nexport default ModalFight;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport Toast from '../../ui/Toast';\r\nimport CardItem from '../card/Item';\r\nimport { ITEM, SUCCESS } from '../../../utils/constants';\r\n\r\nconst ModalItem = ({ show, setModalGiftItem }) => {\r\n  const { randomItem, getRandomItem, resetRandomItem } =\r\n    useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleGet = data => {\r\n    let i = { ...data, id: uuidv4() };\r\n    let _nwi = [...hero.items, i];\r\n\r\n    setHero({ ...hero, items: _nwi });\r\n    messageHandler(SUCCESS, 'Item adiquirido com sucesso!', setMessage);\r\n\r\n    setModalGiftItem(false);\r\n    resetRandomItem();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted && !randomItem) getRandomItem(ITEM);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [randomItem]);\r\n\r\n  if (randomItem)\r\n    return (\r\n      <>\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <div className=\"flex-justify-between\">\r\n              <h1>Presente</h1>\r\n              <button onClick={() => setModalGiftItem(false)}>\r\n                fechar\r\n              </button>{' '}\r\n            </div>\r\n\r\n            <div className=\"grid-container\">\r\n              <CardItem\r\n                key={Math.random()}\r\n                data={randomItem}\r\n                handleClick={() => handleGet(randomItem)}\r\n                type=\"select\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {message && message.content && (\r\n          <Toast type={message.type} message={message.content} />\r\n        )}\r\n      </>\r\n    );\r\n};\r\n\r\nexport default ModalItem;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { diceAnimation } from '../utils';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GameContext } from '../context/Game';\r\nimport { HeroContext } from '../context/Hero';\r\nimport Hero from '../components/game/card/HeroInline';\r\nimport GameMenu from '../components/game/GameMenu';\r\nimport Timeline from '../components/game/position/Timeline';\r\nimport ModalShop from '../components/game/modal/Shop';\r\nimport ModalTrap from '../components/game/modal/Trap';\r\nimport ModalFight from '../components/game/modal/ModalFight';\r\nimport ModalGiftItem from '../components/game/modal/ModalItem';\r\nimport ModalUserItems from '../components/game/modal/UserItems';\r\nimport { BOSS, ENEMY, ITEM, NULL, TRAP } from '../utils/constants';\r\n\r\nconst Game = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const { hero, setHero } = useContext(HeroContext);\r\n  const { dice, setDice, game, setGame, setEnemy, setFightLog, resetGame } =\r\n    useContext(GameContext);\r\n\r\n  // modal shop\r\n  const [modalShop, setModalShop] = useState(false);\r\n\r\n  // abre o modal de acordo com a posicao\r\n  const [modalFight, setModalFight] = useState(false);\r\n  const [modalItem, setModalItem] = useState(false);\r\n  const [modalGiftItem, setModalGiftItem] = useState(false);\r\n  const [modalTrap, setModalTrap] = useState(false);\r\n\r\n  // validar se os dados estao sendo atualizados\r\n  const [updatedDice, setUpdatedDice] = useState(false);\r\n\r\n  const reset = () => {\r\n    resetGame();\r\n    setHero(null);\r\n    setTimeout(() => navigate('/'), 5);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    // movimenta para proxima posicao apos animacao dos dados\r\n    if (updatedDice && mounted) {\r\n      playUpdateStats();\r\n    }\r\n\r\n    return () => {\r\n      mounted = false;\r\n      setUpdatedDice(false);\r\n    };\r\n  }, [updatedDice]);\r\n\r\n  const play = () => {\r\n    if (game.mapLength === 0) {\r\n      return;\r\n    } else if (game.heroPosition < game.mapLength) {\r\n      // efeito de animacao dos dados\r\n      setGame({ ...game, playing: true });\r\n      diceAnimation(setDice, setUpdatedDice);\r\n    } else {\r\n      alert('Boss');\r\n    }\r\n  };\r\n\r\n  const playUpdateStats = () => {\r\n    setGame({\r\n      ...game,\r\n      heroPosition: game.heroPosition + dice,\r\n      playing: false,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      // verifica o tipo de posicao atual\r\n      let actualPosition = game.mapPositions[game.heroPosition + dice];\r\n\r\n      // verifica o tipo da posicao do mapa\r\n      if (!actualPosition) {\r\n        // TODO: BOSS\r\n        return;\r\n      } else {\r\n        let actualMapPosition = Object.keys(actualPosition)[0];\r\n\r\n        // abre o modal de acordo com o tipo de posicao\r\n        switch (actualMapPosition) {\r\n          case ENEMY:\r\n            setEnemy({ ...actualPosition.enemy });\r\n            setModalFight(true);\r\n            setFightLog([]);\r\n            break;\r\n          case ITEM:\r\n            setModalGiftItem(true);\r\n            break;\r\n          case TRAP:\r\n            setModalTrap(true);\r\n            break;\r\n          case BOSS:\r\n            break;\r\n          case NULL:\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      {/* informacoes sobre o heroi*/}\r\n      {hero && <Hero data={hero} />}\r\n      {/* timeline */}\r\n      <Timeline game={game} />\r\n      {/* modal shop */}\r\n      <ModalShop show={modalShop} setModalShop={setModalShop} />\r\n      {/* modal itens do ususario */}\r\n      <ModalUserItems show={modalItem} setModalItem={setModalItem} />\r\n      {/* game modal luta */}\r\n      <ModalFight show={modalFight} setModalFight={setModalFight} />\r\n      {/* game modal item */}\r\n      <ModalGiftItem show={modalGiftItem} setModalGiftItem={setModalGiftItem} />\r\n      {/* game modal trap */}\r\n      <ModalTrap show={modalTrap} setModalTrap={setModalTrap} />\r\n      {/* game menu */}\r\n      <GameMenu\r\n        game={game}\r\n        play={play}\r\n        reset={reset}\r\n        modalShop={modalShop}\r\n        modalItem={modalItem}\r\n        setModalShop={setModalShop}\r\n        setModalItem={setModalItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport { Route, Routes } from 'react-router';\n\nimport Start from './pages/Start';\nimport Hero from './pages/SelectHero';\nimport Item from './pages/SelectItem';\nimport Map from './pages/SelectMap';\nimport Game from './pages/Game';\n\nfunction App() {\n  return (\n    <>\n      <Routes>\n        <Route exact path=\"/\" element={<Start />} />\n        <Route exact path=\"/select-hero\" element={<Hero />} />\n        <Route exact path=\"/select-item\" element={<Item />} />\n        <Route exact path=\"/select-map\" element={<Map />} />\n        <Route exact path=\"/start-game\" element={<Game />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nimport './css/reset.css';\nimport './css/index.css';\nimport './css/card.css';\nimport './css/modal.css';\nimport './css/game.css';\nimport './css/map.css';\nimport './css/hero.css';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ContextHero } from './context/Hero';\nimport { ContextGame } from './context/Game';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <ContextGame>\n      <ContextHero>\n        <Router basename={process.env.PUBLIC_URL}>\n          <App />\n        </Router>\n      </ContextHero>\n    </ContextGame>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}