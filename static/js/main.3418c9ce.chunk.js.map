{"version":3,"sources":["pages/Start.js","utils/constants.js","components/game/card/Hero.js","context/Game.js","context/Hero.js","utils/index.js","pages/SelectHero.js","components/game/card/Item.js","pages/SelectItem.js","components/game/card/Weapon.js","pages/SelectWeapon.js","utils/game.js","components/game/card/Map.js","pages/SelectMap.js","components/game/card/HeroInline.js","components/game/Dice.js","components/ui/ConfirmModal.js","components/game/GameButtons.js","components/game/GameMenu.js","components/game/position/Position.js","components/game/position/Timeline.js","components/ui/Toast.js","components/game/modal/Shop.js","components/game/card/Trap.js","components/game/modal/Trap.js","components/game/modal/fight/Log.js","components/game/modal/fight/Turn.js","components/game/modal/fight/Play.js","components/game/modal/fight/Fight.js","components/game/modal/fight/LevelUp.js","components/game/modal/UserItems.js","components/game/card/Magic.js","components/game/modal/fight/Magic.js","components/game/modal/Fight.js","components/game/modal/Gift.js","components/game/card/Code.js","components/game/modal/Code.js","components/game/card/Chest.js","components/game/modal/Chest.js","pages/Game.js","App.js","index.js"],"names":["Start","react_default","a","createElement","className","react_router_dom","to","NULL","ENEMY","ITEM","TRAP","LEVEL_BASE","LEVEL_EASY","concat","URL_IMG_GH","URL_UNK","Card","_ref","data","handleClick","hit","_ref$type","type","price","health","src","poster","alt","name","mana","gold","onClick","GameContext","React","createContext","GameProvider","Provider","ContextGame","children","_useState","useState","_useState2","Object","slicedToArray","maps","setMaps","_useState3","_useState4","magics","setMagics","_useState5","_useState6","traps","setTraps","_useState7","_useState8","items","setItems","_useState9","_useState10","chests","setChests","_useState11","_useState12","heroes","setHeroes","_useState13","_useState14","weapons","setWeapos","_useState15","_useState16","enemies","setEnemies","_useState17","_useState18","item","setItem","_useState19","_useState20","enemy","setEnemy","_useState21","_useState22","fightLog","setFightLog","_useState23","_useState24","map","setMap","_useState25","_useState26","randomItem","setRandomItem","_useState27","_useState28","randomTrap","setRandomTrap","_useState29","_useState30","randomChest","setRandomChest","_useState31","_useState32","dice","setDice","_useState33","mapPositions","mapLength","heroPosition","end","playing","_useState34","game","setGame","_useState35","round","modalInventory","turn","winner","heroAttack","enemyAttack","_useState36","fight","setFight","useEffect","mounted","length","heroes_api","items_api","maps_api","enemies_api","weapons_api","magic_api","traps_api","chest_api","value","resetGame","resetFight","resetRandomItem","resetRandomTrap","getRandomItem","arr","Math","floor","random","HeroContext","HeroProvider","ContextHero","hero","setHero","min","max","isObjectEmpty","obj","keys","getNextLevel","base","pow","SelectHero","useContext","_useContext2","Hero","key","_nxt","level","objectSpread","nextLevel","handleSelectThis","splice","disabled","rarity","SelectItem","_useContext","handleSelect","id","uuidv4","magic","equipped","weapon","Item","SelectWeapon","Weapon","messageHandler","message","setMessage","timer","arguments","undefined","content","setTimeout","Map","size","SelectMap","navigate","useNavigate","card_Map","positions","i","_positions$push","push","defineProperty","init","boss","pos1","pos2","x","code","chest","generatePositions","error","console","warn","HeroInline","exp","Dice","ConfirmModal","active","cancel","GameButtons","play","reset","setModalItem","setModalShop","modalShop","modalItem","resetModal","setResetModal","Fragment","ui_ConfirmModal","GameMenu","game_Dice","game_GameButtons","Position","index","Timeline","position","position_Position","Toast","show","Shop","handleBuy","newGold","newData","newItems","toConsumableArray","newIWeapons","ui_Toast","Trap","setModalTrap","card_Trap","damage","alert","handleTrap","Log","log","JSON","stringify","reverse","Turn","Play","flee","setModalUserMagic","Fight","LevelUp","activeClass","setActiveClass","UserItems","handleUse","arrItems","filter","text","poison","ModalMagic","modalUserMagic","handleUseMagic","Magic","ModalFight","setModalFight","_rxn","_sta","enemyTurn","nextExp","_exl","victories","fight_LevelUp","fight_Turn","fight_Fight","fight_Play","equippedWeapon","weaponDamage","_stq","fight_Log","modal_UserItems","fight_Magic","magicDamage","_itx","ModalItem","setModalGiftItem","_nwi","handleGet","Code","setModalCode","card_Code","setPassword","password","attempt","autoFocus","onChange","e","target","Chest","setModalChest","setAttempt","card_Chest","Game","modalFight","modalGiftItem","modalTrap","modalCode","modalChest","updatedDice","setUpdatedDice","actualPosition","card_HeroInline","position_Timeline","modal_Shop","modal_Fight","Gift","modal_Trap","modal_Code","modal_Chest","game_GameMenu","_counter","interval","setInterval","clearInterval","diceAnimation","App","react_router","exact","path","element","pages_Start","pages_SelectHero","pages_SelectItem","pages_SelectWeapon","pages_SelectMap","pages_Game","ReactDOM","createRoot","document","getElementById","render","StrictMode","Game_ContextGame","Hero_ContextHero","basename","process","src_App"],"mappings":"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","file":"static/js/main.3418c9ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Start = () => {\r\n  return (\r\n    <div className=\"center-center\">\r\n      <Link to=\"/select-hero\">\r\n        <button>\r\n          iniciar{' '}\r\n          <span className=\"material-symbols-outlined\">chevron_right</span>\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","export const NULL = 'null';\r\nexport const ENEMY = 'enemy';\r\nexport const ITEM = 'item';\r\nexport const TRAP = 'trap';\r\nexport const BOSS = 'boss';\r\nexport const INIT = 'init';\r\nexport const CODE = 'code';\r\nexport const CHEST = 'chest';\r\nexport const WEAPON = 'weapon';\r\n\r\nexport const BOMB = 'bomb';\r\n\r\nexport const LEVEL_BASE = [NULL, ENEMY, TRAP, ITEM];\r\nexport const LEVEL_EASY = [NULL, ENEMY, ENEMY, ITEM, TRAP].concat(LEVEL_BASE);\r\nexport const LEVEL_MEDIUM = [NULL, ENEMY, ENEMY, ENEMY, ITEM].concat(\r\n  LEVEL_BASE\r\n);\r\n// TEST\r\n// export const LEVEL_EASY = [CODE, CHEST];\r\n\r\nexport const LEVEL_HARD = 'hard';\r\n\r\nexport const MANA = 'mana';\r\nexport const HEALTH = 'health';\r\nexport const POISON = 'poison';\r\n\r\nexport const SUCCESS = 'success';\r\nexport const WARNING = 'warning';\r\nexport const ERROR = 'error';\r\n\r\nexport const URL_IMG = 'http://localhost:3000/images/';\r\nexport const URL_IMG_GH =\r\n  'https://raw.githubusercontent.com/eduardo239/card-game/main/public/images/';\r\nexport const URL_EMP = 'empty_card.png';\r\nexport const URL_UNK = 'unknow_card.png';\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, hit, type = 'none' }) => {\r\n  if (data)\r\n    return (\r\n      <div className={`card enemy-hit hero-hit ${hit ? 'activate' : ''}`}>\r\n        {type === 'shop' && <span>{data.price}</span>}\r\n        <div\r\n          className={`card-image ${data.health <= 0 ? 'filter-grayscale' : ''}`}\r\n        >\r\n          <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <span>NA: {data.name}</span>\r\n          <span>TY: {data.type}</span>\r\n          <span className={`${data.health < 25 ? 'color-error' : ''}`}>\r\n            HP: {data.health}\r\n          </span>\r\n          {data.mana && <span>MP: {data.mana}</span>}\r\n          <span>GO: ${data.gold || 0}</span>\r\n        </div>\r\n        {type === 'shop' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            buy\r\n          </button>\r\n        )}\r\n        {type === 'use' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            use\r\n          </button>\r\n        )}\r\n        {type === 'select' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            selecionar\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport heroes_api from '../api/heroes.json';\r\nimport items_api from '../api/items.json';\r\nimport maps_api from '../api/maps.json';\r\nimport enemies_api from '../api/enemies.json';\r\nimport magic_api from '../api/magic.json';\r\nimport weapons_api from '../api/weapons.json';\r\nimport traps_api from '../api/traps.json';\r\nimport chest_api from '../api/chest.json';\r\n\r\nimport { CHEST, ITEM, TRAP } from '../utils/constants';\r\n\r\nconst GameContext = React.createContext();\r\nconst GameProvider = GameContext.Provider;\r\n\r\nconst ContextGame = ({ children }) => {\r\n  const [maps, setMaps] = useState([]);\r\n  const [magics, setMagics] = useState([]);\r\n  const [traps, setTraps] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n  const [chests, setChests] = useState([]);\r\n  const [heroes, setHeroes] = useState([]);\r\n  const [weapons, setWeapos] = useState([]);\r\n  const [enemies, setEnemies] = useState([]);\r\n\r\n  // dados das posicoes\r\n  const [item, setItem] = useState(null);\r\n  const [enemy, setEnemy] = useState(null);\r\n\r\n  // log da luta\r\n  const [fightLog, setFightLog] = useState([]);\r\n\r\n  // mapa selecionado\r\n  const [map, setMap] = useState(null);\r\n\r\n  // gift item\r\n  const [randomItem, setRandomItem] = useState(null);\r\n  const [randomTrap, setRandomTrap] = useState(null);\r\n  const [randomChest, setRandomChest] = useState(null);\r\n\r\n  // dice\r\n  const [dice, setDice] = useState(0);\r\n\r\n  // estado do jogo\r\n  const [game, setGame] = useState({\r\n    map: null,\r\n    mapPositions: 0,\r\n    mapLength: 0,\r\n    heroPosition: 0,\r\n    end: false,\r\n    playing: false,\r\n  });\r\n\r\n  // estado da luta\r\n  const [fight, setFight] = useState({\r\n    round: 0,\r\n    modalInventory: false,\r\n    end: false,\r\n    turn: 0,\r\n    winner: null,\r\n    heroAttack: false,\r\n    enemyAttack: false,\r\n  });\r\n\r\n  const resetGame = () => {\r\n    setGame({\r\n      map: null,\r\n      mapPositions: 0,\r\n      mapLength: 0,\r\n      heroPosition: 0,\r\n      end: false,\r\n      playing: false,\r\n    });\r\n  };\r\n\r\n  const resetFight = () => {\r\n    setFight({\r\n      round: 0,\r\n      modalInventory: false,\r\n      end: false,\r\n      turn: 0,\r\n      winner: null,\r\n      heroAttack: false,\r\n      enemyAttack: false,\r\n    });\r\n  };\r\n\r\n  const getRandomItem = arr => {\r\n    switch (arr) {\r\n      case ITEM:\r\n        setRandomItem(items[Math.floor(Math.random() * items.length)]);\r\n        break;\r\n      case TRAP:\r\n        setRandomTrap(traps[Math.floor(Math.random() * traps.length)]);\r\n        break;\r\n      case CHEST:\r\n        setRandomChest(chests[Math.floor(Math.random() * chests.length)]);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const resetRandomItem = () => setRandomItem(null);\r\n  const resetRandomTrap = () => setRandomTrap(null);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted) {\r\n      // carregar os itens da api\r\n      if (heroes.length === 0) setHeroes(heroes_api);\r\n      // carregar os herois da api\r\n      if (items.length === 0) setItems(items_api);\r\n      // carregar os mapas da api\r\n      if (maps.length === 0) setMaps(maps_api);\r\n      // carregar os inimigos da api\r\n      if (enemies.length === 0) setEnemies(enemies_api);\r\n      // carregar as armas da api\r\n      if (weapons.length === 0) setWeapos(weapons_api);\r\n      // carregar as magicas da api\r\n      if (magics.length === 0) setMagics(magic_api);\r\n      // carregar as traps da api\r\n      if (traps.length === 0) setTraps(traps_api);\r\n      // carregar os baus da api\r\n      if (chests.length === 0) setChests(chest_api);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [heroes, items, maps, enemies, weapons, magics, traps, chests]);\r\n\r\n  return (\r\n    <GameProvider\r\n      value={{\r\n        heroes,\r\n        items,\r\n        maps,\r\n        enemies,\r\n        traps,\r\n        map,\r\n        weapons,\r\n        magics,\r\n        game,\r\n        enemy,\r\n        item,\r\n        fight,\r\n        fightLog,\r\n        dice,\r\n        setMap,\r\n        setGame,\r\n        setFight,\r\n        setEnemy,\r\n        setItem,\r\n        setFightLog,\r\n        resetGame,\r\n        resetFight,\r\n        randomItem,\r\n        randomChest,\r\n        randomTrap,\r\n        resetRandomItem,\r\n        resetRandomTrap,\r\n        getRandomItem,\r\n        setDice,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameProvider>\r\n  );\r\n};\r\n\r\nexport { GameContext, ContextGame };\r\n","import React, { useState } from 'react';\r\n\r\nconst HeroContext = React.createContext();\r\nconst HeroProvider = HeroContext.Provider;\r\n\r\nconst ContextHero = ({ children }) => {\r\n  const [hero, setHero] = useState(null);\r\n\r\n  return (\r\n    <HeroProvider\r\n      value={{\r\n        setHero,\r\n        hero,\r\n      }}\r\n    >\r\n      {children}\r\n    </HeroProvider>\r\n  );\r\n};\r\n\r\nexport { HeroContext, ContextHero };\r\n","// generate random number from min to max\r\n/**\r\n *\r\n * @param {int} min\r\n * @param {int} max\r\n * @returns int\r\n */\r\nexport const random = (min, max) =>\r\n  Math.floor(Math.random() * (max - min + 1) + min);\r\n\r\n/**\r\n *\r\n * @param {Object} obj Valida se o objeto esta vazio\r\n * @returns\r\n */\r\nexport const isObjectEmpty = obj => {\r\n  if (!obj) return true;\r\n  return Object.keys(obj).length === 0;\r\n};\r\n\r\n/**\r\n *\r\n * @param {int} base recebe o nivel atual do heroi\r\n * @returns inteiro com o total de experiencia para evoluir para o proximo nivel\r\n */\r\nexport const getNextLevel = base => {\r\n  let con = 1.256;\r\n  let nextLevel = Math.floor(con ** base * 100);\r\n  return nextLevel;\r\n};\r\n\r\n/**\r\n *\r\n * @param {function} setDice configura o valor do dado no estado atual\r\n * @param {function} setUpdatedDice para validar quando a animacao finaliza\r\n */\r\nexport const diceAnimation = (setDice, setUpdatedDice) => {\r\n  let _counter = 0;\r\n\r\n  let interval = setInterval(() => {\r\n    _counter += 1;\r\n\r\n    setDice(random(1, 6));\r\n\r\n    if (_counter >= 10) {\r\n      clearInterval(interval);\r\n      setUpdatedDice(true);\r\n    }\r\n  }, 100);\r\n};\r\n","import React, { useContext } from 'react';\r\nimport CardHero from '../components/game/card/Hero';\r\nimport { Link } from 'react-router-dom';\r\nimport { GameContext } from '../context/Game';\r\nimport { HeroContext } from '../context/Hero';\r\nimport { getNextLevel } from '../utils';\r\nimport { URL_UNK } from '../utils/constants';\r\n\r\nconst SelectHero = () => {\r\n  const { heroes } = useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const handleSelectThis = data => {\r\n    // adicionar o heroi\r\n    let _nxt = getNextLevel(data.level);\r\n    setHero({ ...data, nextLevel: _nxt });\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-center\">\r\n      <div>\r\n        {/* loop pelos herois da api */}\r\n        <div className=\"card-grid\">\r\n          {heroes.length > 0 ? (\r\n            heroes\r\n              .map(hero => (\r\n                <CardHero\r\n                  key={Math.random()}\r\n                  data={hero}\r\n                  handleClick={() => handleSelectThis(hero)}\r\n                  type=\"select\"\r\n                />\r\n              ))\r\n              .splice(0, 3)\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* menu */}\r\n        <div className=\"menu-select\">\r\n          <Link to=\"/\">\r\n            <button>\r\n              início{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_before</span>\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/select-item\">\r\n            <button disabled={!hero}>\r\n              próximo{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_next</span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* mostrar o heroi selecionado */}\r\n        <div className=\"card-grid\">\r\n          {hero ? (\r\n            <CardHero key={Math.random()} data={hero}></CardHero>\r\n          ) : (\r\n            <CardHero data={{ name: 'Nada selecionado', poster: URL_UNK }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectHero;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none' }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>TY: {data.type}</span>\r\n        <span>RA: {data.rarity}</span>\r\n        <span>VL: {data.value}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          comprar\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport CardItem from '../components/game/card/Item';\r\nimport { Link } from 'react-router-dom';\r\nimport { URL_UNK } from '../utils/constants';\r\nimport { GameContext } from '../context/Game';\r\nimport { HeroContext } from '../context/Hero';\r\n\r\nconst SelectItem = () => {\r\n  const { items, magics, weapons } = useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const handleSelectThis = data => {\r\n    // adicionar o item aos items do heroi\r\n    setHero({\r\n      ...hero,\r\n      items: [data],\r\n      magic: [magics[0]],\r\n      equipped: {\r\n        weapon: weapons[0],\r\n      },\r\n    });\r\n\r\n    // TODO: adicionar a magica ao heroi\r\n  };\r\n\r\n  const handleSelect = data => {\r\n    data.id = uuidv4();\r\n    handleSelectThis(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-center\">\r\n      <div>\r\n        {/* loop pelos herois da api */}\r\n        <div className=\"card-grid\">\r\n          {items.length > 0 ? (\r\n            items\r\n              .map(item => (\r\n                <CardItem\r\n                  key={Math.random()}\r\n                  data={item}\r\n                  handleClick={() => handleSelect(item)}\r\n                  type=\"select\"\r\n                />\r\n              ))\r\n              .splice(0, 3)\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* menu */}\r\n        <div className=\"menu-select\">\r\n          <Link to=\"/select-hero\">\r\n            <button>\r\n              voltar{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_before</span>\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/select-weapon\">\r\n            <button disabled={!hero || (hero.items && hero.items.length === 0)}>\r\n              próximo{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_next</span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* mostrar o heroi selecionado */}\r\n        <div className=\"card-grid\">\r\n          {hero && hero.items && hero.items.length > 0 ? (\r\n            hero.items.map(item => (\r\n              <CardItem key={Math.random()} data={item}></CardItem>\r\n            ))\r\n          ) : (\r\n            <CardItem data={{ name: 'Nada selecionado', poster: URL_UNK }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectItem;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, equipped, type = 'none' }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'equip' && equipped && (\r\n        <span className={`${equipped ? 'equipped' : ''}`}>Equipado</span>\r\n      )}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>RR: {data.rarity}</span>\r\n        <span>MI: {data.min}</span>\r\n        <span>MX: {data.max}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          comprar\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'equip' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          equipar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Link } from 'react-router-dom';\r\nimport { URL_UNK } from '../utils/constants';\r\nimport { GameContext } from '../context/Game';\r\nimport { HeroContext } from '../context/Hero';\r\nimport { isObjectEmpty } from '../utils';\r\nimport CardWeapon from '../components/game/card/Weapon';\r\n\r\nconst SelectWeapon = () => {\r\n  const { weapons } = useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const handleSelectThis = data => {\r\n    // adicionar o item aos items do heroi\r\n    setHero({\r\n      ...hero,\r\n      weapons: [data],\r\n      equipped: {\r\n        weapon: data,\r\n      },\r\n    });\r\n\r\n    // TODO: adicionar a magica e a arma ao heroi\r\n  };\r\n\r\n  const handleSelect = data => {\r\n    data.id = uuidv4();\r\n    handleSelectThis(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-center\">\r\n      <div>\r\n        {/* loop pelos herois da api */}\r\n        <div className=\"card-grid\">\r\n          {weapons.length > 0 ? (\r\n            weapons\r\n              .map(weapon => (\r\n                <CardWeapon\r\n                  key={weapon.id}\r\n                  data={weapon}\r\n                  handleClick={() => handleSelect(weapon)}\r\n                  type=\"shop\"\r\n                />\r\n              ))\r\n              .splice(0, 3)\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* menu */}\r\n        <div className=\"menu-select\">\r\n          <Link to=\"/select-item\">\r\n            <button>\r\n              voltar{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_before</span>\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/select-map\">\r\n            <button disabled={isObjectEmpty(hero && hero.equipped.weapon)}>\r\n              próximo{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_next</span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* mostrar o heroi selecionado */}\r\n        <div className=\"card-grid\">\r\n          {hero && hero.equipped && !isObjectEmpty(hero.equipped.weapon) ? (\r\n            <CardWeapon\r\n              key={hero.equipped.weapon.id}\r\n              data={hero.equipped.weapon}\r\n            />\r\n          ) : (\r\n            <CardWeapon data={{ name: 'Nada selecionado', poster: URL_UNK }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SelectWeapon;\r\n","import {\r\n  BOSS,\r\n  ENEMY,\r\n  ITEM,\r\n  LEVEL_EASY,\r\n  NULL,\r\n  TRAP,\r\n  INIT,\r\n  CODE,\r\n  CHEST,\r\n} from './constants';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n/**\r\n *\r\n * @param {Object} map necessário conter map.size\r\n * @param {Array} enemies array de inimigos\r\n * @param {Array} items array de itens\r\n * @param {Array} traps array de armadilhas\r\n * @returns retonrno uma array com posicoes aleatorias\r\n */\r\nexport const generatePositions = (map, enemies, items, traps) => {\r\n  let positions = [];\r\n\r\n  for (let i = 0; i < map.size; i++) {\r\n    // gera um valor aleatorio para cada posicao\r\n    let key = [LEVEL_EASY[Math.floor(Math.random() * LEVEL_EASY.length)]];\r\n    let value = '';\r\n    // valida o tipo da posicao\r\n    switch (key[0]) {\r\n      case ENEMY:\r\n        value = enemies[Math.floor(Math.random() * enemies.length)];\r\n        break;\r\n      case ITEM:\r\n        value = items[Math.floor(Math.random() * items.length)];\r\n        break;\r\n      case TRAP:\r\n        value = traps[Math.floor(Math.random() * traps.length)];\r\n        break;\r\n      case NULL:\r\n        value = {};\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    positions.push({ [key]: value, id: uuidv4() });\r\n  }\r\n\r\n  positions[0] = { init: { name: INIT }, id: uuidv4() };\r\n  positions[positions.length - 1] = { boss: { name: BOSS }, id: uuidv4() };\r\n\r\n  // adicionar bau a uma posicao aleatoria\r\n  let pos1 = Math.floor(Math.random() * positions.length);\r\n  let pos2 = Math.floor(Math.random() * positions.length);\r\n\r\n  if (pos1 === 0) pos1 += 1;\r\n  if (pos2 === 0) pos2 += 2;\r\n  if (pos1 === pos2) pos2 += 1;\r\n  // TODO: validar bugs\r\n  if (pos1 === positions.length - 1) pos1 -= 1;\r\n  if (pos2 === positions.length - 1) pos2 -= 1;\r\n\r\n  if (pos1 > pos2) {\r\n    let x = pos1;\r\n    pos1 = pos2;\r\n    pos2 = x;\r\n  }\r\n\r\n  positions[pos1] = { code: { name: CODE }, id: uuidv4() };\r\n  positions[pos2] = { chest: { name: CHEST }, id: uuidv4() };\r\n\r\n  return positions;\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} type tipo de mensagem, success, warning ou error\r\n * @param {String} message mensagem que aparecera no Toast\r\n * @param {function} setMessage funcao do useState, para resetar a mensagem\r\n * @param {integer} timer tempo em milisegundos\r\n */\r\nexport const messageHandler = (type, message, setMessage, timer = 3000) => {\r\n  if (type && message && setMessage) {\r\n    setMessage({\r\n      type: type,\r\n      content: message,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setMessage({\r\n        type: '',\r\n        content: '',\r\n      });\r\n    }, timer);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Map = ({ data, handleClick, type = 'none' }) => {\r\n  if (data)\r\n    return (\r\n      <div className=\"card\">\r\n        {type === 'shop' && <span>{data.price}</span>}\r\n\r\n        <div className=\"card-image\">\r\n          <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n        </div>\r\n\r\n        <div className=\"card-content\">\r\n          <span>NA: {data.name}</span>\r\n          <span>TY: {data.type}</span>\r\n          <span>LV: {data.level}</span>\r\n          <span>SZ: {data.size}</span>\r\n        </div>\r\n        {type === 'shop' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            buy\r\n          </button>\r\n        )}\r\n        {type === 'use' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            use\r\n          </button>\r\n        )}\r\n        {type === 'select' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            selecionar\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useContext } from 'react';\r\nimport { GameContext } from '../context/Game';\r\nimport { generatePositions } from '../utils/game';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport CardMap from '../components/game/card/Map';\r\nimport { URL_UNK } from '../utils/constants';\r\n\r\nconst SelectMap = () => {\r\n  const navigate = useNavigate();\r\n  const { items, enemies, map, maps, traps, setMap, game, setGame } =\r\n    useContext(GameContext);\r\n\r\n  const handleSelectThis = data => {\r\n    // adicionar o mapa ao jogo\r\n    setMap(data);\r\n  };\r\n\r\n  const initGame = () => {\r\n    // configurar o jogo\r\n    setGame({ ...game, map: map });\r\n\r\n    // gerar as posicoes\r\n    try {\r\n      let positions = generatePositions(map, enemies, items, traps);\r\n      setGame({\r\n        ...game,\r\n        map: map,\r\n        mapPositions: positions,\r\n        mapLength: positions.length,\r\n        heroPosition: 0,\r\n      });\r\n\r\n      // redirecionar e iniciar o jogo\r\n      setTimeout(() => navigate('/start-game'), 100);\r\n    } catch (error) {\r\n      console.warn(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-center\">\r\n      <div>\r\n        {/* loop pelos herois da api */}\r\n        <div className=\"card-grid\">\r\n          {maps.length > 0 ? (\r\n            maps\r\n              .map(data => (\r\n                <CardMap\r\n                  key={Math.random()}\r\n                  data={data}\r\n                  handleClick={() => handleSelectThis(data)}\r\n                  type=\"select\"\r\n                />\r\n              ))\r\n              .splice(0, 3)\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* menu */}\r\n        <div className=\"menu-select\">\r\n          <Link to=\"/select-weapon\">\r\n            <button>\r\n              voltar{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_before</span>{' '}\r\n            </button>\r\n          </Link>\r\n          <button onClick={initGame} disabled={!map}>\r\n            começar{' '}\r\n            <span className=\"material-symbols-outlined\">navigate_next</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* mostrar o heroi selecionado */}\r\n        <div className=\"card-grid\">\r\n          {map != null ? (\r\n            <CardMap key={Math.random()} data={map}></CardMap>\r\n          ) : (\r\n            <CardMap data={{ name: 'Nada selecionado', poster: URL_UNK }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectMap;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst HeroInline = ({ data }) => {\r\n  if (data)\r\n    return (\r\n      <div className=\"hero-inline-container\">\r\n        <div\r\n          className={`card-image ${data.health <= 0 ? 'filter-grayscale' : ''}`}\r\n        >\r\n          <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          <div className=\"hero-inline\">\r\n            <span>\r\n              <b>HERÓI</b>\r\n            </span>\r\n            <span>\r\n              <b>VIDA</b>\r\n            </span>\r\n            <span>\r\n              <b>MANA</b>\r\n            </span>\r\n            <span>\r\n              <b>GOLD</b>\r\n            </span>\r\n            <span>\r\n              <b>EXP</b>\r\n            </span>\r\n            <span>\r\n              <b>NIVEL</b>\r\n            </span>\r\n          </div>\r\n          <div className=\"hero-inline\">\r\n            <span>{data.name}</span>\r\n            <span>{data.health}</span>\r\n            <span>{data.mana}</span>\r\n            <span>${data.gold}</span>\r\n            <span>\r\n              {data.exp}/{data.nextLevel}\r\n            </span>\r\n            <span>{data.level}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default HeroInline;\r\n","import React, { useContext } from 'react';\r\nimport { GameContext } from '../../context/Game';\r\nimport { isObjectEmpty } from '../../utils';\r\n\r\nconst Dice = () => {\r\n  const { game, dice } = useContext(GameContext);\r\n\r\n  if (!isObjectEmpty(game))\r\n    return (\r\n      <div className=\"dices\">\r\n        <div className={`dice ${dice === 1 ? 'active' : ''}`}>1</div>\r\n        <div className={`dice ${dice === 2 ? 'active' : ''}`}>2</div>\r\n        <div className={`dice ${dice === 3 ? 'active' : ''}`}>3</div>\r\n        <div className={`dice ${dice === 4 ? 'active' : ''}`}>4</div>\r\n        <div className={`dice ${dice === 5 ? 'active' : ''}`}>5</div>\r\n        <div className={`dice ${dice === 6 ? 'active' : ''}`}>6</div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Dice;\r\n","import React from 'react';\r\n\r\nconst ConfirmModal = ({ onClick, active, cancel, message }) => {\r\n  return (\r\n    <div className={`modal-confirm-container ${active ? 'active' : ''}`}>\r\n      <div className=\"modal-confirm\">\r\n        <p>{message}</p>\r\n        <div className=\"flex-justify-end\">\r\n          <button onClick={() => cancel(false)}>cancelar</button>\r\n          <button onClick={onClick}>confirmar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React, { useState } from 'react';\r\nimport ConfirmModal from '../ui/ConfirmModal';\r\n\r\nconst GameButtons = ({\r\n  play,\r\n  reset,\r\n  game,\r\n  setModalItem,\r\n  setModalShop,\r\n  modalShop,\r\n  modalItem,\r\n}) => {\r\n  const [resetModal, setResetModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <ConfirmModal\r\n        onClick={reset}\r\n        active={resetModal}\r\n        cancel={setResetModal}\r\n        message=\"Tem certeza que deseja reiniciar o jogo?\"\r\n      />\r\n\r\n      <div className=\"game-menu-buttons\">\r\n        <button disabled={game.playing || game.end} onClick={() => play()}>\r\n          jogar\r\n        </button>\r\n        <button\r\n          disabled={game.playing || game.end}\r\n          onClick={() => setModalShop(!modalShop)}\r\n        >\r\n          loja\r\n        </button>\r\n        <button\r\n          disabled={game.playing || game.end}\r\n          onClick={() => setModalItem(!modalItem)}\r\n        >\r\n          inventário\r\n        </button>\r\n        <button disabled={game.playing} onClick={() => setResetModal(true)}>\r\n          reiniciar\r\n        </button>\r\n        <button disabled={game.playing}>salvar</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameButtons;\r\n","import React from 'react';\r\nimport Dice from './Dice';\r\nimport GameButtons from './GameButtons';\r\n\r\nconst GameMenu = ({\r\n  game,\r\n  play,\r\n  reset,\r\n  modalShop,\r\n  modalItem,\r\n  setModalItem,\r\n  setModalShop,\r\n}) => {\r\n  return (\r\n    <div className=\"game-menu\">\r\n      <Dice />\r\n\r\n      <GameButtons\r\n        game={game}\r\n        play={play}\r\n        reset={reset}\r\n        modalShop={modalShop}\r\n        modalItem={modalItem}\r\n        setModalShop={setModalShop}\r\n        setModalItem={setModalItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameMenu;\r\n","import React from 'react';\r\n\r\nconst Position = ({ data, index, heroPosition }) => {\r\n  return (\r\n    <div\r\n      className={`position ${Object.keys(data)[0]} ${\r\n        heroPosition === index ? 'active' : heroPosition > index ? 'pass' : ''\r\n      }`}\r\n    >\r\n      {index} - {Object.keys(data)[0]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Position;\r\n","import React from 'react';\r\nimport Position from './Position';\r\n\r\nconst Timeline = ({ game }) => {\r\n  return (\r\n    <>\r\n      {game.map ? (\r\n        game.mapPositions.map((position, index) => (\r\n          <Position\r\n            key={position.id}\r\n            data={position}\r\n            index={index}\r\n            heroPosition={game.heroPosition}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          <span>Nenhuma informação encontrada</span>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","import React from 'react';\r\n\r\nconst Toast = ({ show, message, type }) => {\r\n  if (show)\r\n    return (\r\n      <div\r\n        className={`message ${\r\n          type === 'success'\r\n            ? 'success'\r\n            : type === 'warning'\r\n            ? 'warning'\r\n            : type === 'error'\r\n            ? 'error'\r\n            : ''\r\n        }`}\r\n      >\r\n        {message}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Toast;\r\n","import React, { useContext, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport CardItem from '../card/Item';\r\nimport CardWeapon from '../card/Weapon';\r\nimport Toast from '../../ui/Toast';\r\nimport { ITEM, SUCCESS, WARNING, WEAPON } from '../../../utils/constants';\r\nimport { isObjectEmpty } from '../../../utils';\r\n\r\nconst Shop = ({ show, setModalShop }) => {\r\n  const { items, weapons, magics } = useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleBuy = data => {\r\n    if (!isObjectEmpty(hero)) {\r\n      if (hero.gold >= data.price) {\r\n        // compra de item e adiciona a lista do heroi\r\n        let newGold = hero.gold - data.price;\r\n        let newData = { ...data, id: uuidv4() };\r\n        switch (data.type) {\r\n          case ITEM:\r\n            let newItems = [...hero.items, newData];\r\n            setHero({ ...hero, items: newItems, gold: newGold });\r\n            messageHandler(SUCCESS, 'Item comprado com sucesso!', setMessage);\r\n\r\n            break;\r\n          case WEAPON:\r\n            let newIWeapons = [...hero.weapons, newData];\r\n            setHero({ ...hero, weapons: newIWeapons, gold: newGold });\r\n            messageHandler(SUCCESS, 'Arma comprada com sucesso!', setMessage);\r\n\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n        messageHandler(WARNING, 'Sem ouro suficiente para compra!', setMessage);\r\n      }\r\n    } else {\r\n      messageHandler(WARNING, 'O herói não foi selecionado!', setMessage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`modal-container ${show ? 'active' : ''}`}>\r\n        <div className={`modal ${show ? 'active' : ''}`}>\r\n          <div className=\"modal-header\">\r\n            <h2>Loja</h2>\r\n            <p className=\"color-dark\">\r\n              Saldo do herói: ${(hero && hero.gold) || 0}\r\n            </p>\r\n            <button onClick={() => setModalShop(false)}>fechar</button>\r\n          </div>\r\n\r\n          <h3>Itens</h3>\r\n          <div className=\"card-container\">\r\n            {items.length > 0 ? (\r\n              items.map(item => (\r\n                <CardItem\r\n                  key={item.id}\r\n                  data={item}\r\n                  handleClick={() => handleBuy(item)}\r\n                  type=\"shop\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <span>Nada encontrado aqui</span>\r\n            )}\r\n          </div>\r\n\r\n          {/* armas */}\r\n          <h3>Armas</h3>\r\n          <div className=\"card-container\">\r\n            {weapons.length > 0 ? (\r\n              weapons.map(weapon => (\r\n                <CardWeapon\r\n                  key={weapon.id}\r\n                  data={weapon}\r\n                  handleClick={() => handleBuy(weapon)}\r\n                  type=\"shop\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <span>Nada encontrado aqui</span>\r\n            )}\r\n          </div>\r\n\r\n          {/* magicas */}\r\n          <h3>Mágicas</h3>\r\n          <div className=\"card-container\">\r\n            {magics.length > 0 ? (\r\n              magics.map(magic => (\r\n                <CardWeapon\r\n                  key={magic.id}\r\n                  data={magic}\r\n                  handleClick={() => handleBuy(magic)}\r\n                  type=\"shop\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <span>Nada encontrado aqui</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Toast\r\n        show={message && message.content}\r\n        type={message.type}\r\n        message={message.content}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none' }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>TY: {data.type}</span>\r\n        <span>MI: {data.min}</span>\r\n        <span>MX: {data.max}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          comprar\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport { ERROR, BOMB, TRAP } from '../../../utils/constants';\r\nimport Toast from '../../ui/Toast';\r\nimport CardTrap from '../card/Trap';\r\nimport { random } from '../../../utils';\r\n\r\nconst Trap = ({ show, setModalTrap }) => {\r\n  const { randomTrap, getRandomItem, resetRandomItem, game, setGame } =\r\n    useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleTrap = data => {\r\n    let type = data.type;\r\n    let damage = 0;\r\n    switch (type) {\r\n      case BOMB:\r\n        damage = random(data.min, data.max);\r\n        setHero({ ...hero, health: (hero.health -= damage) });\r\n        messageHandler(ERROR, `O herói sofreu ${damage} de dano`, setMessage);\r\n\r\n        if (hero.health <= 0) {\r\n          messageHandler(ERROR, `GAME OVER`, setMessage, 5000);\r\n          setGame({ ...game, end: true });\r\n        }\r\n        break;\r\n\r\n      default:\r\n        alert('[Trap.js] - Erro ao escolher o tipo de dano');\r\n        break;\r\n    }\r\n\r\n    setModalTrap(false);\r\n    resetRandomItem();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted && !randomTrap) getRandomItem(TRAP);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [randomTrap]);\r\n\r\n  if (randomTrap)\r\n    return (\r\n      <>\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <div className=\"modal-header\">\r\n              <h2>Trap</h2>\r\n            </div>\r\n            <div className=\"flex-justify-center\">\r\n              <CardTrap\r\n                key={Math.random()}\r\n                data={randomTrap}\r\n                handleClick={() => handleTrap(randomTrap)}\r\n                type=\"select\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Toast\r\n          show={message && message.content}\r\n          type={message.type}\r\n          message={message.content}\r\n        />\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Trap;\r\n","import React from 'react';\r\n\r\nconst Log = ({ fightLog }) => {\r\n  return (\r\n    <div className=\"game-fight-log \">\r\n      {fightLog.length > 0 ? (\r\n        fightLog\r\n          .map((log, index) => <p key={index}>{JSON.stringify(log)}</p>)\r\n          .reverse()\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Log;\r\n","import React from 'react';\r\n\r\nconst Turn = ({ fight }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <small>Rodada: {fight.round || 0}</small>\r\n      </div>\r\n      <div>\r\n        {!fight.end ? (\r\n          <small>\r\n            Vez de jogar:{' '}\r\n            {fight.turn === 0\r\n              ? ' Vez do Herói de jogar'\r\n              : ' O Inimigo está atacando ....'}\r\n          </small>\r\n        ) : (\r\n          <small>\r\n            Fim da luta:\r\n            {fight.winner === 0 ? ' O herói venceu !' : ' O Inimigo venceu !'}\r\n          </small>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Turn;\r\n","import React from 'react';\r\n\r\nconst Play = ({ fight, flee, hero, hit, setModalUserMagic, setModalItem }) => {\r\n  return (\r\n    <div className=\"game-fight-menu\">\r\n      <button disabled={fight.end || fight.turn === 1} onClick={hit}>\r\n        lutar\r\n      </button>\r\n      <button\r\n        disabled={fight.end || fight.turn === 1 || hero.mana <= 0}\r\n        onClick={() => setModalUserMagic(true)}\r\n      >\r\n        mágica\r\n      </button>\r\n      <button\r\n        disabled={fight.end || fight.turn === 1}\r\n        onClick={() => setModalItem(true)}\r\n      >\r\n        inventário\r\n      </button>\r\n\r\n      <button disabled={fight.turn === 1 && !fight.end} onClick={flee}>\r\n        {fight.end && fight.winner === 0\r\n          ? 'sair'\r\n          : fight.end && fight.winner === 1\r\n          ? 'fim'\r\n          : 'fugir'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Play;\r\n","import React from 'react';\r\nimport CardHero from '../../card/Hero';\r\n\r\nconst Fight = ({ hero, enemy, fight }) => {\r\n  if (enemy)\r\n    return (\r\n      <div className=\"game-fight\">\r\n        <div className=\"text-center\">\r\n          <h4 className={`${hero.health <= 0 ? 'color-error' : ''}`}>Herói</h4>\r\n          <CardHero data={hero} hit={fight.enemyAttack}></CardHero>\r\n        </div>\r\n\r\n        <h1>vs</h1>\r\n\r\n        <div className=\"text-center\">\r\n          <h4 className={`${enemy.health <= 0 ? 'color-error' : ''}`}>\r\n            {enemy.health <= 0 ? 'Derrotado' : 'Inimigo'}\r\n          </h4>\r\n          {enemy && <CardHero data={enemy} hit={fight.heroAttack}></CardHero>}\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Fight;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst LevelUp = ({ hero }) => {\r\n  const [activeClass, setActiveClass] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted) {\r\n      if (hero.level > 1) {\r\n        setActiveClass(true);\r\n\r\n        setTimeout(() => {\r\n          setActiveClass(false);\r\n        }, 1000);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [hero.level]);\r\n\r\n  return (\r\n    <div className={`level-up ${activeClass ? 'active' : ''}`}>\r\n      <span>\r\n        Subiu para o nível: {` `}\r\n        <b>{hero.level || 0}</b>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LevelUp;\r\n","import React, { useContext, useState } from 'react';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport {\r\n  MANA,\r\n  HEALTH,\r\n  POISON,\r\n  SUCCESS,\r\n  WEAPON,\r\n} from '../../../utils/constants';\r\nimport Toast from '../../ui/Toast';\r\nimport CardItem from '../card/Item';\r\nimport CardWeapon from '../card/Weapon';\r\n\r\nconst UserItems = ({ show, setModalItem }) => {\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleUse = data => {\r\n    // remove item da lista ao utilizar\r\n    let arrItems = hero.items.filter(i => i.id !== data.id);\r\n    let text = '';\r\n\r\n    switch (data.type) {\r\n      case MANA:\r\n        // TODO: validar mana maxima\r\n        setHero({ ...hero, items: arrItems, mana: hero.mana + data.value });\r\n        text =\r\n          'O Herói usou ' +\r\n          data.name +\r\n          ' e aumentou ' +\r\n          data.value +\r\n          ' de mana.';\r\n        setMessage({ type: SUCCESS, content: text });\r\n        break;\r\n      case HEALTH:\r\n        // TODO: validar vida maxima\r\n        setHero({ ...hero, items: arrItems, health: hero.health + data.value });\r\n        text =\r\n          'O Herói usou ' +\r\n          data.name +\r\n          ' e curou ' +\r\n          data.value +\r\n          ' de sua vida.';\r\n        setMessage({ type: SUCCESS, content: text });\r\n        break;\r\n      case POISON:\r\n        // TODO: validar vida maxima\r\n        // Aplicar condicao de envenenado ao inimigo\r\n        setHero({\r\n          ...hero,\r\n          items: arrItems,\r\n          equipped: { ...hero.equipped, poison: true },\r\n        });\r\n        text =\r\n          'O Herói usou ' +\r\n          data.name +\r\n          ' e envenenou ' +\r\n          data.value +\r\n          ' o inimigo.';\r\n        setMessage({\r\n          type: SUCCESS,\r\n          content: text,\r\n        });\r\n        break;\r\n      case WEAPON:\r\n        setHero({\r\n          ...hero,\r\n          equipped: { ...hero.equipped, weapon: data },\r\n        });\r\n        text = 'O Herói equipou ' + data.name + '.';\r\n        setMessage({\r\n          type: SUCCESS,\r\n          content: text,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setTimeout(() => setMessage({ type: '', content: '' }), 2000);\r\n\r\n    // TODO: alternar turno da batalha ao utilizar o item dentro da batalha\r\n    setModalItem(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`modal-container ${show ? 'active' : ''}`}>\r\n        <div className={`modal ${show ? 'active' : ''}`}>\r\n          <div className=\"modal-header\">\r\n            <h2>Inventário</h2>\r\n            <button onClick={() => setModalItem(false)}>fechar</button>\r\n          </div>\r\n\r\n          <p className=\"color-error\">- Itens</p>\r\n          <div className=\"grid-container\">\r\n            {hero && hero.items && hero.items.length > 0 ? (\r\n              hero.items.map(\r\n                item =>\r\n                  item.type === HEALTH && (\r\n                    <CardItem\r\n                      key={item.id}\r\n                      data={item}\r\n                      handleClick={() => handleUse(item)}\r\n                      type=\"use\"\r\n                    />\r\n                  )\r\n              )\r\n            ) : (\r\n              <p>\r\n                <small>O herói não possui itens.</small>\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <p className=\"color-error\">- Armas</p>\r\n          <div className=\"grid-container\">\r\n            {hero && hero.weapons.length > 0 ? (\r\n              hero.weapons.map(\r\n                item =>\r\n                  item.type === WEAPON && (\r\n                    <CardWeapon\r\n                      equipped={item.id === hero.equipped.weapon.id}\r\n                      key={item.id}\r\n                      data={item}\r\n                      handleClick={() => handleUse(item)}\r\n                      type=\"equip\"\r\n                    />\r\n                  )\r\n              )\r\n            ) : (\r\n              <p>\r\n                <small>O herói não possui nenhuma arma.</small>\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Toast\r\n        show={message && message.content}\r\n        type={message.type}\r\n        message={message.content}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserItems;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none', disabled }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n      </div>\r\n\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>TY: {data.type}</span>\r\n        <span>MI: {data.min}</span>\r\n        <span>MX: {data.max}</span>\r\n        <span>MP: {data.mana}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          buy\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" disabled={disabled} onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport CardMagic from '../../card/Magic';\r\n\r\nconst ModalMagic = ({\r\n  modalUserMagic,\r\n  setModalUserMagic,\r\n  hero,\r\n  handleUseMagic,\r\n}) => {\r\n  return (\r\n    <div className={`modal-container ${modalUserMagic ? 'active' : ''}`}>\r\n      <div className={`modal ${modalUserMagic ? 'active' : ''}`}>\r\n        <div className=\"modal-header\">\r\n          <h2>Magias</h2>\r\n          <h3 className=\"color-warning \">\r\n            Mana disponível: {(hero && hero.mana) || 0}\r\n          </h3>\r\n          <button onClick={() => setModalUserMagic(false)}>fechar</button>\r\n        </div>\r\n\r\n        <div className=\"grid-container\">\r\n          {hero && hero.magic && hero.magic.length > 0 ? (\r\n            hero.magic\r\n              .map(item => (\r\n                <CardMagic\r\n                  key={Math.random()}\r\n                  data={item}\r\n                  handleClick={() => handleUseMagic(item)}\r\n                  type=\"use\"\r\n                  disabled={item.mana > hero.mana}\r\n                />\r\n              ))\r\n              .reverse()\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalMagic;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { getNextLevel, random } from '../../../utils';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport Log from './fight/Log';\r\nimport Turn from './fight/Turn';\r\nimport Play from './fight/Play';\r\nimport Fight from './fight/Fight';\r\nimport LevelUp from './fight/LevelUp';\r\nimport ModalItems from './UserItems';\r\nimport ModalMagic from './fight/Magic';\r\nimport Toast from '../../ui/Toast';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport { ERROR } from '../../../utils/constants';\r\n\r\nconst ModalFight = ({ show, setModalFight }) => {\r\n  const { hero, setHero } = useContext(HeroContext);\r\n  const {\r\n    fight,\r\n    enemy,\r\n    setFight,\r\n    setEnemy,\r\n    fightLog,\r\n    setFightLog,\r\n    resetFight,\r\n    game,\r\n    setGame,\r\n  } = useContext(GameContext);\r\n  const [modalItem, setModalItem] = useState(false);\r\n  const [modalUserMagic, setModalUserMagic] = useState(false);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  /**\r\n   * Causa um dano aleatório ao herói\r\n   */\r\n  const enemyTurn = () => {\r\n    let _rxn = random(5, 15);\r\n    let _sta = 'O Inimigo provocou ' + _rxn + ' de dano.';\r\n\r\n    setTimeout(() => {\r\n      setHero({ ...hero, health: hero.health - _rxn });\r\n      setFight({\r\n        ...fight,\r\n        turn: 0,\r\n        round: fight.round + 1,\r\n      });\r\n      setFightLog([...fightLog, _sta]);\r\n    }, 1000);\r\n  };\r\n\r\n  /**\r\n   * Causa dano ao inimigo de acordo com uma escolha\r\n   * aleatória, entre o dano mínimo e máximo da arma\r\n   * equipada\r\n   */\r\n  const hit = () => {\r\n    let equippedWeapon = hero.equipped.weapon;\r\n    let weaponDamage = random(equippedWeapon.min, equippedWeapon.max);\r\n    let _stq = 'O Herói atacou, provocando ' + weaponDamage + ' de dano.';\r\n\r\n    setFightLog([...fightLog, _stq]);\r\n    setEnemy({ ...enemy, health: enemy.health - weaponDamage });\r\n    setFight({ ...fight, turn: 1 });\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {Object} data Magic Item\r\n   */\r\n  const handleUseMagic = data => {\r\n    let magicDamage = random(data.min, data.max);\r\n    let _itx =\r\n      'O Herói usou ' + data.name + ' e causou ' + magicDamage + ' de dano.';\r\n\r\n    if (data.mana <= hero.mana) {\r\n      setFightLog([...fightLog, _itx]);\r\n      setEnemy({ ...enemy, health: enemy.health - magicDamage });\r\n      setHero({ ...hero, mana: hero.mana - data.mana });\r\n      setFight({ ...fight, turn: 1 });\r\n      setModalUserMagic(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Herói foge da batalha, perdendo uma parte do gold\r\n   * e de experiência se houver experiência\r\n   */\r\n  const flee = () => {\r\n    // TODO: desativar botaos ao sair\r\n    if (fight.end) {\r\n      // sair sem prejuizo\r\n      setModalFight(false);\r\n    } else {\r\n      // sair com prejuizo\r\n      let expHero = hero.exp;\r\n      let expBase = 15;\r\n      let goldBase = 15;\r\n      if (expHero < expBase) {\r\n        setHero({ ...hero, gold: hero.gold - goldBase, exp: 0 });\r\n        messageHandler(\r\n          ERROR,\r\n          `Removido ${goldBase} de ouro e 0 de experiência!`,\r\n          setMessage\r\n        );\r\n      } else {\r\n        setHero({\r\n          ...hero,\r\n          gold: hero.gold - goldBase,\r\n          exp: hero.exp - expBase,\r\n        });\r\n        messageHandler(\r\n          ERROR,\r\n          `Removido ${goldBase} de ouro e ${expBase} de experiência!`,\r\n          setMessage\r\n        );\r\n      }\r\n\r\n      setModalFight(false);\r\n    }\r\n    resetFight();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted && fight && enemy && hero) {\r\n      if (fight.end) {\r\n        // TODO: fim do jogo\r\n        return;\r\n      } else if (fight.turn === 0 && hero.health > 0) {\r\n        // TODO: fazer nada, vez do heroi\r\n      } else if (fight.turn === 1 && enemy.health > 0) {\r\n        enemyTurn();\r\n      } else if (hero.health <= 0) {\r\n        let _ini = 'O herói foi derrotado!';\r\n        setFightLog([...fightLog, _ini]);\r\n        setFight({ ...fight, winner: 1, end: true });\r\n        setGame({ ...game, end: true });\r\n      } else if (enemy.health <= 0) {\r\n        let _itx = 'O inimigo foi derrotado';\r\n        setFightLog([...fightLog, _itx]);\r\n        setFight({ ...fight, winner: 0, end: true });\r\n\r\n        // validar o exp atual e realizar a evolucao do heroi\r\n        // TODO: configurar a quantidade de exp que o herói recebe\r\n        let baseExp = 55;\r\n        let goldBase = 45;\r\n        let nextExp = Math.floor(baseExp + hero.nextLevel / (hero.level * 10));\r\n        if (hero.exp + nextExp > hero.nextLevel) {\r\n          // calcular a quantidade de experiencia para o proximo nivel\r\n          let _nxt = getNextLevel(hero.level + 1);\r\n          let _exl = hero.exp + nextExp - hero.nextLevel;\r\n          // let _nxl = Math.floor(hero.nextLevel + hero.nextLevel / 2);\r\n          // evolução do herói\r\n          setHero({\r\n            ...hero,\r\n            gold: hero.gold + goldBase,\r\n            exp: _exl,\r\n            victories: hero.victories + 1,\r\n            level: hero.level + 1,\r\n            nextLevel: _nxt,\r\n          });\r\n        } else {\r\n          setHero({\r\n            ...hero,\r\n            gold: hero.gold + goldBase,\r\n            exp: hero.exp + baseExp,\r\n            victories: hero.victories + 1,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [enemy, hero, fight]);\r\n\r\n  if (hero)\r\n    return (\r\n      <>\r\n        {/*  */}\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <LevelUp hero={hero} />\r\n\r\n            {/*  */}\r\n            <h3>Luta</h3>\r\n\r\n            {/*  */}\r\n            <Turn fight={fight} />\r\n\r\n            {/*  */}\r\n            <Fight hero={hero} enemy={enemy} fight={fight} />\r\n\r\n            {/*  */}\r\n            <Play\r\n              fight={fight}\r\n              flee={flee}\r\n              hero={hero}\r\n              hit={hit}\r\n              setModalUserMagic={setModalUserMagic}\r\n              setModalItem={setModalItem}\r\n            />\r\n\r\n            {/*  */}\r\n            <Log fightLog={fightLog} />\r\n\r\n            {/*  */}\r\n          </div>\r\n        </div>\r\n\r\n        {/* inventario */}\r\n        <ModalItems show={modalItem} setModalItem={setModalItem} />\r\n\r\n        {/* magia */}\r\n        <ModalMagic\r\n          modalUserMagic={modalUserMagic}\r\n          setModalUserMagic={setModalUserMagic}\r\n          hero={hero}\r\n          handleUseMagic={handleUseMagic}\r\n        />\r\n\r\n        <Toast\r\n          show={message && message.content}\r\n          type={message.type}\r\n          message={message.content}\r\n        />\r\n      </>\r\n    );\r\n};\r\n\r\nexport default ModalFight;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport Toast from '../../ui/Toast';\r\nimport CardItem from '../card/Item';\r\nimport { ITEM, SUCCESS } from '../../../utils/constants';\r\n\r\nconst ModalItem = ({ show, setModalGiftItem }) => {\r\n  const { randomItem, getRandomItem, resetRandomItem } =\r\n    useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleGet = data => {\r\n    let i = { ...data, id: uuidv4() };\r\n    let _nwi = [...hero.items, i];\r\n\r\n    setHero({ ...hero, items: _nwi });\r\n    messageHandler(SUCCESS, 'Item adiquirido com sucesso!', setMessage);\r\n\r\n    setModalGiftItem(false);\r\n    resetRandomItem();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted && !randomItem) getRandomItem(ITEM);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [randomItem]);\r\n\r\n  if (randomItem)\r\n    return (\r\n      <>\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <div className=\"modal-header\">\r\n              <h2>Presente</h2>\r\n              <button onClick={() => setModalGiftItem(false)}>\r\n                fechar\r\n              </button>{' '}\r\n            </div>\r\n\r\n            <div className=\"flex-justify-center\">\r\n              <CardItem\r\n                key={Math.random()}\r\n                data={randomItem}\r\n                handleClick={() => handleGet(randomItem)}\r\n                type=\"select\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Toast\r\n          show={message && message.content}\r\n          type={message.type}\r\n          message={message.content}\r\n        />\r\n      </>\r\n    );\r\n};\r\n\r\nexport default ModalItem;\r\n","import React from 'react';\r\n\r\nconst Code = ({ data }) => {\r\n  return (\r\n    <p>\r\n      Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nostrum quisquam\r\n      voluptatem officia quidem {data.code} vitae similique iste vero, saepe\r\n      alias porro nisi veritatis aspernatur cupiditate earum animi deleniti,\r\n      quibusdam impedit? Doloremque?\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Code;\r\n","import React, { useContext } from 'react';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { isObjectEmpty } from '../../../utils';\r\n\r\nimport CardCode from '../card/Code';\r\n\r\nlet data = {\r\n  id: 1,\r\n  name: 'code',\r\n};\r\n\r\nconst Code = ({ show, setModalCode }) => {\r\n  const { randomChest } = useContext(GameContext);\r\n\r\n  const handleGet = data => {\r\n    console.log(data);\r\n  };\r\n\r\n  if (!isObjectEmpty(randomChest))\r\n    return (\r\n      <>\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <div className=\"modal-header\">\r\n              <h2>História</h2>\r\n              <button onClick={() => setModalCode(false)}>fechar</button>{' '}\r\n            </div>\r\n\r\n            <div className=\"flex-justify-center\">\r\n              <CardCode\r\n                key={randomChest.id}\r\n                data={randomChest}\r\n                handleClick={() => handleGet(randomChest)}\r\n                type=\"select\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Code;\r\n","import React from 'react';\r\nimport { URL_IMG_GH } from '../../../utils/constants';\r\n\r\nconst Card = ({\r\n  data,\r\n  handleClick,\r\n  setPassword,\r\n  password,\r\n  attempt,\r\n  type = 'none',\r\n}) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG_GH + data.poster} alt={data.name} />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n      </div>\r\n\r\n      {type === 'key' && (\r\n        <>\r\n          <input\r\n            autoFocus=\"autoFocus\"\r\n            className=\"card-password\"\r\n            type=\"text\"\r\n            onChange={e => setPassword(e.target.value)}\r\n            value={password}\r\n          />\r\n          <button disabled={attempt} className=\"width100\" onClick={handleClick}>\r\n            abrir\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { isObjectEmpty } from '../../../utils';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport { CHEST, ERROR, SUCCESS } from '../../../utils/constants';\r\nimport Toast from '../../ui/Toast';\r\nimport CardChest from '../card/Chest';\r\n\r\nconst Chest = ({ show, setModalChest }) => {\r\n  const { randomChest, getRandomItem } = useContext(GameContext);\r\n\r\n  const [password, setPassword] = useState('');\r\n  const [attempt, setAttempt] = useState(false);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleGet = data => {\r\n    if (data.code === password) {\r\n      messageHandler(SUCCESS, 'Bau aberto com sucesso!', setMessage);\r\n    } else {\r\n      messageHandler(ERROR, 'Falha ao abrir o bau!', setMessage);\r\n    }\r\n    setAttempt(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted && !randomChest) getRandomItem(CHEST);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [randomChest]);\r\n\r\n  if (!isObjectEmpty(randomChest))\r\n    return (\r\n      <>\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <div className=\"modal-header\">\r\n              <h2>Baú</h2>\r\n              <button onClick={() => setModalChest(false)}>fechar</button>{' '}\r\n            </div>\r\n\r\n            <div className=\"flex-justify-center\">\r\n              <CardChest\r\n                attempt={attempt}\r\n                key={Math.random()}\r\n                data={randomChest}\r\n                handleClick={() => handleGet(randomChest)}\r\n                type=\"key\"\r\n                password={password}\r\n                setPassword={setPassword}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Toast\r\n          show={message && message.content}\r\n          type={message.type}\r\n          message={message.content}\r\n        />\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Chest;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { diceAnimation } from '../utils';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GameContext } from '../context/Game';\r\nimport { HeroContext } from '../context/Hero';\r\nimport Hero from '../components/game/card/HeroInline';\r\nimport GameMenu from '../components/game/GameMenu';\r\nimport Timeline from '../components/game/position/Timeline';\r\nimport ModalShop from '../components/game/modal/Shop';\r\nimport ModalTrap from '../components/game/modal/Trap';\r\nimport ModalFight from '../components/game/modal/Fight';\r\nimport ModalGiftItem from '../components/game/modal/Gift';\r\nimport ModalUserItems from '../components/game/modal/UserItems';\r\nimport ModalCode from '../components/game/modal/Code';\r\nimport ModalChest from '../components/game/modal/Chest';\r\nimport { BOSS, CHEST, CODE, ENEMY, ITEM, NULL, TRAP } from '../utils/constants';\r\n\r\nconst Game = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const { hero, setHero } = useContext(HeroContext);\r\n  const { dice, setDice, game, setGame, setEnemy, setFightLog, resetGame } =\r\n    useContext(GameContext);\r\n\r\n  // modal shop\r\n  const [modalShop, setModalShop] = useState(false);\r\n\r\n  // abre o modal de acordo com a posicao\r\n  const [modalFight, setModalFight] = useState(false);\r\n  const [modalItem, setModalItem] = useState(false);\r\n  const [modalGiftItem, setModalGiftItem] = useState(false);\r\n  const [modalTrap, setModalTrap] = useState(false);\r\n  const [modalCode, setModalCode] = useState(false);\r\n  const [modalChest, setModalChest] = useState(false);\r\n\r\n  // validar se os dados estao sendo atualizados\r\n  const [updatedDice, setUpdatedDice] = useState(false);\r\n\r\n  const reset = () => {\r\n    resetGame();\r\n    setHero(null);\r\n    setTimeout(() => navigate('/'), 5);\r\n  };\r\n\r\n  const play = () => {\r\n    if (game.mapLength === 0) {\r\n      return;\r\n    } else if (game.heroPosition < game.mapLength) {\r\n      // efeito de animacao dos dados\r\n      setGame({ ...game, playing: true });\r\n      diceAnimation(setDice, setUpdatedDice);\r\n    } else {\r\n      alert('Boss');\r\n    }\r\n  };\r\n\r\n  const playUpdateStats = () => {\r\n    setGame({\r\n      ...game,\r\n      heroPosition: game.heroPosition + dice,\r\n      playing: false,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      // verifica o tipo de posicao atual\r\n      let actualPosition = game.mapPositions[game.heroPosition + dice];\r\n\r\n      // verifica o tipo da posicao do mapa\r\n      if (!actualPosition) {\r\n        // TODO: BOSS\r\n        return;\r\n      } else {\r\n        let actualMapPosition = Object.keys(actualPosition)[0];\r\n\r\n        // abre o modal de acordo com o tipo de posicao\r\n        switch (actualMapPosition) {\r\n          case ENEMY:\r\n            setEnemy({ ...actualPosition.enemy });\r\n            setModalFight(true);\r\n            // reset do log da luta\r\n            setFightLog([]);\r\n            break;\r\n          case ITEM:\r\n            setModalGiftItem(true);\r\n            break;\r\n          case TRAP:\r\n            setModalTrap(true);\r\n            break;\r\n          case CODE:\r\n            setModalCode(true);\r\n            break;\r\n          case CHEST:\r\n            setModalChest(true);\r\n            break;\r\n          case NULL:\r\n            break;\r\n          case BOSS:\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    // movimenta para proxima posicao apos animacao dos dados\r\n    if (updatedDice && mounted) {\r\n      playUpdateStats();\r\n    }\r\n\r\n    return () => {\r\n      mounted = false;\r\n      setUpdatedDice(false);\r\n    };\r\n  }, [updatedDice]);\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      {/* informacoes sobre o heroi*/}\r\n      {hero && hero.id && <Hero data={hero} />}\r\n      {/* timeline */}\r\n      <Timeline game={game} />\r\n      {/* modal shop */}\r\n      <ModalShop show={modalShop} setModalShop={setModalShop} />\r\n      {/* modal itens do ususario */}\r\n      <ModalUserItems show={modalItem} setModalItem={setModalItem} />\r\n      {/* game modal luta */}\r\n      <ModalFight show={modalFight} setModalFight={setModalFight} />\r\n      {/* game modal item */}\r\n      <ModalGiftItem show={modalGiftItem} setModalGiftItem={setModalGiftItem} />\r\n      {/* game modal trap */}\r\n      <ModalTrap show={modalTrap} setModalTrap={setModalTrap} />\r\n      {/* game modal code */}\r\n      <ModalCode show={modalCode} setModalCode={setModalCode} />\r\n      {/* game code para o chest */}\r\n      <ModalChest show={modalChest} setModalChest={setModalChest} />\r\n      {/* game menu */}\r\n      <GameMenu\r\n        game={game}\r\n        play={play}\r\n        reset={reset}\r\n        modalShop={modalShop}\r\n        modalItem={modalItem}\r\n        setModalShop={setModalShop}\r\n        setModalItem={setModalItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport { Route, Routes } from 'react-router';\n\nimport Start from './pages/Start';\nimport Hero from './pages/SelectHero';\nimport Item from './pages/SelectItem';\nimport Weapon from './pages/SelectWeapon';\nimport Map from './pages/SelectMap';\nimport Game from './pages/Game';\n\nfunction App() {\n  return (\n    <>\n      <Routes>\n        <Route exact path=\"/\" element={<Start />} />\n        <Route exact path=\"/select-hero\" element={<Hero />} />\n        <Route exact path=\"/select-item\" element={<Item />} />\n        <Route exact path=\"/select-weapon\" element={<Weapon />} />\n        <Route exact path=\"/select-map\" element={<Map />} />\n        <Route exact path=\"/start-game\" element={<Game />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nimport './css/reset.css';\nimport './css/index.css';\nimport './css/card.css';\nimport './css/modal.css';\nimport './css/game.css';\nimport './css/map.css';\nimport './css/hero.css';\nimport './css/message.css';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ContextHero } from './context/Hero';\nimport { ContextGame } from './context/Game';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <ContextGame>\n      <ContextHero>\n        <Router basename={process.env.PUBLIC_URL}>\n          <App />\n        </Router>\n      </ContextHero>\n    </ContextGame>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}