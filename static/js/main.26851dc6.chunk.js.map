{"version":3,"sources":["pages/Start.js","utils/constants.js","components/game/card/Hero.js","context/Game.js","context/Hero.js","pages/SelectHero.js","components/game/card/Item.js","pages/SelectItem.js","utils/game.js","components/game/card/Map.js","pages/SelectMap.js","utils/index.js","components/game/card/HeroInline.js","components/game/card/Weapon.js","components/ui/Toast.js","components/game/modal/Shop.js","components/game/modal/ModalItem.js","components/game/card/Trap.js","components/game/modal/Trap.js","components/game/modal/fight/Log.js","components/game/modal/fight/Turn.js","components/game/modal/fight/Play.js","components/game/modal/fight/Fight.js","components/game/modal/fight/LevelUp.js","components/game/modal/UserItems.js","components/game/card/Magic.js","components/game/modal/fight/ModalMagic.js","components/game/modal/ModalFight.js","components/game/position/Position.js","components/game/position/Timeline.js","components/game/GameButtons.js","pages/Game.js","App.js","index.js"],"names":["Start","react_default","a","createElement","className","react_router_dom","to","NULL","ENEMY","ITEM","LEVEL_BASE","LEVEL_EASY","concat","URL_IMG","URL_UNK","Card","_ref","data","handleClick","_ref$type","type","price","health","src","poster","alt","name","mana","onClick","GameContext","React","createContext","GameProvider","Provider","ContextGame","children","_useState","useState","_useState2","Object","slicedToArray","heroes","setHeroes","_useState3","_useState4","items","setItems","_useState5","_useState6","maps","setMaps","_useState7","_useState8","enemies","setEnemies","_useState9","_useState10","weapons","setWeapos","_useState11","_useState12","magic","setMagic","_useState13","_useState14","traps","setTraps","_useState15","_useState16","enemy","setEnemy","_useState17","_useState18","item","setItem","_useState19","_useState20","fightLog","setFightLog","_useState21","_useState22","map","setMap","_useState23","_useState24","randomItem","setRandomItem","_useState25","_useState26","randomTrap","setRandomTrap","_useState27","mapPositions","mapLength","heroPosition","end","_useState28","game","setGame","_useState29","round","modalInventory","turn","winner","_useState30","fight","setFight","useEffect","mounted","length","heroes_api","items_api","maps_api","enemies_api","weapons_api","magic_api","traps_api","value","resetGame","resetFight","getRandomItem","arr","Math","floor","random","resetRandomItem","resetRandomTrap","HeroContext","HeroProvider","ContextHero","hero","setHero","SelectHero","useContext","_useContext2","Hero","key","splice","disabled","rarity","SelectItem","_useContext","handleSelect","id","uuidv4","objectSpread","equipped","weapon","handleSelectThis","Item","messageHandler","message","setMessage","timer","arguments","undefined","content","setTimeout","Map","level","size","SelectMap","navigate","useNavigate","card_Map","positions","i","_positions$push","push","defineProperty","init","boss","generatePositions","error","console","warn","min","max","HeroInline","gold","exp","nextLevel","Toast","Shop","show","setModalShop","handleBuy","obj","keys","newGold","newItems","toConsumableArray","Fragment","Weapon","ui_Toast","ModalItem","setModalGiftItem","_nwi","handleGet","Trap","setModalTrap","card_Trap","_dpf","alert","handleTrap","Log","log","index","JSON","stringify","Turn","Play","flee","hit","setModalUserMagic","setModalItem","Fight","LevelUp","activeClass","setActiveClass","UserItems","arrItems","filter","_itx","poison","handleUse","ModalMagic","modalUserMagic","handleUseMagic","Magic","reverse","ModalFight","setModalFight","modalItem","_rxn","_sta","enemyTurn","_pex","_nxo","_dpp","victories","fight_LevelUp","fight_Turn","fight_Fight","fight_Play","expHero","_wep","_dmg","_stq","fight_Log","modal_UserItems","fight_ModalMagic","_mpp","Position","Timeline","position","position_Position","GameButtons","play","reset","modalShop","Game","modalFight","modalGiftItem","modalTrap","card_HeroInline","position_Timeline","modal_Shop","modal_ModalFight","modal_ModalItem","modal_Trap","game_GameButtons","_apd","actualPosition","App","react_router","exact","path","element","pages_Start","pages_SelectHero","pages_SelectItem","pages_SelectMap","pages_Game","ReactDOM","createRoot","document","getElementById","render","StrictMode","Game_ContextGame","Hero_ContextHero","src_App"],"mappings":"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","file":"static/js/main.26851dc6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Start = () => {\r\n  return (\r\n    <div className=\"center-center\">\r\n      <Link to=\"/select-hero\">\r\n        <button>\r\n          iniciar{' '}\r\n          <span className=\"material-symbols-outlined\">chevron_right</span>\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","export const NULL = 'null';\r\nexport const ENEMY = 'enemy';\r\nexport const ITEM = 'item';\r\nexport const TRAP = 'trap';\r\nexport const BOSS = 'boss';\r\nexport const INIT = 'init';\r\n\r\nexport const BOMB = 'bomb';\r\n\r\nexport const LEVEL_BASE = [NULL, ENEMY, TRAP, ITEM];\r\nexport const LEVEL_EASY = [NULL, ENEMY, ENEMY, ITEM].concat(LEVEL_BASE);\r\nexport const LEVEL_MEDIUM = [NULL, ENEMY, ENEMY, ENEMY, ITEM].concat(\r\n  LEVEL_BASE\r\n);\r\nexport const LEVEL_HARD = 'hard';\r\n\r\nexport const MANA = 'mana';\r\nexport const HEALTH = 'health';\r\nexport const POISON = 'poison';\r\n\r\nexport const SUCCESS = 'success';\r\nexport const WARNING = 'warning';\r\nexport const ERROR = 'error';\r\n\r\nexport const URL_IMG = 'http://localhost:3000/images/';\r\nexport const URL_EMP = 'empty_card.png';\r\nexport const URL_UNK = 'unknow_card.png';\r\n","import React from 'react';\r\nimport { URL_IMG } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none' }) => {\r\n  if (data)\r\n    return (\r\n      <div className=\"card\">\r\n        {type === 'shop' && <span>{data.price}</span>}\r\n        <div\r\n          className={`card-image ${data.health <= 0 ? 'filter-grayscale' : ''}`}\r\n        >\r\n          <img src={URL_IMG + data.poster} alt={data.name} />\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <span>NA: {data.name}</span>\r\n          <span>TY: {data.type}</span>\r\n          <span className={`${data.health < 25 ? 'color-error' : ''}`}>\r\n            HP: {data.health}\r\n          </span>\r\n          {data.mana && <span>MP: {data.mana}</span>}\r\n        </div>\r\n        {type === 'shop' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            buy\r\n          </button>\r\n        )}\r\n        {type === 'use' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            use\r\n          </button>\r\n        )}\r\n        {type === 'select' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            selecionar\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport heroes_api from '../api/heroes.json';\r\nimport items_api from '../api/items.json';\r\nimport maps_api from '../api/maps.json';\r\nimport enemies_api from '../api/enemies.json';\r\nimport magic_api from '../api/magic.json';\r\nimport weapons_api from '../api/weapons.json';\r\nimport traps_api from '../api/traps.json';\r\nimport { ITEM, TRAP } from '../utils/constants';\r\n\r\nconst GameContext = React.createContext();\r\nconst GameProvider = GameContext.Provider;\r\n\r\nconst ContextGame = ({ children }) => {\r\n  const [heroes, setHeroes] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n  const [maps, setMaps] = useState([]);\r\n  const [enemies, setEnemies] = useState([]);\r\n  const [weapons, setWeapos] = useState([]);\r\n  const [magic, setMagic] = useState([]);\r\n  const [traps, setTraps] = useState([]);\r\n\r\n  // dados das posicoes\r\n  const [enemy, setEnemy] = useState(null);\r\n  const [item, setItem] = useState(null);\r\n\r\n  // log da luta\r\n  const [fightLog, setFightLog] = useState([]);\r\n\r\n  // mapa selecionado\r\n  const [map, setMap] = useState(null);\r\n\r\n  // gift item\r\n  const [randomItem, setRandomItem] = useState(null);\r\n  const [randomTrap, setRandomTrap] = useState(null);\r\n\r\n  // estado do jogo\r\n  const [game, setGame] = useState({\r\n    map: null,\r\n    mapPositions: 0,\r\n    mapLength: 0,\r\n    heroPosition: 0,\r\n    end: false,\r\n  });\r\n\r\n  // estado da luta\r\n  const [fight, setFight] = useState({\r\n    round: 0,\r\n    modalInventory: false,\r\n    end: false,\r\n    turn: 0,\r\n    winner: null,\r\n  });\r\n\r\n  const resetGame = () => {\r\n    setGame({\r\n      map: null,\r\n      mapPositions: 0,\r\n      mapLength: 0,\r\n      heroPosition: 0,\r\n      end: false,\r\n    });\r\n  };\r\n\r\n  const resetFight = () => {\r\n    setFight({\r\n      round: 0,\r\n      modalInventory: false,\r\n      end: false,\r\n      turn: 0,\r\n      winner: null,\r\n    });\r\n  };\r\n\r\n  const getRandomItem = arr => {\r\n    switch (arr) {\r\n      case ITEM:\r\n        setRandomItem(items[Math.floor(Math.random() * items.length)]);\r\n        break;\r\n      case TRAP:\r\n        setRandomTrap(traps[Math.floor(Math.random() * traps.length)]);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const resetRandomItem = () => setRandomItem(null);\r\n  const resetRandomTrap = () => setRandomTrap(null);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted) {\r\n      // carregar os itens da api\r\n      if (heroes.length === 0) setHeroes(heroes_api);\r\n      // carregar os herois da api\r\n      if (items.length === 0) setItems(items_api);\r\n      // carregar os mapas da api\r\n      if (maps.length === 0) setMaps(maps_api);\r\n      // carregar os inimigos da api\r\n      if (enemies.length === 0) setEnemies(enemies_api);\r\n      // carregar as armas da api\r\n      if (weapons.length === 0) setWeapos(weapons_api);\r\n      // carregar as magicas da api\r\n      if (magic.length === 0) setMagic(magic_api);\r\n      // carregar as traps da api\r\n      if (traps.length === 0) setTraps(traps_api);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [heroes, items, maps, enemies, weapons, magic]);\r\n\r\n  return (\r\n    <GameProvider\r\n      value={{\r\n        heroes,\r\n        items,\r\n        maps,\r\n        enemies,\r\n        map,\r\n        weapons,\r\n        magic,\r\n        game,\r\n        enemy,\r\n        item,\r\n        fight,\r\n        fightLog,\r\n        setMap,\r\n        setGame,\r\n        setFight,\r\n        setEnemy,\r\n        setItem,\r\n        setFightLog,\r\n        resetGame,\r\n        resetFight,\r\n        randomItem,\r\n        getRandomItem,\r\n        randomTrap,\r\n        resetRandomItem,\r\n        resetRandomTrap,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameProvider>\r\n  );\r\n};\r\n\r\nexport { GameContext, ContextGame };\r\n","import React, { useState } from 'react';\r\n\r\nconst HeroContext = React.createContext();\r\nconst HeroProvider = HeroContext.Provider;\r\n\r\nconst ContextHero = ({ children }) => {\r\n  const [hero, setHero] = useState(null);\r\n\r\n  return (\r\n    <HeroProvider\r\n      value={{\r\n        setHero,\r\n        hero,\r\n      }}\r\n    >\r\n      {children}\r\n    </HeroProvider>\r\n  );\r\n};\r\n\r\nexport { HeroContext, ContextHero };\r\n","import React, { useContext } from 'react';\r\nimport CardHero from '../components/game/card/Hero';\r\nimport { Link } from 'react-router-dom';\r\nimport { GameContext } from '../context/Game';\r\nimport { HeroContext } from '../context/Hero';\r\nimport { URL_UNK } from '../utils/constants';\r\n\r\nconst SelectHero = () => {\r\n  const { heroes } = useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const handleSelectThis = data => {\r\n    // adicionar o heroi\r\n    setHero(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-center\">\r\n      <div>\r\n        {/* loop pelos herois da api */}\r\n        <div className=\"card-grid\">\r\n          {heroes.length > 0 ? (\r\n            heroes\r\n              .map(hero => (\r\n                <CardHero\r\n                  key={Math.random()}\r\n                  data={hero}\r\n                  handleClick={() => handleSelectThis(hero)}\r\n                  type=\"select\"\r\n                />\r\n              ))\r\n              .splice(0, 3)\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* menu */}\r\n        <div className=\"menu-select\">\r\n          <Link to=\"/\">\r\n            <button>\r\n              início{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_before</span>\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/select-item\">\r\n            <button disabled={!hero}>\r\n              próximo{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_next</span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* mostrar o heroi selecionado */}\r\n        <div className=\"card-grid\">\r\n          {hero ? (\r\n            <CardHero key={Math.random()} data={hero}></CardHero>\r\n          ) : (\r\n            <CardHero data={{ name: 'Nada selecionado', poster: URL_UNK }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectHero;\r\n","import React from 'react';\r\nimport { URL_IMG } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none' }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG + data.poster} alt={data.name} />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>TY: {data.type}</span>\r\n        <span>RA: {data.rarity}</span>\r\n        <span>VL: {data.value}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          comprar\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Link } from 'react-router-dom';\r\nimport { GameContext } from '../context/Game';\r\nimport { HeroContext } from '../context/Hero';\r\nimport CardItem from '../components/game/card/Item';\r\nimport { URL_UNK } from '../utils/constants';\r\n\r\nconst SelectItem = () => {\r\n  const { items, magic, weapons } = useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const handleSelectThis = data => {\r\n    // adicionar o item aos items do heroi\r\n    setHero({\r\n      ...hero,\r\n      items: [data],\r\n      magic: [magic[0]],\r\n      weapons: [weapons[0]],\r\n      equipped: {\r\n        weapon: weapons[0],\r\n      },\r\n    });\r\n\r\n    // TODO: adicionar a magica e a arma ao heroi\r\n  };\r\n\r\n  const handleSelect = data => {\r\n    data.id = uuidv4();\r\n    handleSelectThis(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-center\">\r\n      <div>\r\n        {/* loop pelos herois da api */}\r\n        <div className=\"card-grid\">\r\n          {items.length > 0 ? (\r\n            items\r\n              .map(item => (\r\n                <CardItem\r\n                  key={Math.random()}\r\n                  data={item}\r\n                  handleClick={() => handleSelect(item)}\r\n                  type=\"select\"\r\n                />\r\n              ))\r\n              .splice(0, 3)\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* menu */}\r\n        <div className=\"menu-select\">\r\n          <Link to=\"/select-hero\">\r\n            <button>\r\n              voltar{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_before</span>\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/select-map\">\r\n            <button disabled={!hero || hero.items.length === 0}>\r\n              próximo{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_next</span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* mostrar o heroi selecionado */}\r\n        <div className=\"card-grid\">\r\n          {hero && hero.items && hero.items.length > 0 ? (\r\n            hero.items.map(item => (\r\n              <CardItem key={Math.random()} data={item}></CardItem>\r\n            ))\r\n          ) : (\r\n            <CardItem data={{ name: 'Nada selecionado', poster: URL_UNK }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectItem;\r\n","import { BOSS, ENEMY, ITEM, LEVEL_EASY, NULL, TRAP, INIT } from './constants';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n/**\r\n *\r\n * @param {Object} map necessário conter map.size\r\n * @param {Array} enemies array de inimigos\r\n * @param {Array} items array de itens\r\n * @returns retonrno uma array com posicoes aleatorias\r\n */\r\nexport const generatePositions = (map, enemies, items) => {\r\n  let positions = [];\r\n\r\n  for (let i = 0; i < map.size; i++) {\r\n    // gera um valor aleatorio para cada posicao\r\n    let key = [LEVEL_EASY[Math.floor(Math.random() * LEVEL_EASY.length)]];\r\n    let value = '';\r\n    // valida o tipo da posicao\r\n    switch (key[0]) {\r\n      case ENEMY:\r\n        value = enemies[Math.floor(Math.random() * enemies.length)];\r\n        break;\r\n      case ITEM:\r\n        value = items[Math.floor(Math.random() * items.length)];\r\n        break;\r\n      case TRAP:\r\n        value = { name: 'trap' };\r\n        break;\r\n      case NULL:\r\n        value = {};\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    positions.push({ [key]: value, id: uuidv4() });\r\n  }\r\n\r\n  positions[0] = { init: { name: INIT }, id: uuidv4() };\r\n  positions[positions.length - 1] = { boss: { name: BOSS }, id: uuidv4() };\r\n\r\n  return positions;\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} type tipo de mensagem, success, warning ou error\r\n * @param {String} message mensagem que aparecera no Toast\r\n * @param {function} setMessage funcao do useState, para resetar a mensagem\r\n * @param {integer} timer tempo em milisegundos\r\n */\r\nexport const messageHandler = (type, message, setMessage, timer = 3000) => {\r\n  if (type && message && setMessage) {\r\n    setMessage({\r\n      type: type,\r\n      content: message,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setMessage({\r\n        type: '',\r\n        content: '',\r\n      });\r\n    }, timer);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { URL_IMG } from '../../../utils/constants';\r\n\r\nconst Map = ({ data, handleClick, type = 'none' }) => {\r\n  if (data)\r\n    return (\r\n      <div className=\"card\">\r\n        {type === 'shop' && <span>{data.price}</span>}\r\n\r\n        <div className=\"card-image\">\r\n          <img src={URL_IMG + data.poster} alt={data.name} />\r\n        </div>\r\n\r\n        <div className=\"card-content\">\r\n          <span>NA: {data.name}</span>\r\n          <span>TY: {data.type}</span>\r\n          <span>LV: {data.level}</span>\r\n          <span>SZ: {data.size}</span>\r\n        </div>\r\n        {type === 'shop' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            buy\r\n          </button>\r\n        )}\r\n        {type === 'use' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            use\r\n          </button>\r\n        )}\r\n        {type === 'select' && (\r\n          <button className=\"width100\" onClick={handleClick}>\r\n            selecionar\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useContext } from 'react';\r\nimport { GameContext } from '../context/Game';\r\nimport { generatePositions } from '../utils/game';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport CardMap from '../components/game/card/Map';\r\nimport { URL_UNK } from '../utils/constants';\r\n\r\nconst SelectMap = () => {\r\n  const navigate = useNavigate();\r\n  const { items, enemies, map, maps, setMap, game, setGame } =\r\n    useContext(GameContext);\r\n\r\n  const handleSelectThis = data => {\r\n    // adicionar o mapa ao jogo\r\n    setMap(data);\r\n  };\r\n\r\n  const initGame = () => {\r\n    // configurar o jogo\r\n    setGame({ ...game, map: map });\r\n\r\n    // gerar as posicoes\r\n    try {\r\n      let positions = generatePositions(map, enemies, items);\r\n      setGame({\r\n        ...game,\r\n        map: map,\r\n        mapPositions: positions,\r\n        mapLength: positions.length,\r\n        heroPosition: 0,\r\n      });\r\n\r\n      // redirecionar e iniciar o jogo\r\n      setTimeout(() => navigate('/start-game'), 100);\r\n    } catch (error) {\r\n      console.warn(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-center\">\r\n      <div>\r\n        {/* loop pelos herois da api */}\r\n        <div className=\"card-grid\">\r\n          {maps.length > 0 ? (\r\n            maps.map(data => (\r\n              <CardMap\r\n                key={Math.random()}\r\n                data={data}\r\n                handleClick={() => handleSelectThis(data)}\r\n                type=\"select\"\r\n              />\r\n            ))\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* menu */}\r\n        <div className=\"menu-select\">\r\n          <Link to=\"/select-item\">\r\n            <button>\r\n              voltar{' '}\r\n              <span className=\"material-symbols-outlined\">navigate_before</span>{' '}\r\n            </button>\r\n          </Link>\r\n          <button onClick={initGame} disabled={!map}>\r\n            começar{' '}\r\n            <span className=\"material-symbols-outlined\">navigate_next</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* mostrar o heroi selecionado */}\r\n        <div className=\"card-grid\">\r\n          {map != null ? (\r\n            <CardMap key={Math.random()} data={map}></CardMap>\r\n          ) : (\r\n            <CardMap data={{ name: 'Nada selecionado', poster: URL_UNK }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectMap;\r\n","// generate random number from min to max\r\n/**\r\n *\r\n * @param {int} min\r\n * @param {int} max\r\n * @returns int\r\n */\r\nexport const random = (min, max) =>\r\n  Math.floor(Math.random() * (max - min + 1) + min);\r\n\r\n/**\r\n *\r\n * @param {Object} obj Valida se o objeto esta vazio\r\n * @returns\r\n */\r\nexport const isObjectEmpty = obj => {\r\n  if (!obj) return true;\r\n  return Object.keys(obj).length === 0;\r\n};\r\n","import React from 'react';\r\nimport { URL_IMG } from '../../../utils/constants';\r\n\r\nconst HeroInline = ({ data }) => {\r\n  if (data)\r\n    return (\r\n      <div className=\"hero-inline-container\">\r\n        <div\r\n          className={`card-image ${data.health <= 0 ? 'filter-grayscale' : ''}`}\r\n        >\r\n          <img src={URL_IMG + data.poster} alt={data.name} />\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          <div className=\"hero-inline\">\r\n            <span>\r\n              <b>HERÓI</b>\r\n            </span>\r\n            <span>\r\n              <b>VIDA</b>\r\n            </span>\r\n            <span>\r\n              <b>MANA</b>\r\n            </span>\r\n            <span>\r\n              <b>GOLD</b>\r\n            </span>\r\n            <span>\r\n              <b>EXP</b>\r\n            </span>\r\n            <span>\r\n              <b>NIVEL</b>\r\n            </span>\r\n            <span>\r\n              <b>LEVEL UP</b>\r\n            </span>\r\n          </div>\r\n          <div className=\"hero-inline\">\r\n            <span>{data.name}</span>\r\n            <span>{data.health}</span>\r\n            <span>{data.mana}</span>\r\n            <span>${data.gold}</span>\r\n            <span>\r\n              {data.exp}/{data.nextLevel}\r\n            </span>\r\n            <span>{data.level}</span>\r\n            <span>{data.nextLevel}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default HeroInline;\r\n","import React from 'react';\r\nimport { URL_IMG } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none' }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG + data.poster} alt={data.name} />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>RR: {data.rarity}</span>\r\n        <span>MI: {data.min}</span>\r\n        <span>MX: {data.max}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          comprar\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nconst Toast = ({ message, type }) => {\r\n  return (\r\n    <div\r\n      className={`message ${\r\n        type === 'success'\r\n          ? 'success'\r\n          : type === 'warning'\r\n          ? 'warning'\r\n          : type === 'error'\r\n          ? 'error'\r\n          : ''\r\n      }`}\r\n    >\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n","import React, { useContext, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport CardItem from '../card/Item';\r\nimport CardWeapon from '../card/Weapon';\r\nimport Toast from '../../ui/Toast';\r\nimport { SUCCESS, WARNING } from '../../../utils/constants';\r\nimport { isObjectEmpty } from '../../../utils';\r\n\r\nconst Shop = ({ show, setModalShop }) => {\r\n  const { items, weapons } = useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleBuy = data => {\r\n    if (!isObjectEmpty(hero)) {\r\n      if (hero.gold >= data.price) {\r\n        // compra de item e adiciona a lista do heroi\r\n        let newGold = hero.gold - data.price;\r\n        let i = { ...data, id: uuidv4() };\r\n        let newItems = [...hero.items, i];\r\n\r\n        setHero({ ...hero, items: newItems, gold: newGold });\r\n        messageHandler(SUCCESS, 'Item comprado com sucesso!', setMessage);\r\n      } else {\r\n        messageHandler(WARNING, 'Sem ouro suficiente para compra!', setMessage);\r\n      }\r\n    } else {\r\n      messageHandler(WARNING, 'O herói não foi selecionado!', setMessage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`modal-container ${show ? 'active' : ''}`}>\r\n        <div className={`modal ${show ? 'active' : ''}`}>\r\n          <div className=\"flex-justify-between\">\r\n            <h1>Loja</h1>\r\n            <h3 className=\"color-warning \">\r\n              Saldo do herói: ${(hero && hero.gold) || 0}\r\n            </h3>\r\n            <button onClick={() => setModalShop(false)}>fechar</button>\r\n          </div>\r\n\r\n          <h3>Itens</h3>\r\n          <div className=\"card-container\">\r\n            {items.length > 0 ? (\r\n              items.map(item => (\r\n                <CardItem\r\n                  key={item.id}\r\n                  data={item}\r\n                  handleClick={() => handleBuy(item)}\r\n                  type=\"shop\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <span>Nada encontrado aqui</span>\r\n            )}\r\n          </div>\r\n\r\n          {/* armas */}\r\n          <h3>Armas</h3>\r\n          <div className=\"card-container\">\r\n            {weapons.length > 0 ? (\r\n              weapons.map(weapon => (\r\n                <CardWeapon\r\n                  key={weapon.id}\r\n                  data={weapon}\r\n                  handleClick={() => handleBuy(weapon)}\r\n                  type=\"shop\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <span>Nada encontrado aqui</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {message && message.content && (\r\n        <Toast type={message.type} message={message.content} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport Toast from '../../ui/Toast';\r\nimport CardItem from '../card/Item';\r\nimport { ITEM, SUCCESS } from '../../../utils/constants';\r\n\r\nconst ModalItem = ({ show, setModalGiftItem }) => {\r\n  const { randomItem, getRandomItem, resetRandomItem } =\r\n    useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleGet = data => {\r\n    let i = { ...data, id: uuidv4() };\r\n    let _nwi = [...hero.items, i];\r\n\r\n    setHero({ ...hero, items: _nwi });\r\n    messageHandler(SUCCESS, 'Item adiquirido com sucesso!', setMessage);\r\n\r\n    setModalGiftItem(false);\r\n    resetRandomItem();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted && !randomItem) getRandomItem(ITEM);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [randomItem]);\r\n\r\n  if (randomItem)\r\n    return (\r\n      <>\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <div className=\"flex-justify-between\">\r\n              <h1>Presente</h1>\r\n              <button onClick={() => setModalGiftItem(false)}>\r\n                fechar\r\n              </button>{' '}\r\n            </div>\r\n\r\n            <div className=\"grid-container\">\r\n              <CardItem\r\n                key={Math.random()}\r\n                data={randomItem}\r\n                handleClick={() => handleGet(randomItem)}\r\n                type=\"select\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {message && message.content && (\r\n          <Toast type={message.type} message={message.content} />\r\n        )}\r\n      </>\r\n    );\r\n};\r\n\r\nexport default ModalItem;\r\n","import React from 'react';\r\nimport { URL_IMG } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none' }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG + data.poster} alt={data.name} />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>TY: {data.type}</span>\r\n        <span>MI: {data.min}</span>\r\n        <span>MX: {data.max}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          comprar\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { messageHandler } from '../../../utils/game';\r\nimport { ERROR, BOMB, TRAP } from '../../../utils/constants';\r\nimport Toast from '../../ui/Toast';\r\nimport CardTrap from '../card/Trap';\r\nimport { random } from '../../../utils';\r\n\r\nconst Trap = ({ show, setModalTrap }) => {\r\n  const { randomTrap, getRandomItem, resetRandomItem, game, setGame } =\r\n    useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleTrap = data => {\r\n    let _tpd = data.type;\r\n    let _dpf = 0;\r\n    switch (_tpd) {\r\n      case BOMB:\r\n        _dpf = random(data.min, data.max);\r\n        setHero({ ...hero, health: (hero.health -= _dpf) });\r\n        messageHandler(ERROR, `O herói sofreu ${_dpf} de dano`, setMessage);\r\n\r\n        if (hero.health <= 0) {\r\n          messageHandler(ERROR, `GAME OVER`, setMessage, 5000);\r\n          setGame({ ...game, end: true });\r\n        }\r\n        break;\r\n\r\n      default:\r\n        alert('[Trap.js] - Erro ao escolher o tipo de dano');\r\n        break;\r\n    }\r\n\r\n    setModalTrap(false);\r\n    resetRandomItem();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (mounted && !randomTrap) getRandomItem(TRAP);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [randomTrap]);\r\n\r\n  if (randomTrap)\r\n    return (\r\n      <>\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <div className=\"flex-justify-between\">\r\n              <h1>Trap</h1>\r\n            </div>\r\n            <div className=\"grid-container\">\r\n              <CardTrap\r\n                key={Math.random()}\r\n                data={randomTrap}\r\n                handleClick={() => handleTrap(randomTrap)}\r\n                type=\"select\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {message && message.content && (\r\n          <Toast type={message.type} message={message.content} />\r\n        )}\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Trap;\r\n","import React from 'react';\r\n\r\nconst Log = ({ fightLog }) => {\r\n  return (\r\n    <div className=\"game-fight-log \">\r\n      {fightLog.length > 0 ? (\r\n        fightLog.map((log, index) => <p key={index}>{JSON.stringify(log)}</p>)\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Log;\r\n","import React from 'react';\r\n\r\nconst Turn = ({ fight }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <small>Rodada: {fight.round || 0}</small>\r\n      </div>\r\n      <div>\r\n        {!fight.end ? (\r\n          <small>\r\n            Vez de jogar:{' '}\r\n            {fight.turn === 0\r\n              ? ' Vez do Herói de jogar'\r\n              : ' O Inimigo está atacando ....'}\r\n          </small>\r\n        ) : (\r\n          <small>\r\n            Fim da luta:\r\n            {fight.winner === 0 ? ' O herói venceu !' : ' O Inimigo venceu !'}\r\n          </small>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Turn;\r\n","import React from 'react';\r\n\r\nconst Play = ({ fight, flee, hero, hit, setModalUserMagic, setModalItem }) => {\r\n  return (\r\n    <div className=\"game-fight-menu\">\r\n      <button disabled={fight.end || fight.turn === 1} onClick={hit}>\r\n        lutar\r\n      </button>\r\n      <button\r\n        disabled={fight.end || fight.turn === 1 || hero.mana <= 0}\r\n        onClick={() => setModalUserMagic(true)}\r\n      >\r\n        mágica\r\n      </button>\r\n      <button\r\n        disabled={fight.end || fight.turn === 1}\r\n        onClick={() => setModalItem(true)}\r\n      >\r\n        inventário\r\n      </button>\r\n\r\n      <button disabled={fight.turn === 1 && !fight.end} onClick={flee}>\r\n        {fight.end && fight.winner === 0\r\n          ? 'sair'\r\n          : fight.end && fight.winner === 1\r\n          ? 'fim'\r\n          : 'fugir'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Play;\r\n","import React from 'react';\r\nimport CardHero from '../../card/Hero';\r\n\r\nconst Fight = ({ hero, enemy }) => {\r\n  return (\r\n    <div className=\"game-fight\">\r\n      <div className=\"text-center\">\r\n        <h4>Herói</h4>\r\n        <CardHero data={hero}></CardHero>\r\n      </div>\r\n\r\n      <h1>vs</h1>\r\n\r\n      <div className=\"text-center\">\r\n        <h4>Inimigo</h4>\r\n        {enemy && <CardHero data={enemy}></CardHero>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fight;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst LevelUp = ({ hero }) => {\r\n  const [activeClass, setActiveClass] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted) {\r\n      if (hero.level > 1) {\r\n        setActiveClass(true);\r\n\r\n        setTimeout(() => {\r\n          setActiveClass(false);\r\n        }, 1000);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [hero.level]);\r\n\r\n  return (\r\n    <div className={`level-up ${activeClass ? 'active' : ''}`}>\r\n      <span>\r\n        Subiu para o nível: {` `}\r\n        <b>{hero.level || 0}</b>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LevelUp;\r\n","import React, { useContext, useState } from 'react';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport { MANA, HEALTH, POISON, SUCCESS } from '../../../utils/constants';\r\nimport Toast from '../../ui/Toast';\r\nimport Card from '../card/Item';\r\n\r\nconst UserItems = ({ show, setModalItem }) => {\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    type: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleUse = data => {\r\n    // remove item da lista ao utilizar\r\n    let arrItems = hero.items.filter(i => i.id !== data.id);\r\n    let _itx = '';\r\n\r\n    switch (data.type) {\r\n      case MANA:\r\n        // TODO: validar mana maxima\r\n        setHero({ ...hero, items: arrItems, mana: hero.mana + data.value });\r\n        _itx =\r\n          'O Herói usou ' +\r\n          data.name +\r\n          ' e aumentou ' +\r\n          data.value +\r\n          ' de mana.';\r\n        setMessage({ type: SUCCESS, content: _itx });\r\n        break;\r\n      case HEALTH:\r\n        // TODO: validar vida maxima\r\n        setHero({ ...hero, items: arrItems, health: hero.health + data.value });\r\n        _itx =\r\n          'O Herói usou ' +\r\n          data.name +\r\n          ' e curou ' +\r\n          data.value +\r\n          ' de sua vida.';\r\n        setMessage({ type: SUCCESS, content: _itx });\r\n        break;\r\n      case POISON:\r\n        // TODO: validar vida maxima\r\n        // Aplicar condicao de envenenado ao inimigo\r\n        setHero({\r\n          ...hero,\r\n          items: arrItems,\r\n          equipped: { ...hero.equipped, poison: true },\r\n        });\r\n        _itx =\r\n          'O Herói usou ' +\r\n          data.name +\r\n          ' e envenenou ' +\r\n          data.value +\r\n          ' o inimigo.';\r\n        setMessage({\r\n          type: SUCCESS,\r\n          content: _itx,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setTimeout(() => setMessage({ type: '', content: '' }), 2000);\r\n    setModalItem(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`modal-container ${show ? 'active' : ''}`}>\r\n        <div className={`modal ${show ? 'active' : ''}`}>\r\n          <div className=\"flex-justify-between\">\r\n            <h1>Inventário</h1>\r\n            <button onClick={() => setModalItem(false)}>fechar</button>\r\n          </div>\r\n\r\n          <div className=\"grid-container\">\r\n            {hero && hero.items.length > 0 ? (\r\n              hero.items.map(item => (\r\n                <Card\r\n                  key={Math.random()}\r\n                  data={item}\r\n                  handleClick={() => handleUse(item)}\r\n                  type=\"use\"\r\n                />\r\n              ))\r\n            ) : (\r\n              <span>Nada encontrado aqui</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {message && message.content && (\r\n        <Toast type={message.type} message={message.content} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserItems;\r\n","import React from 'react';\r\nimport { URL_IMG } from '../../../utils/constants';\r\n\r\nconst Card = ({ data, handleClick, type = 'none', disabled }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {type === 'shop' && <span className=\"price\">${data.price}</span>}\r\n      <div className=\"card-image\">\r\n        <img src={URL_IMG + data.poster} alt={data.name} />\r\n      </div>\r\n\r\n      <div className=\"card-content\">\r\n        <span>NA: {data.name}</span>\r\n        <span>TY: {data.type}</span>\r\n        <span>MI: {data.min}</span>\r\n        <span>MX: {data.max}</span>\r\n        <span>MP: {data.mana}</span>\r\n      </div>\r\n\r\n      {type === 'shop' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          buy\r\n        </button>\r\n      )}\r\n      {type === 'use' && (\r\n        <button className=\"width100\" disabled={disabled} onClick={handleClick}>\r\n          use\r\n        </button>\r\n      )}\r\n      {type === 'select' && (\r\n        <button className=\"width100\" onClick={handleClick}>\r\n          selecionar\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport CardMagic from '../../card/Magic';\r\n\r\nconst ModalMagic = ({\r\n  modalUserMagic,\r\n  setModalUserMagic,\r\n  hero,\r\n  handleUseMagic,\r\n}) => {\r\n  return (\r\n    <div className={`modal-container ${modalUserMagic ? 'active' : ''}`}>\r\n      <div className={`modal ${modalUserMagic ? 'active' : ''}`}>\r\n        <div className=\"flex-justify-between\">\r\n          <h1>Magias</h1>\r\n          <h3 className=\"color-warning \">\r\n            Mana disponível: {(hero && hero.mana) || 0}\r\n          </h3>\r\n          <button onClick={() => setModalUserMagic(false)}>fechar</button>\r\n        </div>\r\n\r\n        <div className=\"grid-container\">\r\n          {hero && hero.magic.length > 0 ? (\r\n            hero.magic\r\n              .map(item => (\r\n                <CardMagic\r\n                  key={Math.random()}\r\n                  data={item}\r\n                  handleClick={() => handleUseMagic(item)}\r\n                  type=\"use\"\r\n                  disabled={item.mana > hero.mana}\r\n                />\r\n              ))\r\n              .reverse()\r\n          ) : (\r\n            <span>Nada encontrado aqui</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalMagic;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { random } from '../../../utils';\r\nimport { GameContext } from '../../../context/Game';\r\nimport { HeroContext } from '../../../context/Hero';\r\nimport Log from './fight/Log';\r\nimport Turn from './fight/Turn';\r\nimport Play from './fight/Play';\r\nimport Fight from './fight/Fight';\r\nimport LevelUp from './fight/LevelUp';\r\nimport ModalItems from './UserItems';\r\nimport ModalMagic from './fight/ModalMagic';\r\n\r\nconst ModalFight = ({ show, setModalFight }) => {\r\n  const { hero, setHero } = useContext(HeroContext);\r\n  const {\r\n    fight,\r\n    enemy,\r\n    setFight,\r\n    setEnemy,\r\n    fightLog,\r\n    setFightLog,\r\n    resetFight,\r\n    game,\r\n    setGame,\r\n  } = useContext(GameContext);\r\n  const [modalItem, setModalItem] = useState(false);\r\n  const [modalUserMagic, setModalUserMagic] = useState(false);\r\n\r\n  /**\r\n   * Causa um dano aleatório ao herói\r\n   */\r\n  const enemyTurn = () => {\r\n    let _rxn = random(5, 15);\r\n    let _sta = 'O Inimigo provocou ' + _rxn + ' de dano.';\r\n\r\n    setTimeout(() => {\r\n      setHero({ ...hero, health: hero.health - _rxn });\r\n      setFight({ ...fight, turn: 0, round: fight.round + 1 });\r\n      setFightLog([...fightLog, _sta]);\r\n    }, 1000);\r\n  };\r\n\r\n  /**\r\n   * Causa dano ao inimigo de acordo com uma escolha\r\n   * aleatória, entre o dano mínimo e máximo da arma\r\n   * equipada\r\n   */\r\n  const hit = () => {\r\n    let _wep = hero.equipped.weapon;\r\n    let _dmg = random(_wep.min, _wep.max);\r\n    let _stq = 'O Herói atacou, provocando ' + _dmg + ' de dano.';\r\n\r\n    setFightLog([...fightLog, _stq]);\r\n    setEnemy({ ...enemy, health: enemy.health - _dmg });\r\n    setFight({ ...fight, turn: 1 });\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {Object} data Magic Item\r\n   */\r\n  const handleUseMagic = data => {\r\n    let _mpp = random(data.min, data.max);\r\n    let _itx = 'O Herói usou ' + data.name + ' e causou ' + _mpp + ' de dano.';\r\n\r\n    if (data.mana <= hero.mana) {\r\n      setFightLog([...fightLog, _itx]);\r\n      setEnemy({ ...enemy, health: enemy.health - _mpp });\r\n      setHero({ ...hero, mana: hero.mana - data.mana });\r\n      setFight({ ...fight, turn: 1 });\r\n      setModalUserMagic(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Herói foge da batalha, perdendo uma parte do gold\r\n   * e de experiência se houver experiência para remover\r\n   */\r\n  const flee = () => {\r\n    if (fight.end) {\r\n      // sair sem prejuizo\r\n      setModalFight(false);\r\n    } else {\r\n      // sair com prejuizo\r\n      let expHero = hero.exp;\r\n      let expBase = 15;\r\n      if (expHero < expBase) {\r\n        setHero({ ...hero, gold: hero.gold - 15, exp: 0 });\r\n      } else {\r\n        setHero({ ...hero, gold: hero.gold - 15, exp: hero.exp - 15 });\r\n      }\r\n      setModalFight(false);\r\n    }\r\n    resetFight();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted && fight && enemy && hero) {\r\n      if (fight.end) {\r\n        console.log('Fim do jogo');\r\n      } else if (fight.turn === 0 && hero.health > 0) {\r\n        console.log('Vez do heroi');\r\n      } else if (fight.turn === 1 && enemy.health > 0) {\r\n        enemyTurn();\r\n      } else if (hero.health <= 0) {\r\n        let _ini = 'O herói foi derrotado!';\r\n        setFightLog([...fightLog, _ini]);\r\n        setFight({ ...fight, winner: 1, end: true });\r\n        setGame({ ...game, end: true });\r\n      } else if (enemy.health <= 0) {\r\n        let _itx = 'O inimigo foi derrotado';\r\n        setFightLog([...fightLog, _itx]);\r\n        setFight({\r\n          ...fight,\r\n          winner: 0,\r\n          end: true,\r\n        });\r\n\r\n        // validar o exp atual e realizar a evolucao do heroi\r\n        let _pex = Math.floor(55 + hero.nextLevel / (hero.level * 10));\r\n        if (hero.exp + _pex > hero.nextLevel) {\r\n          let _nxo = hero.exp + _pex - hero.nextLevel;\r\n          let _dpp = Math.floor(hero.nextLevel + hero.nextLevel / 2);\r\n          // evolução do herói\r\n          setHero({\r\n            ...hero,\r\n            gold: hero.gold + 65,\r\n            exp: _nxo,\r\n            victories: hero.victories + 1,\r\n            level: hero.level + 1,\r\n            nextLevel: _dpp,\r\n          });\r\n        } else {\r\n          setHero({\r\n            ...hero,\r\n            gold: hero.gold + 55,\r\n            exp: hero.exp + 55,\r\n            victories: hero.victories + 1,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [enemy, hero, fight]);\r\n\r\n  if (hero)\r\n    return (\r\n      <>\r\n        {/*  */}\r\n        <div className={`modal-container ${show ? 'active' : ''}`}>\r\n          <div className={`modal ${show ? 'active' : ''}`}>\r\n            <LevelUp hero={hero} />\r\n\r\n            {/*  */}\r\n            <h3>Luta</h3>\r\n\r\n            {/*  */}\r\n            <Turn fight={fight} />\r\n\r\n            {/*  */}\r\n            <Fight hero={hero} enemy={enemy} />\r\n\r\n            {/*  */}\r\n            <Play\r\n              fight={fight}\r\n              flee={flee}\r\n              hero={hero}\r\n              hit={hit}\r\n              setModalUserMagic={setModalUserMagic}\r\n              setModalItem={setModalItem}\r\n            />\r\n\r\n            {/*  */}\r\n            <Log fightLog={fightLog} />\r\n\r\n            {/*  */}\r\n          </div>\r\n        </div>\r\n\r\n        {/* inventario */}\r\n        <ModalItems show={modalItem} setModalItem={setModalItem} />\r\n\r\n        {/* magia */}\r\n        <ModalMagic\r\n          modalUserMagic={modalUserMagic}\r\n          setModalUserMagic={setModalUserMagic}\r\n          hero={hero}\r\n          handleUseMagic={handleUseMagic}\r\n        />\r\n      </>\r\n    );\r\n};\r\n\r\nexport default ModalFight;\r\n","import React from 'react';\r\n\r\nconst Position = ({ data, index, heroPosition }) => {\r\n  return (\r\n    <div\r\n      className={`position ${\r\n        heroPosition === index ? 'active' : heroPosition > index ? 'pass' : ''\r\n      }`}\r\n    >\r\n      {index} - {Object.keys(data)[0]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Position;\r\n","import React from 'react';\r\nimport Position from './Position';\r\n\r\nconst Timeline = ({ game }) => {\r\n  return (\r\n    <>\r\n      {game.map ? (\r\n        game.mapPositions.map((position, index) => (\r\n          <Position\r\n            key={position.id}\r\n            data={position}\r\n            index={index}\r\n            heroPosition={game.heroPosition}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          <span>Nenhuma informação encontrada</span>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","import React from 'react';\r\n\r\nconst GameButtons = ({\r\n  play,\r\n  reset,\r\n  game,\r\n  setModalItem,\r\n  setModalShop,\r\n  modalShop,\r\n  modalItem,\r\n}) => {\r\n  return (\r\n    <div className=\"game-menu\">\r\n      <button disabled={game.end} onClick={() => play()}>\r\n        jogar\r\n      </button>\r\n      <button disabled={game.end} onClick={() => setModalShop(!modalShop)}>\r\n        loja\r\n      </button>\r\n      <button disabled={game.end} onClick={() => setModalItem(!modalItem)}>\r\n        inventário\r\n      </button>\r\n      <button onClick={() => reset()}>reiniciar</button>\r\n      <button>salvar</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameButtons;\r\n","import React, { useContext, useState } from 'react';\r\nimport { random } from '../utils';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GameContext } from '../context/Game';\r\nimport { HeroContext } from '../context/Hero';\r\nimport Hero from '../components/game/card/HeroInline';\r\nimport ModalShop from '../components/game/modal/Shop';\r\nimport ModalGiftItem from '../components/game/modal/ModalItem';\r\nimport ModalTrap from '../components/game/modal/Trap';\r\nimport ModalFight from '../components/game/modal/ModalFight';\r\nimport ModalUserItems from '../components/game/modal/UserItems';\r\nimport Timeline from '../components/game/position/Timeline';\r\nimport { BOSS, ENEMY, ITEM, NULL, TRAP } from '../utils/constants';\r\nimport GameButtons from '../components/game/GameButtons';\r\n\r\nconst Game = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const { game, setGame, setEnemy, setFightLog, resetGame } =\r\n    useContext(GameContext);\r\n  const { hero, setHero } = useContext(HeroContext);\r\n\r\n  // modal shop\r\n  const [modalShop, setModalShop] = useState(false);\r\n\r\n  // abre o modal de acordo com a posicao\r\n  const [modalFight, setModalFight] = useState(false);\r\n  const [modalItem, setModalItem] = useState(false);\r\n  const [modalGiftItem, setModalGiftItem] = useState(false);\r\n  const [modalTrap, setModalTrap] = useState(false);\r\n\r\n  const reset = () => {\r\n    resetGame();\r\n    setHero(null);\r\n    setTimeout(() => navigate('/'), 0);\r\n  };\r\n\r\n  const play = () => {\r\n    if (game.mapLength === 0) {\r\n      // TODO: EMPTY MAP\r\n      return;\r\n    } else if (game.heroPosition < game.mapLength) {\r\n      let _apd = random(1, 6);\r\n      setGame({ ...game, heroPosition: game.heroPosition + _apd });\r\n\r\n      // verifica o tipo de posicao atual\r\n      let actualPosition = game.mapPositions[game.heroPosition + _apd];\r\n\r\n      // verifica o tipo da posicao do mapa\r\n      if (!actualPosition) {\r\n        // TODO: BOSS\r\n        return;\r\n      } else {\r\n        let actualMapPosition = Object.keys(actualPosition)[0];\r\n\r\n        // abre o modal de acordo com o tipo de posicao\r\n        switch (actualMapPosition) {\r\n          case ENEMY:\r\n            setEnemy({ ...actualPosition.enemy });\r\n            setModalFight(true);\r\n            setFightLog([]);\r\n            break;\r\n          case ITEM:\r\n            setModalGiftItem(true);\r\n            break;\r\n          case TRAP:\r\n            setModalTrap(true);\r\n            break;\r\n          case BOSS:\r\n            break;\r\n          case NULL:\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    } else {\r\n      alert('Boss');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      {/* hero */}\r\n      {hero && <Hero data={hero} />}\r\n      {/* timeline */}\r\n      <Timeline game={game} />\r\n      {/* modal shop */}\r\n      <ModalShop show={modalShop} setModalShop={setModalShop} />\r\n      {/* modal itens do ususario */}\r\n      <ModalUserItems show={modalItem} setModalItem={setModalItem} />\r\n      {/* game modal luta */}\r\n      <ModalFight show={modalFight} setModalFight={setModalFight} />\r\n      {/* game modal item */}\r\n      <ModalGiftItem show={modalGiftItem} setModalGiftItem={setModalGiftItem} />\r\n      {/* game modal trap */}\r\n      <ModalTrap show={modalTrap} setModalTrap={setModalTrap} />\r\n      {/* game modal boss */}\r\n\r\n      {/* game menu */}\r\n      <GameButtons\r\n        game={game}\r\n        play={play}\r\n        reset={reset}\r\n        modalShop={modalShop}\r\n        modalItem={modalItem}\r\n        setModalShop={setModalShop}\r\n        setModalItem={setModalItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport { Route, Routes } from 'react-router';\n\nimport Start from './pages/Start';\nimport Hero from './pages/SelectHero';\nimport Item from './pages/SelectItem';\nimport Map from './pages/SelectMap';\nimport Game from './pages/Game';\n\nfunction App() {\n  return (\n    <>\n      <Routes>\n        <Route exact path=\"/\" element={<Start />} />\n        <Route exact path=\"/select-hero\" element={<Hero />} />\n        <Route exact path=\"/select-item\" element={<Item />} />\n        <Route exact path=\"/select-map\" element={<Map />} />\n        <Route exact path=\"/start-game\" element={<Game />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nimport './css/reset.css';\nimport './css/index.css';\nimport './css/card.css';\nimport './css/modal.css';\nimport './css/game.css';\nimport './css/map.css';\nimport './css/hero.css';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ContextHero } from './context/Hero';\nimport { ContextGame } from './context/Game';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <ContextGame>\n      <ContextHero>\n        <Router>\n          <App />\n        </Router>\n      </ContextHero>\n    </ContextGame>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}